(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1725382,      37381]
NotebookOptionsPosition[   1678944,      36297]
NotebookOutlinePosition[   1680045,      36330]
CellTagsIndexPosition[   1679907,      36324]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A walk in the monetary policy forest", "Title",
 CellChangeTimes->{{3.713673798975441*^9, 3.7136738068166075`*^9}, {
  3.713674041927245*^9, 
  3.713674049633596*^9}},ExpressionUUID->"9730b673-68b6-4096-ad99-\
cf6e5e5f06dc"],

Cell["\<\
The idea is to identify a monetary policy decision rule that the CBR might be \
using to adjust the key rate. 

This will be hard: the surprise in the economic developments plagye not only \
private sector forecasters, but might be surprising to the CBR itself too. \
\>", "Text",
 CellChangeTimes->{{3.713674054189088*^9, 
  3.7136741675045567`*^9}},ExpressionUUID->"69bd0279-6357-42a4-94b2-\
966a12673ba1"],

Cell["\<\
The approach:
We attempt to fit a CART model to the track record of the 30+ monetary policy \
meetings that the CBR\[CloseCurlyQuote]s Board conducted in its more modern \
form. 
We use the data that has been available to the CBR at the time of the \
decision being made. \
\>", "Text",
 CellChangeTimes->{{3.7136741715072346`*^9, 3.713674239303794*^9}, {
  3.7136881647519116`*^9, 
  3.7136881865070868`*^9}},ExpressionUUID->"37cce717-b08b-4da5-b2dc-\
51f8501dd98f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The rough choice: Hike, hold or cut? ", "Title",
 CellChangeTimes->{{3.7136744594617805`*^9, 3.713674498770561*^9}, {
  3.714189683230942*^9, 
  3.7141896833557434`*^9}},ExpressionUUID->"4c1adce2-bd3e-4edb-8091-\
47d5dddad385"],

Cell["The variables:", "Text",
 CellChangeTimes->{{3.713674536045315*^9, 3.713674540235196*^9}, 
   3.713674885181262*^9},ExpressionUUID->"ba79e652-21da-4421-b5e9-\
ce94cf1075fd"],

Cell[CellGroupData[{

Cell["Decision: Hike/Hold/Cut [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674579495985*^9}, {
   3.713683496973316*^9, 3.7136834974413247`*^9}, 
   3.7136840094533024`*^9},ExpressionUUID->"8adcf6ce-3c33-47fc-a443-\
79257dc254cf"],

Cell["USDRUB, a 3wk change annualized [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.713674661929014*^9}, {3.713683490355387*^9, 
   3.713683492517229*^9}, 
   3.713693160170744*^9},ExpressionUUID->"4a56c25f-d826-4487-81a7-\
831971003e72"],

Cell["CPI, % MoM SA, 3 mma: momentum [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.7136747050740614`*^9}, {3.7136835005637865`*^9, 
   3.7136835008777924`*^9}, 
   3.713687988450283*^9},ExpressionUUID->"ea8f874c-134d-494d-b747-\
fc65215eb0a2"],

Cell["CPI, % MoM SA, 3 mma: acceleration [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
  3.7136746087007656`*^9, 3.7136747354582663`*^9}, {3.7136749846142483`*^9, 
  3.7136749846142483`*^9}, {3.713683501833411*^9, 3.713683502083016*^9}, {
  3.713687991426581*^9, 
  3.713687993458784*^9}},ExpressionUUID->"1ebbaa4d-4552-4912-b8a2-\
98682d446533"],

Cell["Inflation expectations of households, 12mo ahead: level [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.7136747354582663`*^9}, {3.713674987986926*^9, 
   3.713675073698248*^9}, {3.7136835026290264`*^9, 3.7136835029430327`*^9}, {
   3.7136880141498528`*^9, 3.713688021580596*^9}, 
   3.7136887794123716`*^9},ExpressionUUID->"dc315e79-1405-48e3-ae5f-\
8e5464cbac2e"],

Cell["Inflation expectations of households, 12mo ahead: change [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.7136747354582663`*^9}, {3.713674987986926*^9, 
   3.713675073698248*^9}, {3.7136835026290264`*^9, 3.7136835029430327`*^9}, 
   3.713688016909129*^9, 
   3.7136887812445545`*^9},ExpressionUUID->"2453495e-d12f-41d0-9931-\
7d81798c9280"],

Cell["Previous meeting\[CloseCurlyQuote]s real key rate [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
  3.7136746087007656`*^9, 3.7136747832312193`*^9}, {3.7136749531758223`*^9, 
  3.7136749592779408`*^9}, {3.7136835035046434`*^9, 3.7136835037718487`*^9}, {
  3.713689082632476*^9, 
  3.7136890836962967`*^9}},ExpressionUUID->"d89f0dc4-edc7-4ecb-9d7c-\
4a31b4c7a59c"],

Cell["Output gap: Positive/Zero/Negative [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.71367480381164*^9}, {3.713683504789869*^9, 
   3.713683505089275*^9}, 
   3.713689181256228*^9},ExpressionUUID->"bb604c62-7a92-4355-a9bb-\
8fa5e7212654"],

Cell["Is meeting core: Yes/No [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.713674803014024*^9}, {3.7136748909291797`*^9, 
   3.7136749065228863`*^9}, {3.713683508119135*^9, 3.713683508431141*^9}, {
   3.713689257683957*^9, 3.7136892584805727`*^9}, 
   3.7136893994587564`*^9},ExpressionUUID->"16da46e3-f346-4dc5-bec8-\
c0221bf7c751"],

Cell["Previous meeting\[CloseCurlyQuote]s guidance [v]", "Item",
 CellChangeTimes->{{3.7136745546742897`*^9, 3.713674578698369*^9}, {
   3.7136746087007656`*^9, 3.713674803014024*^9}, {3.7136748909291797`*^9, 
   3.7136749056940703`*^9}, {3.7136749414341917`*^9, 3.713674949875158*^9}, {
   3.7136835096811647`*^9, 3.71368350994837*^9}, 
   3.7136894012461915`*^9},ExpressionUUID->"84111314-c366-4e16-ac40-\
eb3d80b9aaaa"]
}, Open  ]],

Cell["Sample parameters: ", "Text",
 CellChangeTimes->{{3.7136751087179337`*^9, 3.7136751197873497`*^9}, {
  3.713683515196473*^9, 
  3.7136835157066836`*^9}},ExpressionUUID->"c1903f1a-c4d2-447d-ad1e-\
26b9a175bd67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fc", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sSample", "=", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eSample", "=", 
   RowBox[{"{", 
    RowBox[{"2017", ",", " ", "9", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713675125033452*^9, 
  3.7136752383461246`*^9}},ExpressionUUID->"4faedb6e-7ef0-45d4-ba0e-\
d424fd764156"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quiet", "[", 
    RowBox[{"<<", "Economica`"}], "]"}],
   FontFamily->"Consolas",
   FontSize->12,
   FontWeight->"Bold"], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7140989378488817`*^9},ExpressionUUID->"e2e887f0-68d0-47f4-bf39-\
56b10c962d36"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
   "dataDirectory", "=", 
    "\"\<G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\>\""}], ";"}],
  FontFamily->"Consolas",
  FontSize->12,
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "exportDirectory", "=", 
    "\"\<G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\\\\emf\>\""}],
    ";"}],
  FontFamily->"Consolas",
  FontSize->12,
  FontWeight->"Bold"]}], "Input",ExpressionUUID->"447c01c3-524c-4b36-a87f-\
a717fcd747d3"],

Cell[BoxData[
 RowBox[{"SystemOpen", "@", "$UserBaseDirectory"}]], "Input",
 CellChangeTimes->{{3.7136764107142253`*^9, 3.7136764358347273`*^9}, {
  3.7136804987941475`*^9, 
  3.713680500090973*^9}},ExpressionUUID->"d8de8add-ca7a-452f-8d21-\
c6f9dd835544"],

Cell[CellGroupData[{

Cell["Prepare data", "Chapter",
 CellChangeTimes->{{3.7136745978419504`*^9, 
  3.713674599841789*^9}},ExpressionUUID->"1b08afe2-037a-4f4e-8d31-\
367ff559d480"],

Cell["\<\
Let\[CloseCurlyQuote]s prepare the data...
First wee need the meeting dates... \
\>", "Text",
 CellChangeTimes->{{3.71367530585426*^9, 3.7136753139956226`*^9}, {
  3.7136753482409*^9, 
  3.7136753619087753`*^9}},ExpressionUUID->"ebd02a32-136c-4fac-922b-\
120d3b74865b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"prtxt", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dataDirectory", " ", ",", 
         "\"\<models\\\\core\\\\monetarypolicyCART\>\"", ",", 
         "\"\<MonetaryPolicyMeetings.xlsx\>\""}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<Sheets\>\"", ",", "\"\<PressRelease\>\""}], "}"}]}], 
     "]"}]}], ";"}],
  FontSize->12]], "Input",ExpressionUUID->"39c3c874-560d-401b-acab-\
38511b085524"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<Decision\>\"", "]"}], "=", 
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"3", ";;"}], ",", "5"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136835679269257`*^9, 3.7136835836370397`*^9}, {
  3.7136838696381273`*^9, 
  3.7136838766892653`*^9}},ExpressionUUID->"28cba052-217b-44d8-9300-\
3af95d9b2ddf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meetingDates", "=", 
   RowBox[{"ExcelDateToDateList", "/@", 
    RowBox[{"prtxt", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"3", ";;"}], ",", "1"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136830726830764`*^9, 
  3.713683102339841*^9}},ExpressionUUID->"923085e9-a96e-49e5-81c9-\
0358776217b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingDates", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7136832594960213`*^9, 
  3.7136832631496964`*^9}},ExpressionUUID->"a1c388f9-a7a1-4752-8962-\
112470ef003f"],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{3.713683263545704*^9, 3.713777607460472*^9, 
  3.7141298280299854`*^9},ExpressionUUID->"1baf078d-d774-4b1f-972a-\
438b136caf83"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"dyFX", "=", 
    RowBox[{"ImportTimeSeries", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dataDirectory", " ", ",", 
         "\"\<MonetaryPolicyERManagementDaily.xlsx\>\""}], "}"}], "]"}], ",", 
      "\"\<ExchangeRateDaily\>\""}], "]"}]}], ";"}],
  FontSize->12]], "Input",
 CellChangeTimes->{{3.7136827419584103`*^9, 3.7136827906382775`*^9}, {
  3.7136828517033834`*^9, 
  3.7136828811283255`*^9}},ExpressionUUID->"d102196c-fb04-4757-9646-\
638671d40f50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dyFX", "[", 
  "\"\<Foreign Exchange Rate: Bank of Russia: US Dollar\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7136829062555714`*^9, 
  3.713682907933043*^9}},ExpressionUUID->"60032224-1696-4e8a-8876-\
cc3434c2f0c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwtiQlMkwcYhhvMOCxYjkKxYRMEHdBtHOMqtP2/T2fZElhLEeTSIdpAgHWR
q2iIyjERkWMmdrNjgDs6sDgokkgi5xqFSUAM4oaAhEn//n8LyCFUxi6W7E2e
PHnyemV8JpNbMRgMwQ7/2cWmvVTRb8C6SJ242naAWInrJHx+M2D5YEX5vGiG
YN6xYy+vGZDz6bbWxspM3GEX5K8ySWwdlVCxNuvEmK9NuNKHRPW9q6Lcg9uE
b/yyoxNBYqBygKcgGcA6TxUuHCNx7uRZkWzeAUL7w1ZH8kj8s13D6xU7w2jn
7fHQGhKfv1CNJ8mcYU0THjX1A4mz+2MdG/tdIFHn2lM/QGJctrSF2+EK0T3W
w6VTJMqXVJXWw26gPesZsbFK4scZjkn8EA7Extb2ldgb0T5oKUhPcqDEizUu
PGBEh8rot5s73MHEXLA4gxGLAzn9ls1AGGmZL89OMWLXPS/DTUEE8MVr6u08
IyqPXf17UswHcitxuLnGiB06+e6G6wLY99PYxQsaI55/3VG38igKvixWS/IG
jai+sbNkAZRt1JYZp//vvUL4I08FqldGrDL1PEudEoLOeo2dzKLQneC2M4IJ
eKVOL0jwpTDl8rPB620E3Jq3hD8BCpO9A6qmVQQ0iV44ZaZSGGg9oS75SARe
DfNF7xdQGGTb5pFSIITfWSFrLnUUjoprv+1+QwhuYe2Pi1oplDFVhamVAnia
JhS4/Exh6FLOc15fFEze2Nern6Hw3PoU0+eSAE7+yv7l9gaFQ3Y0JHkLIH0o
mM/dQ+PN6tPSo3QkNI5+36/2pTHBuzdRfCISsp74PT6KNDIUPy58RfLhzKrV
1v40GruN51hxygiwYb3U+hfSWBX24d0DynBwnNul76qhMX/Zby7rFB+S7ueu
yFpoZGu5scGJCO+2US3+gzQmJXctz74kAFq7lW4zNE4rhJcNRUJ4kKS7VbFJ
4xWn4uO7XAmYsu3NeodlQvmp3qH4ByLgPfIQUn4mPFLqzG72FMBuVV3D7CET
Zn2tyOFYhJDG4qUnpJrwg2vBGlWUCBYbuZHzhTv/TE31NxIAu4A3mzS1JnTX
7wmIaxKBfDKfe7HVhEx9rsd3EgJC3lvfmtab8P6kbFHLAaiv/Pz0mRkT8n0I
ndU4gr8lx8C1mHB8PTVXdeUQxGXKV/9imfFw36BAUiaFu0udLhv+ZrTf6zYx
lh0D9Qf91IojZrz28CRKtXGw+Umn1uuEGTvWAyUVCimo2+smqGIzqltbMhwe
SmDknwuX6C/MqOHlxGd6xsDSa+lb4Vozyo9ro58uxsC/1qLJpg==
               "]]},
             Annotation[#, "Charting`Private`Tag$64761#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{2.9189376*^9, 0},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{2918937600, 3713644800}, {0., 70.67677340078288}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 1992\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"06 Sep 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["5693",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwtiQlMkwcYhhvMOCxYjkKxYRMEHdBtHOMqtP2/T2fZElhLEeTSIdpAgHWR
q2iIyjERkWMmdrNjgDs6sDgokkgi5xqFSUAM4oaAhEn//n8LyCFUxi6W7E2e
PHnyemV8JpNbMRgMwQ7/2cWmvVTRb8C6SJ242naAWInrJHx+M2D5YEX5vGiG
YN6xYy+vGZDz6bbWxspM3GEX5K8ySWwdlVCxNuvEmK9NuNKHRPW9q6Lcg9uE
b/yyoxNBYqBygKcgGcA6TxUuHCNx7uRZkWzeAUL7w1ZH8kj8s13D6xU7w2jn
7fHQGhKfv1CNJ8mcYU0THjX1A4mz+2MdG/tdIFHn2lM/QGJctrSF2+EK0T3W
w6VTJMqXVJXWw26gPesZsbFK4scZjkn8EA7Extb2ldgb0T5oKUhPcqDEizUu
PGBEh8rot5s73MHEXLA4gxGLAzn9ls1AGGmZL89OMWLXPS/DTUEE8MVr6u08
IyqPXf17UswHcitxuLnGiB06+e6G6wLY99PYxQsaI55/3VG38igKvixWS/IG
jai+sbNkAZRt1JYZp//vvUL4I08FqldGrDL1PEudEoLOeo2dzKLQneC2M4IJ
eKVOL0jwpTDl8rPB620E3Jq3hD8BCpO9A6qmVQQ0iV44ZaZSGGg9oS75SARe
DfNF7xdQGGTb5pFSIITfWSFrLnUUjoprv+1+QwhuYe2Pi1oplDFVhamVAnia
JhS4/Exh6FLOc15fFEze2Nern6Hw3PoU0+eSAE7+yv7l9gaFQ3Y0JHkLIH0o
mM/dQ+PN6tPSo3QkNI5+36/2pTHBuzdRfCISsp74PT6KNDIUPy58RfLhzKrV
1v40GruN51hxygiwYb3U+hfSWBX24d0DynBwnNul76qhMX/Zby7rFB+S7ueu
yFpoZGu5scGJCO+2US3+gzQmJXctz74kAFq7lW4zNE4rhJcNRUJ4kKS7VbFJ
4xWn4uO7XAmYsu3NeodlQvmp3qH4ByLgPfIQUn4mPFLqzG72FMBuVV3D7CET
Zn2tyOFYhJDG4qUnpJrwg2vBGlWUCBYbuZHzhTv/TE31NxIAu4A3mzS1JnTX
7wmIaxKBfDKfe7HVhEx9rsd3EgJC3lvfmtab8P6kbFHLAaiv/Pz0mRkT8n0I
ndU4gr8lx8C1mHB8PTVXdeUQxGXKV/9imfFw36BAUiaFu0udLhv+ZrTf6zYx
lh0D9Qf91IojZrz28CRKtXGw+Umn1uuEGTvWAyUVCimo2+smqGIzqltbMhwe
SmDknwuX6C/MqOHlxGd6xsDSa+lb4Vozyo9ro58uxsC/1qLJpg==
               "]]},
             Annotation[#, "Charting`Private`Tag$64761#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{2.9189376*^9, 0},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{2918937600, 3713644800}, {0., 70.67677340078288}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 1992\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"06 Sep 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["5693",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["86400",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
ZPyaf5Nr3acoflHPD5juM27heXNiH7Wv6Cyeg7fQw/V4j+dteKyb8dyasTzf
6wgffdfGR39SWx/PT0XnHSrO/JV+1fA8s4N5np58r/jgIB99aVupPyW8buYj
Pj02eh/2S/A8nFKffXQe+mYlbtb8u8SLWgeTuFr7cX+hv27uo06Y85Gf9KP5
a15O/CbOAfER54d1mpOZTxL9RB6TdaYcz3kbxnMPb4jO09O45HWeD/ZmdI4d
+hiYHxM50nzlhayXnc9z2tpE52WqP92b5xFuYL73UB/4cb/w3DLmpxYzT7GT
dY3PPfTnrPbQ//IHz5FaTr82K6rLaf7+QebRX2L+cC7zjds97Et8zwO+fo+4
aTr5+jHj6fuYL3zYA24YyjzIKRHVOsn5vE/8q+qnIa4q9yB/GY99BsyLCdV+
jE4e7FLWA386eJALy0PfxREe8HMjnnNU6qGfuLUHPFPP4756z9zdQf5D/K36
+99cxLctmIf6j4u+68Y8f+twno8kVOPEIz3IQ5FnYoGjKuF5Tc099oF6jDc8
2LPGxG/iJ1R/BV8oDjjeQ357PM+FfcTjuZfMQzzuYd/4Bx7q/1N5ftdEnmc7
24Oevctzbd+hvMu6aHw6j/ml6ZSblaxjLfJgDzYyj7yS+aB1HvIIsr663/07
D35zGesKfzMvVUZ5PYDnLYr+av+I+DXF/9NpBx/x0a/1MOvHnZlfruMjnhK7
ov0N61iXqGL99zLiOMGdWj8TfdEw7wof+x8EH+p+qCd84OP7qF/VPCdO7I/m
NTPEr418xof8ndgNxTFyreskeF/zIj191NtFHxGn+dxP7COv389HXHE07Ybg
VuAQjqvgQ67FLmjfyqk853M47e14n+c70d4LLtb9xV+yzrrNR76qyMBfHGRQ
325rkJ8X/6z44SjDvKCPPMkU34zcMeiPlSt84LEm9Nv9DfrjTzGo113OOEr8
qeKEwQbyeokBDpb7Ve8vNMhHXWMQn08w2D8xzmDfyQTGXc8axCsjDPgkz9f9
iIIvFC/2MTzfzKCe1N0gLyT4BflIwz4ugz5smaf25bcxqPPJPLXO0I18kHhP
49cL+RwZv+bvbjHoGxXcoOW3UQb91DIv1O0N8jeCL9RfyTXwpkGd9FJjHj1b
JGW4wfrIPHEOrUEeSO7H+XnECzdyvvI+jd/uN5DT2wz8/RDijLsM7Nh97NsY
z88nGsQxkwzOS3mRfSQzOK+XDfMQBnIsfMZ5twZ5yaEc//GG9Q6DOoPgAbWf
wkcNZ1qw72M88+czovhb8ehCnju8nvX5GONw4bvWWwWvaRwjz9V8VGuD/a6C
D9UeN+Z6yPeKF+R7LZ8dY5DXP9pgf7LgLMVNB7OP6WCuT0viyYYG+2cEFykb
VrGfZD3P753ps0+f+jWF51d+ynMqN/K6HvteGlDu4wbx01HswxC503Nv2nM+
PSjPgisRx7B/R3Cr4v1+Bn6iH9e5F+WoymBfwUD2ad1s4NcuI+463QBHiLzp
vnmRF+x757XIi+5LuscgnpzI/qBHDfa7jSaevYa49QzDc5kN4irB7egzpf5c
RPkSqvwSiv0YxK3XMF64zmC/m1yrny8wHqgxsK/HGcQ1BerrydTDvuwvGmsQ
Pz5ouL/Y8PwJ9ilNMYjrphn4j9dpBz43qOP/Yhins19qrwz3VWUQ5/XPQL4K
GdQne2WAgydmeH5+BnmZRzI4d/ONDPvlM8jznpxB3J7L8BzTDOR4EPvW5Frl
/KIM1nlSBnn7URnOI4N1WZCBH/yB/W9fZaBX72aAt9/PQG5WZswCYee5+5Sj
jhcvB1/blyPObVtugnT48oblyAM1LYc+tyqHHT62HP2nXjn0wCpHPFZdjjxP
TTnemy5HfLZ/OeK2fctRB5Xfq38tK0c/0B8Z5NmEL+qfZB6Ka2X86v8+zvDv
hWfgJ2X+mneUeWm8NCsD/D0jg7zbvAzw6ncZxNXzM8hrfprh/vcM8mPbMoiX
ZJ5a3/s9g/hzTob+LYO4ZnEG59cuyiB++4r9fXK/9nvuWY467pIM4sNlGeCc
NRmce/BFBvWUdzLApbdkkCd4MIN4+pIM/VgGeYITM+w3yCBfMTCDOmw2A39t
MogvD8mgP+TwDOrADTLoQ2iZQV+ElwGu75MBTpHnaF/f4Azw2U0Z+N8xGfQV
XpZB/qtvBvXgIzLAF+0yqIe2zUA/Rb7VP56dQf/JuRngsNYZ6Hln9l3K+FS/
dhjgty2G9XuDutlnBvWaNQb5reZc9xYZ4OtEhv41g/MP5L16zlCXDO1lBnmU
Xw36SupRHoQfWk+ScWvdqkMG58KclQFuHpfh+ScZ1LtlPbQuI/PR+uAIrvut
GcRrkzOIRxayT/XbDOLh6Rmez5cBzhD5UHy0ivzer5zzKUc+UPRB5XMf6lGj
cvZNlzMPUo71rFOO9Re50rqUPEfzvnKf9iMcUY7z3OU+4CbKX1E56kJCFW+3
oX5dVY581ZPl/Lvz5ciLP1MOO3wW33NlOXDnyHKcVzisnPkS9tu+VI483Rfl
sEc7yxHf9+8KfNCuK/qUOneF/+rUFfmQiq7A0cd1RR91h67or2zdFX1HA7qi
L/nlruCTUO2PX9SV50N0RR1hSVfMY0dX+LHlXZF/lWv8PaGuyAce0A04sW03
5rW68RyYbpCTU7rhnOvh3ZA3uqQb7OGt3RAXDe2GfM073SAXP3dDH8PWbty/
2x3yU9Md8efU7qjbb+uGOuqxPdDnfF8P7I/a0BP4YVMP/r36HsBDR/bEfsEm
PWG3p/ZEH8NzPcGv63pCDob1RJ9r/57Aez/1gJ05swf3O/cAfunSE3Hbop48
h6UXcNrPvdnf0Rv2oX2lCdzPmydUsB+yAn7x6Qqs/wGVwD+HVPJclUrUky/N
Il46Koc4b2wV+oU3FdD3+HEO+K1fFeqBfhZ9D70qIWdeJXBdVQXs4F4V2LfZ
Lwtc1yqLdTgoi+cOzCNe7lyAP761gHyjXGuetLKAOMwrwE75BZwXckaBfw+o
AJwzNY9+okEF6NeWAuK4DwqI34+pxnrb1fBX51WDzxsL6BsYwPe1qYbdvrmA
vs9LC4ij5HutXwwrIE8h41R82b0Au903Dzt1Xh77BY7Ng/9N83j+sir43Xfz
wNOVefQf9a9iHrmKfUB57I88Jm8C87t+fRXs029VwCd/57Af7rgq1JP75ZFP
GVKFevAzVch3l+RhJ7+vQj/J5Cro8a857G/aq4p9tTn0q5yew/lYL2eB07pk
sd7fZpG3tHM8pyiLutrROfRrXZ8Frjg1C7tankV/xnOV6BvesxLnYnSvAL69
vTf6A7pUoO9me2/gV9MbfWWLe8H+dO2NOPe93tznUgEc+0UF/q7FR71h/1v0
Rt7lrd7Ii7euAG5Y0pt1rd7wM9/3Rl5sRy/gmmN6o650am/kzS7vjThtTi/0
+zfoDf9Ztzf8+0O9MN/xvYDjfuqF+tp/eiFPJtcqz+t6YT9fW+rjzb0Z/1SA
79dWIB9wbgXy69MruM+zAjj5+krEVy2yqAfunUU/1ZZK9DOdW4k+2K6V0JfH
KrFPYe9K9CtvroAdeq4C9ZdVFaiXz69AH8X+lYhXG1Ry31Ml8N85lcBfsyux
v2lNJfYvv1VJvnMdP67kuRNZBgBZnpOVBY67juM+Lgv+5LKQV/lc43f5XOXs
miz65s7Poq/tvCzyWTdmgXNvziIfOiULOdkrhzzRmTnsyzqwCnnqH3KIM6/P
IT4+qgq4yc7Drl2RZ99NHjhrXR55nDV55MtaFLCv9sE8/HymgHjt7zzqHXYB
ePTUAuKkKwrE6QXsA3i7APterxpy+2I18lzXVqPfqm81+jmWFdAv/kgB9fsp
BeDg4wvY5/h8AX26swqQtzUFxHctaI86VgNv/VwAjpPPtT+1TjXkbUcBfdwL
Cqi3Dy1AHvoVUIc8t4D80B0FxNUjCzjHReycnqszqQA7fX4B9Ryxr1oXvIvj
kIBM+9HKC7BH1xYQh55dQLzfo4D6Wv88+qUPyyP/+mQV5FX8iMqN2DfNB96V
RxzcIo86w5QqxC/Tq7CPuTSPOKiQx/jOzCNP9XsVz73NIw8yK4/16VuAHW1Y
AB6LF9CXsyoP3Lk2D783Lc9zf/LEvwWcz9isADt2aAF2+uQC+PtMAbjl4QLy
zAMLyGt14PpZBchTsoD+/LPoJ4Qvar8Gcr2Er1qHEn5qH+CLBZ53UgC+k2vN
+4k/0rjs1wLigJbViFtrqvn3yKph13LV8L+V1fBHo6uR93q1mucFViPv+2Q1
8heLqtE/8Vk1xjO/GvhlRjVw6WnVwBNjqtGfN7UadrllH8ShqT7IQ9t9gNO3
90Gfausa4IEDamAvW9WgXn1oDfzuczXw2xNroI/f1qB++FNfnCt1aF/UWS6t
Qd/hFX0h5+/U4H39apDf/bAP/GxpDeW7BuvzWQ3qx81rkDc+rgbymqyBXX2+
BnmDOTXY3z+/BvbtuxrEU4NrkL9qUoP82JU1iPu/7YN6UrwG8tarBvFBsxrU
PYRqHmRuH+LGPvCTw/qgT+mcPtg/dXkf2KPKPuBLog/i/rnViBfHVmMcd1QD
Fz5WzXNMqmFXD+F6N+O6HVvN8/4LsKerCzzPpxr29IBq9NXI95ofaV8NXLaq
gPzV7wXgc8FF2tdxZDX0K1WNPqBW1ezDLCCe/7aAvMf7BdQNxxdQNx9cQF1l
YgH718SOaD6gqBpU7A3q9wXkQ8SuKs4fXcB+QtErPQ9O9ErxdkUBeLlnAfmd
sgLw0YgCcOM1BcjvqALqdeMK6Eu4i/rpFtBHI/Za6wKpAs7HallAXNOtgP1g
dxawDvcXkLeZXUA/klDN08h7NC+eK8BfyPhVHoYXkP+9oYC8y9MFnMfxIu36
awXUZwUvarwsv9c+uCMLwA3L86gPHl1AP8RNBeCkIXz/VQX0EwrOVPvZgJ83
KqBO/U0efq+U63JaAXFD1wL6Mo4tACc0LcAuyO9Ur+sW0Jcq9k5xR1EBceXh
BeC5PQvwc00KiJMbE19vzoMPYjc1f/BBHvp5bx71oNF59PVcn0e+/9U84u/l
xJ3yfM1/iX1szoSe5quv5XtvK7BOVIBeXVeAvZleQN4xtIcPFIBPziwgP9yd
drZjAfnuTgXka50C7IvIjead9i1AP7fmER+JP9e4fV4edYU/86j770s5FHuu
+YtOtMsO+diugHPS5L2Kb2U+mtcvcLxCcU5ugfulCrC7ncnnRAHx+PY8/k6f
+Cf1P7Juij9k3fTcBYlvNM8pcqN5F4lzNA6Q9+k+ivbU5wMpHz/lsc9V8Iza
iwbk79d51P9k3tqHOC4PfC/xkeYreuSRt0zmYb8txl8d8sBRrfl7udY4MpFH
HVbiFe1zmJyHXN6QR35tLH8/OA+cUpHnPpY8+uDSeej9QXmes5lHf1erPHDh
8Dzk+7I8cSSf90Aeff8iV4qnxM/jXLg8+quW039vyiMekfvUjgr/NM99Jf2y
4Bjd53cw9VT4qfsVBa/gPMQC/MNn1K86BeyzFvlV/9OmgD5J+Z32j4hcaL4l
T1wkeoX+jgL6rH7PY//F+jz2act4UTfJo576VB64fUEV8hK3V0E/zq5C/nVh
FepCErdpfPlTFXBUSO+sgt5dVAU5u7AK+erLq4Cj5FrjE4kPsb+0CvLTtwo4
e1MO+1L+ymF8pVU4t+AdxvUv5iBfEudr/mpaDvnQ+3LIi03JwQ58mQNempWD
X3ooh36TsTnE7wtzkJ/Dq5D/kfeon2hYhTxSmyqeQ5pDvf+ZHPDmSTnkre5n
PPpuDnh0WA6484Ic7FW9HM7dW57FeUenZ1GnHJvleaZZ1CMb51AnWpuFfXsr
C3z4R5b5nCzqbu1ziGc65bCf4fIc8r5H5pCvbZVDHui8HOU0h/j57hzPQ8+h
X350DvXYFjnYXXmP5v+eyKIP5+Es+0iz7A/LAr+9loXcStyjeeyrssCrw7LI
x7bPIs/7VyXkvCiL/F/PLPqWNlWCL8ks4osrsjwvLYu+ySFZ5GMlTtc+OonL
NB11WBbnQLXMon6+oxLziGURL3TOwq42zyI/1DCLOvVvlbC/h2cZD2SRZ5I4
T/swJb5T3DMyC/v+QRb4rVsO+tcwBzw/Oov4e1wW+aiuWeRzW2WRBx6YhZ+d
kUU+TO7T+MzPoq4p89d83CFZ4IL6WewnOJX86p9l3JKFHzkhizxLt+ha/XMV
1+H4LOKxyiz6x67P4hxmiUu1H+HyLPp5hjHvNT2LuF3kUO3sX8yDVOR4/m4V
/+5TFfo+FuW43zOHfRCDc+Dz3Bz0dUQO+OnlHPzRtTngsodzjO9yiNNaMN/T
vgr2qXUV6vIDq4DL8lXAH/Eq7tPNwc7dTn0WPdd9s4/ksO9qBPX/qhzP6cuB
j7/kwPctpK/k8HdYZLyKq+pXoQ7/Ww77BSqqgH9PrUI+rm0V4qF6Vahjib5r
X9S2HOrPf+QQD8o4NS+zKgf79nsO+1i+yKEPb2IO/vuFHPqW7qE9Gp7DOgR6
GBjAMTnYGfle8909yEeRO7WnJ+eQl+ieg/2uR71fmcV+rt+y5v8AlAQ1Mg==

    "], CompressedData["
1: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
LULGDS87J2LEvXN8mfD/AZOEzgE=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.713682975240509*^9, 3.713777644464347*^9, 
  3.714129905787757*^9},ExpressionUUID->"d6521c65-473a-4d52-8e49-\
4b399ad201a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"week3Date", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"DateObject", "[", "#", "]"}], "-", 
       RowBox[{"Quantity", "[", 
        RowBox[{"3", ",", "\"\<Weeks\>\""}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"DateObject", "[", "#", "]"}], "-", 
       RowBox[{"Quantity", "[", 
        RowBox[{"1", ",", "\"\<Days\>\""}], "]"}]}]}], "}"}], "&"}], "/@", 
   "meetingDates"}]}]], "Input",
 CellChangeTimes->{{3.713682947865204*^9, 3.7136830103066516`*^9}, 
   3.713683048780303*^9, {3.7136831143306303`*^9, 
   3.7136831760460577`*^9}},ExpressionUUID->"5054bd8b-5b92-418c-95e6-\
2330391ab7c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 24 Jan 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "1", ",", "24"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 13 Feb 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "2", ",", "13"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 10 Feb 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "2", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Sun 2 Mar 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "3", ",", "2"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 21 Feb 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "2", ",", "21"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 13 Mar 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "3", ",", "13"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 3 Apr 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "4", ",", "3"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 23 Apr 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "4", ",", "23"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 26 May 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "5", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Sun 15 Jun 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "6", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 4 Jul 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "7", ",", "4"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 24 Jul 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "7", ",", "24"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 22 Aug 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "8", ",", "22"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 11 Sep 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "9", ",", "11"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 10 Oct 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "10", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 30 Oct 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "10", ",", "30"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 20 Nov 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "11", ",", "20"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 10 Dec 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "12", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Tue 25 Nov 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "11", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 15 Dec 2014\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "12", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 9 Jan 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "1", ",", "9"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 29 Jan 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "1", ",", "29"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 20 Feb 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "2", ",", "20"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 12 Mar 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "3", ",", "12"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 9 Apr 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "4", ",", "9"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 29 Apr 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "4", ",", "29"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 25 May 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "5", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Sun 14 Jun 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "6", ",", "14"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 10 Jul 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "7", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 30 Jul 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "7", ",", "30"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 21 Aug 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "8", ",", "21"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 10 Sep 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "9", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 9 Oct 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "10", ",", "9"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 29 Oct 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "10", ",", "29"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 20 Nov 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "20"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 10 Dec 2015\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "12", ",", "10"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 8 Jan 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "1", ",", "8"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 28 Jan 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "1", ",", "28"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 26 Feb 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "2", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 17 Mar 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "3", ",", "17"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 8 Apr 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "4", ",", "8"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 28 Apr 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "4", ",", "28"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 20 May 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "5", ",", "20"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 9 Jun 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "6", ",", "9"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 8 Jul 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "7", ",", "8"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 28 Jul 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "7", ",", "28"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 26 Aug 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "8", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 15 Sep 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "9", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 7 Oct 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "10", ",", "7"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 27 Oct 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "10", ",", "27"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 25 Nov 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "11", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 15 Dec 2016\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2016", ",", "12", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 13 Jan 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "1", ",", "13"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 2 Feb 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "2", ",", "2"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 3 Mar 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "3", ",", "3"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 23 Mar 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "3", ",", "23"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 7 Apr 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "4", ",", "7"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 27 Apr 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "4", ",", "27"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 26 May 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "5", ",", "26"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 15 Jun 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "6", ",", "15"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Fri 7 Jul 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "7", ",", "7"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 27 Jul 2017\""}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2017", ",", "7", ",", "27"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136830132569485`*^9, 3.7136830490143104`*^9, {3.7136831459546614`*^9, 
   3.713683177270898*^9}, 3.7137776459016304`*^9, 
   3.7141299208899546`*^9},ExpressionUUID->"d73fa944-a13a-48bd-94ee-\
8e40e714ef53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usdrubChange", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "dyFX", "[", 
          "\"\<Foreign Exchange Rate: Bank of Russia: US Dollar\>\"", "]"}], 
         "[", "#2", "]"}], "/", 
        RowBox[{
         RowBox[{
         "dyFX", "[", 
          "\"\<Foreign Exchange Rate: Bank of Russia: US Dollar\>\"", "]"}], 
         "[", "#1", "]"}]}], "-", "1"}], ")"}]}], "&"}], "@@@", 
   "week3Date"}]}]], "Input",
 CellChangeTimes->{{3.71368318404912*^9, 3.7136832413280616`*^9}, {
  3.713683291203055*^9, 
  3.713683298232592*^9}},ExpressionUUID->"2f17e2dd-31cd-48eb-8dc8-\
9f3f96ed8180"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.1334923927671223`", ",", "4.433044340046632`", ",", "2.011630832890643`",
    ",", "1.2107217524261138`", ",", "0.9142943023243255`", ",", 
   "1.7990986960043864`", ",", "2.305424739277284`", ",", 
   "6.684592296148084`", ",", "15.271723645209168`", ",", 
   "29.19751763231304`", ",", "10.864332326968974`", ",", 
   "0.8836211405955474`", ",", 
   RowBox[{"-", "3.1889610750180486`"}], ",", "10.154254454638313`", ",", 
   "4.889760145172972`", ",", "0.9872940586133749`", ",", 
   "4.8506923598023555`", ",", "6.6058664037466075`", ",", 
   "5.537140147041231`", ",", 
   RowBox[{"-", "7.025914711969305`"}], ",", 
   RowBox[{"-", "3.8854799693197273`"}], ",", 
   RowBox[{"-", "2.3127576988717924`"}], ",", "2.961280249804843`", ",", 
   "0.04280485758145769`", ",", 
   RowBox[{"-", "0.2088475717262228`"}], ",", 
   RowBox[{"-", "5.910759904004315`"}], ",", "1.3649244173734365`", ",", 
   RowBox[{"-", "1.3195403951943852`"}], ",", 
   RowBox[{"-", "0.2193600286337527`"}], ",", "1.7124991751396923`", ",", 
   RowBox[{"-", "0.5517690139535847`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.713683238271002*^9, 3.7136832417582703`*^9}, 
   3.7136832985913987`*^9, 3.7137776466660748`*^9, 3.7137792218926697`*^9, 
   3.7141299214857626`*^9},ExpressionUUID->"487dc0ae-8e59-4b87-baf9-\
341b0bcc33c4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<usdrub3wChange\>\"", "]"}], "=", "usdrubChange"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7136834504923973`*^9, 
  3.713683474644477*^9}},ExpressionUUID->"4c1d0f7e-a232-415f-b0a2-\
f2380254e12c"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"cpi", "=", 
    RowBox[{"ImportTimeSeries", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dataDirectory", " ", ",", "\"\<ConsumerInflation.xlsx\>\""}],
         "}"}], "]"}], ",", "\"\<CPIMOMSAFin\>\""}], "]"}]}], ";"}],
  FontSize->12]], "Input",
 CellChangeTimes->{{3.7136842286359167`*^9, 3.71368422975954*^9}, {
   3.713684269356139*^9, 3.71368428567406*^9}, 
   3.7137778918564715`*^9},ExpressionUUID->"dd35775f-64fd-4af4-bc6f-\
e1dd35592136"],

Cell[BoxData[
 RowBox[{"[", "]"}]], "Input",
 CellChangeTimes->{
  3.7136844212471557`*^9},ExpressionUUID->"83a4febd-42b0-4bb5-96ae-\
7d4ed64d3629"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pimmsa3mma", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"cpi", "[", "\"\<CPI, % MoM SA\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\<Month\>\""}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136843774346943`*^9, 3.7136843834648123`*^9}, {
  3.713684447636794*^9, 
  3.713684486178648*^9}},ExpressionUUID->"f19854e9-6678-482d-b2c1-\
cdd53fdb7e4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiMomentum", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", "meetingDates"}]}]], "Input",
 CellChangeTimes->{{3.713684517272787*^9, 3.7136846192826924`*^9}, {
  3.7136876169641385`*^9, 3.713687735231964*^9}, {3.7136904616337337`*^9, 
  3.7136904717697563`*^9}},ExpressionUUID->"ac6cf272-b62f-4fab-a930-\
50a435ab7af1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5115150170487845`", ",", "0.5115150170487845`", ",", 
   "0.4992175326922793`", ",", "0.5618619201476801`", ",", 
   "0.7767732324021025`", ",", "0.7897533978928934`", ",", 
   "0.6075909225173046`", ",", "0.6348421686732586`", ",", 
   "0.841594273803137`", ",", "0.841594273803137`", ",", 
   "1.1987192660480002`", ",", "2.080753352007654`", ",", 
   "2.061622164589565`", ",", "0.9322724029986431`", ",", 
   "0.5137182815578432`", ",", "0.38432896422573276`", ",", 
   "0.5515532328462635`", ",", "0.8170801886854221`", ",", 
   "0.7800996326177385`", ",", "0.6195411913348255`", ",", 
   "0.5073091741358945`", ",", "0.48526864894646266`", ",", 
   "0.3754567941113799`", ",", "0.37201553458645176`", ",", 
   "0.39911759026867855`", ",", "0.4715607137251527`", ",", 
   "0.410912696658953`", ",", "0.3165458054918478`", ",", 
   "0.20142571332483372`", ",", "0.19461828744572657`", ",", 
   "0.31800350261079147`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136844363706675`*^9, 3.713687754023843*^9, {3.71369048005112*^9, 
   3.713690489297511*^9}, 3.7136905231823945`*^9, 3.7137776508103137`*^9, 
   3.713777928330799*^9, 3.7137792218146687`*^9, 3.71377926508963*^9, 
   3.7141299550636387`*^9},ExpressionUUID->"d26c505d-9bed-4775-87c1-\
46699fc472f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiAcceleration", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "3"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", "meetingDates"}]}]], "Input",
 CellChangeTimes->{{3.7136878356280026`*^9, 3.7136878604374833`*^9}, {
  3.713690493140587*^9, 
  3.7136904990673056`*^9}},ExpressionUUID->"d6a5dddc-7b1f-4174-9464-\
c3a05efdb08b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.019154911602153546`"}], ",", 
   RowBox[{"-", "0.028813708892286072`"}], ",", 
   RowBox[{"-", "0.01229748435650524`"}], ",", "0.0626443874554008`", ",", 
   "0.08720323837206978`", ",", "0.012980165490790951`", ",", 
   RowBox[{"-", "0.06414148832327449`"}], ",", "0.02725124615595398`", ",", 
   "0.17729819422769721`", ",", "0.17729819422769721`", ",", 
   "0.35712499224486316`", ",", "0.28392275190903327`", ",", 
   RowBox[{"-", "0.01913118741808928`"}], ",", 
   RowBox[{"-", "0.7490357932417246`"}], ",", 
   RowBox[{"-", "0.41855412144079995`"}], ",", "0.03652584665437003`", ",", 
   "0.1672242686205307`", ",", "0.11059964419719759`", ",", 
   RowBox[{"-", "0.03698055606768358`"}], ",", 
   RowBox[{"-", "0.09134315916935642`"}], ",", 
   RowBox[{"-", "0.11223201719893106`"}], ",", 
   RowBox[{"-", "0.10562226020563853`"}], ",", 
   RowBox[{"-", "0.02637458859920172`"}], ",", "0.008552351289297766`", ",", 
   "0.02710205568222679`", ",", "0.03830008730088613`", ",", 
   RowBox[{"-", "0.06005089381179812`"}], ",", 
   RowBox[{"-", "0.09623497728651814`"}], ",", 
   RowBox[{"-", "0.11512009216701408`"}], ",", 
   RowBox[{"-", "0.039092643038684954`"}], ",", "0.1233852151650649`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.713687875112951*^9, {3.7136905152752337`*^9, 3.7136905386325197`*^9}, 
   3.7137776513095427`*^9, 3.7137779438294983`*^9, 3.7137792805196295`*^9, 
   3.71412997014708*^9},ExpressionUUID->"b489a044-9314-47be-8634-\
ecd8014210f1"]
}, Open  ]],

Cell[BoxData["0"], "Input",
 CellChangeTimes->{
  3.713687738172258*^9},ExpressionUUID->"35046de8-e500-42df-933b-\
0d5a6af64c69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<cpiMomentum\>\"", "]"}], "=", 
   "meetingPiMomentum"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<cpiAcceleration\>\"", "]"}], "=", 
   "meetingPiAcceleration"}], ";"}]}], "Input",
 CellChangeTimes->{{3.713687938600299*^9, 
  3.7136879779222307`*^9}},ExpressionUUID->"53cae6f1-4dc7-435c-b7fd-\
1cc871b4296d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExcelDateToDateList", "[", "41684", "]"}]], "Input",
 CellChangeTimes->{{3.7136768727633686`*^9, 3.713676883953*^9}, {
   3.713676922347988*^9, 3.713676926481074*^9}, 
   3.7136805807333593`*^9},ExpressionUUID->"eae5b2a9-5351-40da-b632-\
c8ac4854671e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2014", ",", "2", ",", "14"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136768842026052`*^9, {3.713676919996936*^9, 3.713676927168888*^9}, {
   3.713680596246262*^9, 3.7136806153852377`*^9}, 
   3.714129970240674*^9},ExpressionUUID->"1cb776f3-506c-4393-8990-\
be318b79fdc1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"prtxt", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.6864789998101606`*^9, 3.6864790074669266`*^9}, {
   3.686479125071686*^9, 3.686479130033182*^9}, {3.6865508102175198`*^9, 
   3.6865508103579235`*^9}, 3.691836999013547*^9, 3.713675271193776*^9, {
   3.7136761601434402`*^9, 3.7136761654275465`*^9}, 
   3.7136763788399906`*^9},ExpressionUUID->"71b0b492-6d58-4993-ba38-\
080c3a32dc9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Date\"\>", ",", "1.`", ",", "41684.`", ",", "41701.`", ",", 
   "41712.`", ",", "41753.`", ",", "41806.`", ",", "41845.`", ",", "41894.`", 
   ",", "41943.`", ",", "41984.`", ",", "41989.`", ",", "42034.`", ",", 
   "42076.`", ",", "42124.`", ",", "42170.`", ",", "42216.`", ",", "42258.`", 
   ",", "42307.`", ",", "42349.`", ",", "42398.`", ",", "42447.`", ",", 
   "42489.`", ",", "42531.`", ",", "42580.`", ",", "42629.`", ",", "42671.`", 
   ",", "42720.`", ",", "42769.`", ",", "42818.`", ",", "42853.`", ",", 
   "42902.`", ",", "42944.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713676166980977*^9, {3.713676384336501*^9, 3.713676391744847*^9}, 
   3.713676668384492*^9, 
   3.71412997030307*^9},ExpressionUUID->"a69a552e-2385-492d-abee-\
fe796bced3ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"piExp", "=", 
   RowBox[{"ImportTimeSeries", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "dataDirectory", " ", ",", 
        "\"\<ConsumerInflationExpectations.xlsx\>\""}], "}"}], "]"}], ",", 
     "\"\<FOMInflationExpectations\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136883646068954`*^9, 
  3.7136883738118153`*^9}},ExpressionUUID->"c36e1d41-14b0-4d97-9bdd-\
2696fda47d49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpLevel", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "15"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{
         RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
       "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{
         RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
       "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", "meetingDates"}]}]], "Input",
 CellChangeTimes->{{3.713688513458779*^9, 
  3.7136886283022623`*^9}},ExpressionUUID->"f9bbf1e2-5917-4381-93d3-\
cf7600674963"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.`", ",", "12.430508474576271`", ",", "12.430508474576271`", ",", 
   "11.647540983606557`", ",", "12.7`", ",", "11.7`", ",", "11.3`", ",", 
   "12.5`", ",", "13.8`", ",", "13.1`", ",", "15.5`", ",", "16.6`", ",", 
   "15.7`", ",", "14.`", ",", "15.`", ",", "13.9`", ",", "16.`", ",", "16.3`",
    ",", "16.4`", ",", "15.7`", ",", "14.7`", ",", "14.6`", ",", "14.2`", ",",
    "12.6`", ",", "14.2`", ",", "13.7`", ",", "12.4`", ",", "12.9`", ",", 
   "11.2`", ",", "10.3`", ",", "10.3`"}], "}"}]], "Output",
 CellChangeTimes->{3.71368861658409*^9, 3.7136886849149227`*^9, 
  3.7136905402221518`*^9, 3.71377769322118*^9, 3.713779282268852*^9, 
  3.714130003010634*^9},ExpressionUUID->"51ef121f-770d-4d9f-83ac-\
3d2ba3e198b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpAcceleration", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "15"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{
          RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
        "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{
          RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
        "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{
          RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
        "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{
          RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "3"}], "]"}], 
        "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", "meetingDates"}]}]], "Input",
 CellChangeTimes->{{3.7136886210865407`*^9, 3.713688662112643*^9}, {
  3.7136886965010815`*^9, 
  3.713688712018633*^9}},ExpressionUUID->"d2d16a6b-f5b2-4f29-acbb-\
feb5e5bae0ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.49777777777777743`", ",", 
   RowBox[{"-", "0.5694915254237287`"}], ",", 
   RowBox[{"-", "0.5694915254237287`"}], ",", 
   RowBox[{"-", "0.1524590163934434`"}], ",", "1.1999999999999993`", ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.3999999999999986`"}], ",", "0.6999999999999993`", ",", 
   "1.3000000000000007`", ",", 
   RowBox[{"-", "0.7000000000000011`"}], ",", "2.4000000000000004`", ",", 
   "1.1000000000000014`", ",", 
   RowBox[{"-", "2.400000000000002`"}], ",", 
   RowBox[{"-", "1.6999999999999993`"}], ",", "0.6999999999999993`", ",", 
   RowBox[{"-", "1.0999999999999996`"}], ",", "1.1999999999999993`", ",", 
   "0.3000000000000007`", ",", "0.5199999999999978`", ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.09999999999999964`"}], ",", "0.5999999999999996`", ",", 
   RowBox[{"-", "1.700000000000001`"}], ",", "1.5999999999999996`", ",", 
   "1.4000000000000004`", ",", 
   RowBox[{"-", "1.299999999999999`"}], ",", "1.4000000000000004`", ",", 
   RowBox[{"-", "1.700000000000001`"}], ",", 
   RowBox[{"-", "0.6999999999999993`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713688665757007*^9, {3.7136887153079615`*^9, 3.713688720181449*^9}, 
   3.713690543716421*^9, 3.7137776961415553`*^9, 3.7137792855180955`*^9, 
   3.7141300060538397`*^9},ExpressionUUID->"47864ebb-efdc-44f6-a315-\
21755473bf6c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<cpiExpLevel\>\"", "]"}], "=", 
   "meetingPiExpLevel"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "=", 
   "meetingPiExpAcceleration"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7136890225054803`*^9, 
  3.713689049483011*^9}},ExpressionUUID->"67b4d933-8c97-44cf-b370-\
fc5eae2aade2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"realKeyRate", "=", 
    RowBox[{
     RowBox[{"prtxt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"3", ";;"}], ",", "6"}], "]"}], "]"}], "-", 
     RowBox[{"prtxt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"3", ";;"}], ",", "9"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "is", " ", "to", " ", "make", " ", "it", " ", "real", " ", 
    "key", " ", "rate", " ", "from", " ", "the", " ", "previous", " ", 
    "meeting"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<realKeyRate\>\"", "]"}], "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{
    RowBox[{"Most", "@", "realKeyRate"}], ",", 
    RowBox[{"First", "@", "realKeyRate"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7136889606642356`*^9, 3.713689013743909*^9}, {
  3.7136890608248367`*^9, 3.7136890753539267`*^9}, {3.7136891276179633`*^9, 
  3.7136891694113894`*^9}},ExpressionUUID->"e6327358-acec-4c96-a1f3-\
e465218e8c4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5`", ",", "0.5`", ",", "1.5999999999999996`", ",", "1.2999999999999998`",
    ",", "1.5`", ",", "1.5`", ",", "1.75`", ",", "0.75`", ",", "1.25`", ",", 
   "0.25`", ",", "7.`", ",", "5.25`", ",", "5.`", ",", "4.5`", ",", "4.75`", 
   ",", "4.25`", ",", "4.`", ",", "4.25`", ",", "5.`", ",", "4.25`", ",", 
   "5.25`", ",", "6.`", ",", "5.75`", ",", "5.75`", ",", "5.5`", ",", "5.75`",
    ",", "6.`", ",", "6.`", ",", "5.75`", ",", "5.25`", ",", "5.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7136890024784856`*^9, 3.7136890146029253`*^9}, {
   3.71368907093764*^9, 3.7136890761565423`*^9}, 3.713689147929165*^9, 
   3.7137776962819633`*^9, 3.7137792869875145`*^9, 
   3.714130006178632*^9},ExpressionUUID->"85e9491a-f6a8-4d40-a223-\
d391d1080143"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"in", "[", "\"\<OutputGap\>\"", "]"}], "=", 
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"3", ";;"}], ",", "22"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136892206502085`*^9, 
  3.713689241518218*^9}},ExpressionUUID->"f699f9a7-32b3-493b-959b-\
997232e27243"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coreQ", "=", 
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"3", ";;"}], ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<coreQ\>\"", "]"}], "=", "coreQ"}]}], "Input",
 CellChangeTimes->{{3.713689288819767*^9, 3.713689311438813*^9}, {
  3.7159396195325537`*^9, 
  3.7159396199775987`*^9}},ExpressionUUID->"2acbb7d9-c318-424a-a1c3-\
3713eb9a57d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"No\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"No\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"No\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.713689311830821*^9, 3.713777725325246*^9, 
  3.714130006319023*^9},ExpressionUUID->"d0a5163e-2239-4d7e-9ec5-\
c877e5494ca7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"guidance", "=", 
    RowBox[{"prtxt", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"3", ";;"}], ",", "10"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "is", " ", "to", " ", "make", " ", "guidance", " ", "from", 
    " ", "the", " ", "previous", " ", "meeting"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<guidance\>\"", "]"}], "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{
    RowBox[{"Most", "@", "guidance"}], ",", "\"\<NoGuidance\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7136893168921213`*^9, 
  3.7136893774729147`*^9}},ExpressionUUID->"3e70c10f-9959-4c43-934f-\
f345527aa55b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NoGuidance\"\>", ",", "\<\"Hike\"\>", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Hold\"\>", 
   ",", "\<\"Hike\"\>", ",", "\<\"Hike\"\>", ",", "\<\"Hike\"\>", 
   ",", "\<\"Cut\"\>", ",", "\<\"Hike\"\>", ",", "\<\"NoGuidance\"\>", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>", 
   ",", "\<\"Hold\"\>", ",", "\<\"NoGuidance\"\>", ",", "\<\"NoGuidance\"\>", 
   ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Hike\"\>", 
   ",", "\<\"Hold\"\>", ",", "\<\"Cut\"\>", ",", "\<\"NoGuidance\"\>", 
   ",", "\<\"Cut\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Hold\"\>", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Cut\"\>", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136893587111425`*^9, 3.7136893779751244`*^9}, 
   3.713777727370964*^9, 
   3.714130006381419*^9},ExpressionUUID->"1a7f4384-e1f5-4a3c-9e86-\
58a5568fd6ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gather and train", "Chapter",
 CellChangeTimes->{{3.7136899182478924`*^9, 
  3.7136899225413218`*^9}},ExpressionUUID->"62cc153c-c65d-49f2-8e52-\
382668f124c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"in", "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
        "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
        "\"\<cpiExpAcceleration\>\"", ",", "\"\<OutputGap\>\"", ",", 
        "\"\<coreQ\>\"", ",", "\"\<guidance\>\""}], "}"}]}], ")"}], 
    "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{"in", "[", "\"\<Decision\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainSet", "=", 
   RowBox[{"Rule", "@@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"input", ",", "output"}], "}"}], "\[Transpose]"}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.713689931902258*^9, 3.7136899389879665`*^9}, {
  3.71368997823289*^9, 3.7136900764447107`*^9}, {3.713783389006295*^9, 
  3.713783392703944*^9}, {3.71413035999644*^9, 
  3.714130360651632*^9}},ExpressionUUID->"7a655ce8-9ce0-4fcf-9847-\
363ba51f3e69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "50"}], ",", 
       RowBox[{"\"\<LeafSize\>\"", "\[Rule]", "5"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "=", 
  RowBox[{"Classify", "[", "trainSet", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.713690097950861*^9, 3.7136901009901648`*^9}, {
  3.713690958919345*^9, 3.7136909774421177`*^9}, {3.7136924219242935`*^9, 
  3.7136924268079967`*^9}},ExpressionUUID->"36afde47-6641-410c-8b53-\
b4934cde497e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["31", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.714130043156074*^9},ExpressionUUID->"9777ecde-c829-4737-9a74-\
7b79e46d6551"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["31", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.714130043500252*^9},ExpressionUUID->"7b95595e-522a-4810-b625-\
9ae429866350"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["31", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.714130045126548*^9},ExpressionUUID->"57188454-2c62-4e0e-b4bd-\
6a52d058d167"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Nominal", "Nominal", "Nominal"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["31", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.714130045518523*^9},ExpressionUUID->"fcee17e7-e880-4d4d-bf17-\
ff93e6ffa017"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Chapter",
 CellChangeTimes->{{3.713690133422408*^9, 
  3.713690135222588*^9}},ExpressionUUID->"c18eb617-7165-4039-8cfb-\
df803a88fcd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meetDateUpcoming", "=", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "9", ",", "15"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713690658961926*^9, 
  3.7136906781557035`*^9}},ExpressionUUID->"b9206385-82de-432d-938f-\
9886c8576516"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"week3Before", "=", 
  RowBox[{
   RowBox[{"DateObject", "[", "meetDateUpcoming", "]"}], "-", 
   RowBox[{"Quantity", "[", 
    RowBox[{"3", ",", "\"\<Weeks\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spotUSDRUB", "=", "57.5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7136907059754715`*^9, 3.713690747505107*^9}, {
  3.713690825002663*^9, 
  3.7136908324332094`*^9}},ExpressionUUID->"7ba8fee6-1561-4833-8c43-\
623c776d7c18"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Fri 25 Aug 2017\""}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2017", ",", "8", ",", "25"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", "4.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.7136907095019417`*^9, 3.7136907477235107`*^9, 
  3.7136908341260424`*^9, 
  3.7141303276890526`*^9},ExpressionUUID->"67821dc3-5646-478d-a30b-\
2d4c053dd53d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usdrubChangeUpcoming", "=", 
  RowBox[{"100", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"spotUSDRUB", "/", 
      RowBox[{
       RowBox[{
       "dyFX", "[", 
        "\"\<Foreign Exchange Rate: Bank of Russia: US Dollar\>\"", "]"}], 
       "[", "week3Before", "]"}]}], "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.7136906486867175`*^9, {3.7136907537878294`*^9, 
   3.7136908353810673`*^9}},ExpressionUUID->"8e845adf-b81b-428b-a6d9-\
3f4944dd4263"],

Cell[BoxData[
 RowBox[{"-", "2.772587618807676`"}]], "Output",
 CellChangeTimes->{
  3.71369071519386*^9, {3.7136908079237237`*^9, 3.7136908356004715`*^9}, 
   3.7136919542497416`*^9, 
   3.714130328989836*^9},ExpressionUUID->"8fe61f10-46a4-457a-8271-\
79813f063a3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"meetingPiMomentumUpcoming", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2017", ",", "9", ",", "15"}], "}"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"meetingPiMomentumUpcoming", "=", 
  RowBox[{"First", "@", "meetingPiMomentumUpcoming"}]}]}], "Input",
 CellChangeTimes->{{3.713684517272787*^9, 3.7136846192826924`*^9}, {
  3.7136876169641385`*^9, 3.713687735231964*^9}, {3.7136904616337337`*^9, 
  3.7136904717697563`*^9}, {3.713690577237089*^9, 
  3.713690602530794*^9}},ExpressionUUID->"e6b27218-6ea4-44ae-b375-\
86758aa29242"],

Cell[BoxData[
 RowBox[{"{", "0.15258571323408482`", "}"}]], "Output",
 CellChangeTimes->{
  3.7136844363706675`*^9, 3.713687754023843*^9, {3.71369048005112*^9, 
   3.713690489297511*^9}, {3.7136905878050985`*^9, 3.7136906111029644`*^9}, 
   3.7141303300888224`*^9},ExpressionUUID->"771f0821-e49d-4f5d-8dbe-\
6a982c47394f"],

Cell[BoxData["0.15258571323408482`"], "Output",
 CellChangeTimes->{
  3.7136844363706675`*^9, 3.713687754023843*^9, {3.71369048005112*^9, 
   3.713690489297511*^9}, {3.7136905878050985`*^9, 3.7136906111029644`*^9}, 
   3.714130330120022*^9},ExpressionUUID->"e465b53e-8874-4b31-bc82-\
45ae7efb3123"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"meetingPiAccelerationUpcoming", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "3"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2017", ",", "9", ",", "15"}], "}"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"meetingPiAccelerationUpcoming", "=", 
  RowBox[{"First", "@", "meetingPiAccelerationUpcoming"}]}]}], "Input",
 CellChangeTimes->{{3.7136878356280026`*^9, 3.7136878604374833`*^9}, {
  3.713690493140587*^9, 3.7136904990673056`*^9}, {3.7136905759626617`*^9, 
  3.713690608620714*^9}},ExpressionUUID->"a0dbc316-cdde-4112-818a-\
cc3a89da7666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.11602287291470342`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713687875112951*^9, {3.7136905898371377`*^9, 3.713690609558732*^9}, 
   3.714130332030197*^9},ExpressionUUID->"5a7a745e-7224-40d2-a0a9-\
5ae4a1c3179a"],

Cell[BoxData[
 RowBox[{"-", "0.11602287291470342`"}]], "Output",
 CellChangeTimes->{
  3.713687875112951*^9, {3.7136905898371377`*^9, 3.713690609558732*^9}, 
   3.714130332030197*^9},ExpressionUUID->"73e9b9d6-dd4d-4e26-9db0-\
f371e9f6b6a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpLevelUpcoming", "=", 
  RowBox[{"First", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "@", "#"}], "\[GreaterEqual]", " ", "15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TimeSeriesMonthShift", "[", 
          RowBox[{
           RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
         "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TimeSeriesMonthShift", "[", 
          RowBox[{
           RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
         "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2017", ",", "9", ",", "15"}], "}"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.713688513458779*^9, 3.7136886283022623`*^9}, {
  3.713690279479275*^9, 3.713690320624496*^9}, {3.7136903785836487`*^9, 
  3.713690381876115*^9}},ExpressionUUID->"87aa3bae-b540-4ade-9dec-\
cb50aebd5ce7"],

Cell[BoxData["9.5`"], "Output",
 CellChangeTimes->{3.71368861658409*^9, 3.7136886849149227`*^9, 
  3.713690321596715*^9, 3.7136903826731315`*^9, 
  3.71413033263859*^9},ExpressionUUID->"00fabe3c-263a-4f07-824a-f1a68db4fcaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpAccelerationUpcoming", "=", 
  RowBox[{"First", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "@", "#"}], "\[GreaterEqual]", "15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "3"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2017", ",", "9", ",", "15"}], "}"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7136886210865407`*^9, 3.713688662112643*^9}, {
  3.7136886965010815`*^9, 3.713688712018633*^9}, {3.713690330458692*^9, 
  3.713690368692052*^9}},ExpressionUUID->"e56a839b-cb5e-4e8e-8ef1-\
fc52677aab8f"],

Cell[BoxData[
 RowBox[{"-", "1.1999999999999993`"}]], "Output",
 CellChangeTimes->{
  3.713688665757007*^9, {3.7136887153079615`*^9, 3.713688720181449*^9}, {
   3.7136903348193803`*^9, 3.713690369489668*^9}, 
   3.71413033417237*^9},ExpressionUUID->"67928e89-cd5f-4721-8f1a-\
0fae659dcffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "usdrubChangeUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiMomentumUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiAccelerationUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiExpLevelUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiExpAccelerationUpcoming", ",", "\[IndentingNewLine]", 
    "\"\<Zero\>\"", ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", 
    "\[IndentingNewLine]", "\"\<NoGuidance\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7136901402580914`*^9, 3.7136901899130564`*^9}, {
   3.7136902203872824`*^9, 3.7136902467118044`*^9}, {3.713690373166542*^9, 
   3.7136903856691914`*^9}, {3.7136906151598454`*^9, 
   3.7136906186919146`*^9}, {3.71369084162899*^9, 3.7136908471184998`*^9}, 
   3.7136919588112335`*^9, {3.7141303672219477`*^9, 
   3.714130367721142*^9}},ExpressionUUID->"c31ca4c1-27ec-4021-a161-\
3719abf60b1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.772587618807676`"}], ",", "0.15258571323408482`", ",", 
   RowBox[{"-", "0.11602287291470342`"}], ",", "9.5`", ",", 
   RowBox[{"-", "1.1999999999999993`"}], ",", "\<\"Zero\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7136908482771263`*^9, 3.7136919593278465`*^9, 
  3.71413033575095*^9, 
  3.7141303683591337`*^9},ExpressionUUID->"3804d21a-4340-43a5-bed8-\
7ae28a781e36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.713690879301944*^9, 3.7136908817379923`*^9}, {
  3.7136909875249186`*^9, 
  3.713690991042388*^9}},ExpressionUUID->"db82fb3a-530d-43e4-a68b-\
315377995a40"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.4430041717678239`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.0805080934615155`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.4764877347706607`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.713690882305603*^9, 3.713690991307593*^9, 
  3.713691961029483*^9, 3.713692456743035*^9, 3.713693776409933*^9, 
  3.7141303377703238`*^9, 
  3.7141303707177033`*^9},ExpressionUUID->"ae4260a0-2eaf-4232-9ef1-\
2d720ebf45d1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.4145214838001883`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.12170128263984024`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.46377723355997147`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.713690882305603*^9, 3.713690991307593*^9, 
  3.713691961029483*^9, 3.713692456743035*^9, 3.713693776409933*^9, 
  3.7141303377703238`*^9, 
  3.714130370733303*^9},ExpressionUUID->"390d2730-dcdb-45f9-a844-\
3e95e42597c8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.32408099401290147`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.3001551161966873`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.37576388979041125`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.713690882305603*^9, 3.713690991307593*^9, 
  3.713691961029483*^9, 3.713692456743035*^9, 3.713693776409933*^9, 
  3.7141303377703238`*^9, 
  3.714130370733303*^9},ExpressionUUID->"37ded4da-c5b5-439e-be4c-\
cae039e6945d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.3161582869961689`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.19646642748160784`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.48737528552222326`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.713690882305603*^9, 3.713690991307593*^9, 
  3.713691961029483*^9, 3.713692456743035*^9, 3.713693776409933*^9, 
  3.7141303377703238`*^9, 
  3.714130370733303*^9},ExpressionUUID->"2713129f-8246-4ec4-a76d-\
1340f3ef95e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", "upcoming", "]"}]}], "Input",
 CellChangeTimes->{{3.7136908979013166`*^9, 3.713690908607728*^9}, {
  3.7136909951586695`*^9, 
  3.7136910005571756`*^9}},ExpressionUUID->"96fc07d0-337a-4f45-b832-\
ee3fcf380e30"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, {3.714130373127473*^9, 
   3.714130384371729*^9}},ExpressionUUID->"6f0f0042-78a9-4785-ad15-\
500d08112eb6"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, {3.714130373127473*^9, 
   3.714130384387329*^9}},ExpressionUUID->"0895b3fd-a603-4760-9abf-\
24fcaeefa76f"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, {3.714130373127473*^9, 
   3.714130384387329*^9}},ExpressionUUID->"a46b6d10-3d2f-41be-b7ed-\
f8b12a3fe277"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, {3.714130373127473*^9, 
   3.714130384387329*^9}},ExpressionUUID->"5026a101-5cbc-445d-a8a8-\
65d864970f53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.7136910389851475`*^9, 3.7136910485109367`*^9}, 
   3.7136911105883455`*^9},ExpressionUUID->"e5c9b268-279b-4d36-8298-\
9c34c09066c4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Random forest\"\>"},
             {
              StyleBox["\<\"Number of classes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "9"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "31"},
             {
              StyleBox["\<\"Number of trees\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "50"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Random forest", "Number of classes" -> 3, "Number of features" -> 
   9, "Number of training examples" -> 31, "Number of trees" -> 
   50]]], "Output",
 CellChangeTimes->{3.713691049387554*^9, 
  3.7136911119011726`*^9},ExpressionUUID->"b4f0d185-730a-4909-aad2-\
e4e4666c26e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c", ",", "trainSet", ",", "\"\<Accuracy\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.713691161950368*^9, 
  3.7136911920773687`*^9}},ExpressionUUID->"101a5076-7902-4599-8911-\
72b84c735d43"],

Cell[BoxData["0.8064516129032258`"], "Output",
 CellChangeTimes->{
  3.7136911923581743`*^9},ExpressionUUID->"0a76aff9-ee82-473f-89f4-\
c372dff157e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"output", ",", 
     RowBox[{"cRandomForest", "/@", "input"}]}], "}"}], "\[Transpose]"}], "//",
   "TableForm"}]], "Input",
 CellChangeTimes->{{3.7136914115321636`*^9, 3.7136914249696274`*^9}, 
   3.714130500635646*^9},ExpressionUUID->"09bdbf14-d5ff-406a-96f1-\
76d926ebd3e3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hike\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hike\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hike\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.713691426716861*^9, 3.713692465131607*^9, 
  3.7141303880558825`*^9, 
  3.7141305010824404`*^9},ExpressionUUID->"a5bceec4-d38f-4b93-af01-\
92864e57861a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["spotUSDRUB"], "Input",ExpressionUUID->"1ff90272-6296-4879-b325-2d900f0ea264"],

Cell[BoxData["57.5`"], "Output",
 CellChangeTimes->{
  3.713691931126479*^9},ExpressionUUID->"ef41a0bf-39db-4c2d-8eab-\
f81d4e8775cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "meetingPiAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpLevelUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",ExpressionUUID->"338dbd2e-bb07-\
45c4-993d-1ecad4741c67"],

Cell[BoxData[
 RowBox[{"in", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
    "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
    "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
    "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", "\"\<guidance\>\""}], 
   "}"}]}]], "Input",ExpressionUUID->"a13d7bfc-b3d2-4517-878e-caa3ca1e8ce5"],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.713689971446212*^9},ExpressionUUID->"46b08077-94c4-4541-978e-\
c2fb96ae0c1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"usdrub3wChange\"\>", ",", "\<\"Decision\"\>", 
   ",", "\<\"cpiMomentum\"\>", ",", "\<\"cpiAcceleration\"\>", 
   ",", "\<\"cpiExpLevel\"\>", ",", "\<\"cpiExpAcceleration\"\>", 
   ",", "\<\"realKeyRate\"\>", ",", "\<\"OutputGap\"\>", ",", "\<\"coreQ\"\>",
    ",", "\<\"guidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713689939588026*^9},ExpressionUUID->"5cf47cf3-31fa-41a4-81d8-\
9e467d4aefdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesMonthShift", "[", 
  RowBox[{
   RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "3"}], "]"}]], "Input",\
ExpressionUUID->"0cf78627-5161-40a7-8e3c-e1f7603acd85"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwdUXkw3HccXUcSKqEU0TpKGrt22f5+CEvtyudTdDpIokrrqG2cRTpTRyoY
RyURRCc0xGx03IRxNKrIdDJrk5BpsE3d0eg2JSON7xcbNdrGmuimb+bN++/N
OxzivghN1OVwOGItX2pyTb79+PYKNo6vtiuVLpCdmOr7QofgzXnTyw3XBdCd
Np6gNCRo1LiyR/TUGRR/Mg6WpgTzy/fOfWTLgO2ryf4+VgRLNT9G5q+w0Hja
PE3zJsHywNkHz0RuoBsw4iriEfw0pb6JyXeD0g+eag4wBCUOxWsZNm4QafKH
yy1PguZVJ1Q5clcw9F7YXJMQZAfGfl1KcAVVfeDwYADBxtaKjil9V6hMkztp
ggkuS1i/9RoWKjb1tt4II9jpkeDzt4SFvr6h0dlogtsj1LpaxUC/Ku/I/niC
PY/+DfyrioGH/tfbVakE44+tfS0rZSA4ZqDoYgZBcttrIzOfgbrFoY2+HG2f
Nt8qk0wGzJrFqVlFBD9XzNiPfcZA0n159kApwaT/wcDvnj9UVFQStJKcuapq
YaApJO9AgIxgWJFF2VAuC35z7ztkNRDcP/mk8n4tC6/IyiTvtmv99lmM73i/
Db13f1aXfUcwPPQ1w2w7Z2hqXTboGSBonNRVvTTFg0FFuuCUnODja4k54+5c
6HxPZ6l1hKDp9mx6dg0Xhg33NOcoCXKLby7UNvGAV/DbPf4MwR0vn31HA/mQ
Kr1RHL5AMODkZWbejA+TuXuDbB4TzDTVdFsW8eCgXuQ1KSHoEMXGOJvxoENc
mJy3QfC5+stCqTkfpH2vu3s8JygOap6TzHNhs+pGVQqH4rxcd5cO86D7+9Ed
LwOKHxfNHjp/WwD+Po8050wo2tRtid5RCICXdS+205Ji74vCM3ecWGDWHCdO
2VG8Mjh7vEX7t8XEhZkOR4oDFtNPppOFYK+OXvxKSLFm0bdrcNQFshT64Uc8
KOp7txlfuugCXZpeabyY4gPew29zlULQPz2ZJvSnGHbwzpV1lgVxxJZVZhDF
XyoiTkxMM3BrbZVXHUrRSCXsi7vEQrIi4mhIFEXVbtIzO38G1Ds/rZbEUlQX
pcj0jwmhNqurOSqFoj33bMt5cIZvmuIUBukUp5Qhhz485wJJXrYZbtkU3aMa
2zr9+HDSKFj4T6E2T6+xYF0qAO/AggJRCcVlUVX0rr8zeN49PG9WQdGDtR4b
k/OgYKNeNlpDsVzUHxARzYe2Mhu1po5imVGJ+SdCLmzEGB8fbaNYe/UlDoN1
vZ6fWY92D6cLsfUGjiBLOduQ3k9xUYfjw+G8Bf8B4zXGxg==
               "]]},
             Annotation[#, "Charting`Private`Tag$443018#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.4869312*^9, 9.500001758337875},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3486931200, 3718483200}, {9.500001758337875, 
            18.489008046316822`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 2010\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Nov 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["57",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwdUXkw3HccXUcSKqEU0TpKGrt22f5+CEvtyudTdDpIokrrqG2cRTpTRyoY
RyURRCc0xGx03IRxNKrIdDJrk5BpsE3d0eg2JSON7xcbNdrGmuimb+bN++/N
OxzivghN1OVwOGItX2pyTb79+PYKNo6vtiuVLpCdmOr7QofgzXnTyw3XBdCd
Np6gNCRo1LiyR/TUGRR/Mg6WpgTzy/fOfWTLgO2ryf4+VgRLNT9G5q+w0Hja
PE3zJsHywNkHz0RuoBsw4iriEfw0pb6JyXeD0g+eag4wBCUOxWsZNm4QafKH
yy1PguZVJ1Q5clcw9F7YXJMQZAfGfl1KcAVVfeDwYADBxtaKjil9V6hMkztp
ggkuS1i/9RoWKjb1tt4II9jpkeDzt4SFvr6h0dlogtsj1LpaxUC/Ku/I/niC
PY/+DfyrioGH/tfbVakE44+tfS0rZSA4ZqDoYgZBcttrIzOfgbrFoY2+HG2f
Nt8qk0wGzJrFqVlFBD9XzNiPfcZA0n159kApwaT/wcDvnj9UVFQStJKcuapq
YaApJO9AgIxgWJFF2VAuC35z7ztkNRDcP/mk8n4tC6/IyiTvtmv99lmM73i/
Db13f1aXfUcwPPQ1w2w7Z2hqXTboGSBonNRVvTTFg0FFuuCUnODja4k54+5c
6HxPZ6l1hKDp9mx6dg0Xhg33NOcoCXKLby7UNvGAV/DbPf4MwR0vn31HA/mQ
Kr1RHL5AMODkZWbejA+TuXuDbB4TzDTVdFsW8eCgXuQ1KSHoEMXGOJvxoENc
mJy3QfC5+stCqTkfpH2vu3s8JygOap6TzHNhs+pGVQqH4rxcd5cO86D7+9Ed
LwOKHxfNHjp/WwD+Po8050wo2tRtid5RCICXdS+205Ji74vCM3ecWGDWHCdO
2VG8Mjh7vEX7t8XEhZkOR4oDFtNPppOFYK+OXvxKSLFm0bdrcNQFshT64Uc8
KOp7txlfuugCXZpeabyY4gPew29zlULQPz2ZJvSnGHbwzpV1lgVxxJZVZhDF
XyoiTkxMM3BrbZVXHUrRSCXsi7vEQrIi4mhIFEXVbtIzO38G1Ds/rZbEUlQX
pcj0jwmhNqurOSqFoj33bMt5cIZvmuIUBukUp5Qhhz485wJJXrYZbtkU3aMa
2zr9+HDSKFj4T6E2T6+xYF0qAO/AggJRCcVlUVX0rr8zeN49PG9WQdGDtR4b
k/OgYKNeNlpDsVzUHxARzYe2Mhu1po5imVGJ+SdCLmzEGB8fbaNYe/UlDoN1
vZ6fWY92D6cLsfUGjiBLOduQ3k9xUYfjw+G8Bf8B4zXGxg==
               "]]},
             Annotation[#, "Charting`Private`Tag$443018#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.4869312*^9, 9.500001758337875},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3486931200, 3718483200}, {9.500001758337875, 
            18.489008046316822`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 2010\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Nov 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["57",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2419200",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJxdUTsOwjAUC9yCEQH5NC15LRPbOwATMxMSrByFuVyDG8AKx2GnzXNSKZYi
y3aSOq/L8+14mSulZsPaD+v7GVGzsONdBAk/O1YRLV8jiB/9iAA9sewj6Ba6
AWvcr6Er3GOgDc45sEGui30O2qNnBT/AR79FV/SqkdfQW/Tx8FNPEv9A/P7Z
0/0V8rtlHlS8u0GPxB7+9D3xXfaj3Vtojx42zyH9B8nTvNIc1pkl3yBf8R9E
cpm9
    "], CompressedData["
1:eJxdkjtOA2EMhINExS24gd+PI0Si4ggUSFQU4f7CG5KMxRar/eR//Y9n/Prx
/f75dDqdLs/zevu6/Pyj3nR+mQ+1ilYWohu2SBXd0YnYyYDZEsD55sBh5ahV
1XY7et3Qi7RQDVVa1fkzPB6YTGWoZpMqqqO5BK3aynA4SEJoYVZjwOBRyQH0
QxOwnCEyhJlpoWZBc0horYukyRsXKacmLlLjGRIYNf4B2ySBJkxwI8yiVyv7
a3zHCckNIo9UYqGrLHPGSl4yYiQvGaGS8HkSyVwTRZkvGZOR9UJNweZETq9l
7ITQy9jiOQAZZRLL2MnXlhvVs0vAWVFeMib9Xm50Kq+Jeh5MlCRevtCv6/zA
vBbvOBkojE1WYSngLLQtnH09Jv4F+jiObg==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713688572714704*^9, 3.713688597038136*^9}, {
  3.7136886394273744`*^9, 
  3.7136886576922007`*^9}},ExpressionUUID->"ab26820b-d30b-47ea-81ab-\
690af400a2df"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dataDirectory", " ", ",", "\"\<.xlsx\>\""}], "}"}], "]"}], 
      ",", "\"\<\>\""}], "]"}]}], ";"}],
  FontSize->12]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.6496418367386556`*^9, 3.6496418591478963`*^9}, 
   3.671512840376979*^9, {3.6715130329649115`*^9, 3.671513045424952*^9}, 
   3.689077271856621*^9, {3.6890773134573603`*^9, 3.689077318527426*^9}, {
   3.6913874310351887`*^9, 3.6913874313432198`*^9}, 3.6914762854514203`*^9, 
   3.6914766302598977`*^9, {3.6914777256924934`*^9, 3.691477986620202*^9}, 
   3.6914782203278465`*^9, {3.691483402954894*^9, 3.6914834575014477`*^9}, {
   3.6914835482385845`*^9, 3.691483571105816*^9}, 3.691496213477739*^9, 
   3.691496294428936*^9, {3.6917492870895433`*^9, 3.691749287947549*^9}, 
   3.691836999013547*^9, 3.691837799934317*^9, 3.6984632190052743`*^9, 
   3.6984635819155617`*^9, 3.6984637643467655`*^9, {3.6993584749450526`*^9, 
   3.6993585072552834`*^9}, {3.6993585578783455`*^9, 3.699358562234781*^9}, 
   3.6993596563691835`*^9, 3.6993600064081836`*^9, {3.7059815694811816`*^9, 
   3.7059816207749786`*^9}, {3.705981732046895*^9, 3.705981737019972*^9}, {
   3.7059904341100903`*^9, 3.705990436378253*^9}, {3.7065011482447195`*^9, 
   3.7065011535019865`*^9}, {3.706501205372652*^9, 3.7065012075410795`*^9}, 
   3.708763295184205*^9, {3.7136125261305914`*^9, 3.71361259067667*^9}, {
   3.7136126410178566`*^9, 3.7136126443291206`*^9}, {3.713688266677103*^9, 
   3.7136882869281282`*^9}, {3.713688349836418*^9, 
   3.7136883689703317`*^9}},ExpressionUUID->"0708447b-0024-4fe3-8e10-\
20440f39ce96"],

Cell[BoxData["ClassifierFunction"], "Input",
 CellChangeTimes->{{3.713579325364976*^9, 
  3.713579333612935*^9}},ExpressionUUID->"4925ad2f-a6fb-4f38-8967-\
f37f178a7254"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prtxt", "[", 
  RowBox[{"[", 
   RowBox[{";;", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136126574893785`*^9, 
  3.7136126609722457`*^9}},ExpressionUUID->"093d9e54-094c-4bb0-b90e-\
ad88d09e7d69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Date\"\>", ",", "\<\"14.02.2014\"\>", 
   ",", "\<\"03.03.2014\"\>", ",", "\<\"14.03.2014\"\>", 
   ",", "\<\"24.04.2014\"\>", ",", "\<\"16.06.2014\"\>", 
   ",", "\<\"25.07.2017\"\>", ",", "\<\"12.09.2014\"\>", 
   ",", "\<\"31.10.2014\"\>", ",", "\<\"11.12.2014\"\>", 
   ",", "\<\"16.12.2014\"\>", ",", "\<\"30.01.2015\"\>", 
   ",", "\<\"13.03.2015\"\>", ",", "\<\"30.04.2015\"\>", 
   ",", "\<\"15.06.2015\"\>", ",", "\<\"31.07.2015\"\>", 
   ",", "\<\"11.09.2015\"\>", ",", "\<\"30.10.2015\"\>", 
   ",", "\<\"11.12.2015\"\>", ",", "\<\"29.01.2016\"\>", 
   ",", "\<\"18.03.2016\"\>", ",", "\<\"29.04.2016\"\>", 
   ",", "\<\"10.06.2016\"\>", ",", "\<\"29.07.2016\"\>", 
   ",", "\<\"16.09.2016\"\>", ",", "\<\"28.10.2016\"\>", 
   ",", "\<\"16.12.2016\"\>", ",", "\<\"03.02.2017\"\>", 
   ",", "\<\"24.03.2017\"\>", ",", "\<\"28.04.2017\"\>", 
   ",", "\<\"16.06.2017\"\>", ",", "\<\"28.07.2017\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713612662285671*^9},ExpressionUUID->"312f7018-5874-4b2f-90ee-\
567357a11eb2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"inp", "=", 
   RowBox[{"Rule", "@@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prtxt", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
            "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", 
             "12", ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"prtxt", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"3", ";;", 
            RowBox[{"-", "1"}]}], ",", "5"}], "]"}], "]"}]}], "}"}], 
      "\[Transpose]"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136126975859776`*^9, 3.7136127420202503`*^9}, {
  3.7136127921300287`*^9, 
  3.71361294436961*^9}},ExpressionUUID->"e4e7d367-52f9-4774-a9de-\
f34c70c9dd76"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "50"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "3"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "=", 
  RowBox[{"Classify", "[", "inp", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.713612977445265*^9, 3.7136129814001417`*^9}, 
   3.713665056725222*^9, {3.713665089448494*^9, 3.713665106927242*^9}, {
   3.713665145446093*^9, 3.713665159961545*^9}, {3.713665734546624*^9, 
   3.7136657776844664`*^9}, {3.713666454446804*^9, 
   3.7136664745103664`*^9}},ExpressionUUID->"73397265-f4c7-4059-bda7-\
40bbecc58a9e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.7136664752918124`*^9},ExpressionUUID->"243ed1e1-448c-4d56-a132-\
cfcad7181b6c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.7136664764054766`*^9},ExpressionUUID->"2b5a6589-e660-46f2-9a54-\
0424de448337"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.713666477040716*^9},ExpressionUUID->"af2a5999-fc18-444a-a918-\
f58efab89c40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",ExpressionUUID->"0cf0b60c-9533-4657-946a-49fc876a9a3a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Random forest\"\>"},
             {
              StyleBox["\<\"Number of classes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "9"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "30"},
             {
              StyleBox["\<\"Number of trees\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "50"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Random forest", "Number of classes" -> 3, "Number of features" -> 
   9, "Number of training examples" -> 30, "Number of trees" -> 
   50]]], "Output",
 CellChangeTimes->{
  3.7136129873372564`*^9, {3.7136650654050903`*^9, 3.713665109368486*^9}, {
   3.7136657558520412`*^9, 
   3.7136657803103175`*^9}},ExpressionUUID->"d60b8cc2-cc91-4887-b430-\
46585f95892b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", "inp"}]], "Input",
 CellChangeTimes->{{3.713664900980649*^9, 
  3.7136649125268035`*^9}},ExpressionUUID->"89387fcf-bdbe-4e26-887f-\
307152d9973e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\<\"Yes\"\>", ",", "9.`", ",", "4.2`", ",", "4.`", 
    ",", "\<\"NoGuidance\"\>", ",", "\<\"\"\>", ",", "\<\"Yes\"\>", 
    ",", "\<\"Yes\"\>", ",", "\<\"Zero\"\>"}], "}"}], 
  "\[Rule]", "\<\"Hold\"\>"}]], "Output",
 CellChangeTimes->{3.7136649173522863`*^9, 3.7136651115157003`*^9, 
  3.713665764438608*^9},ExpressionUUID->"373d4742-a28e-4342-9b55-\
7a95a605b9d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prtxt", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
      "13", ",", "22"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136652114056883`*^9, 
  3.713665214444992*^9}},ExpressionUUID->"983f43e8-3bcc-4693-99fe-\
e3ae4bb2316b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"No\"\>", ",", "9.`", ",", "4.4`", ",", "4.`", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"Zero\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.713665112442793*^9, 3.7136652147280207`*^9, 
  3.7136657657374334`*^9},ExpressionUUID->"c4dce166-0268-40c8-a98b-\
fdc474d5aec6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "@", 
  RowBox[{"prtxt", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",",
        "13", ",", "22"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7136649774602966`*^9, 
  3.713664986805231*^9}},ExpressionUUID->"3ed892c3-88e0-4a7e-996b-\
6ce11c829cdf"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{
  3.7136651751880674`*^9, {3.7136655484063854`*^9, 3.7136655510026445`*^9}, {
   3.7136664294047537`*^9, 
   3.7136664319255*^9}},ExpressionUUID->"2ee820e3-3ddf-450f-a7b9-\
d826d4d7fdd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7136655828118258`*^9, 3.7136656164381876`*^9}, {
  3.7136664813517666`*^9, 
  3.713666485421002*^9}},ExpressionUUID->"c889319b-91ef-4844-848c-\
1b273f6cdb9a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.40417177518224745`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.1426434113643028`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.45318481345344974`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666485920231*^9},ExpressionUUID->"b0ae070d-99e3-423b-bf62-\
1cc08dcda96d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.3527592129337331`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.2525190033237341`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.3947217837425328`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666485935832*^9},ExpressionUUID->"d60961ef-d2d0-4314-b2c0-\
c3a1a0fa077d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.3527592129337331`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.2525190033237342`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.39472178374253275`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666486029437*^9},ExpressionUUID->"91573459-b381-4f18-8aa6-\
7e494b5709c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cAuto", "@", 
  RowBox[{"prtxt", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",",
        "13", ",", "22"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.713665173274876*^9},ExpressionUUID->"9bd00c92-e594-48d3-b534-\
a8e3d103ae9c"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.713664991829733*^9, 3.713665009441494*^9}, 
   3.7136650679233418`*^9, {3.7136650986294117`*^9, 3.7136651236689157`*^9}, 
   3.7136651735609045`*^9, 
   3.7136655495555*^9},ExpressionUUID->"aa383614-d4a1-466e-8a29-d0ec53a62508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "2"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7136665521425605`*^9, 3.713666556965547*^9}, 
   3.7136667353070555`*^9},ExpressionUUID->"ed052c48-a33f-45b2-b456-\
89a8af41c6cc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7136665574345655`*^9, 
  3.7136667357156715`*^9},ExpressionUUID->"797171e9-144b-489a-bef7-\
17c71edc5313"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "3"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c1Tree", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c1Tree", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", "]"}], "//", 
  "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.713667511834092*^9, 3.713667551758069*^9}, {
  3.7136675817746577`*^9, 
  3.7136676908494196`*^9}},ExpressionUUID->"f8c6547b-2840-46ab-a08e-\
3012dbb11f6b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.7136676965167427`*^9}},ExpressionUUID->"272d896a-81cf-41e0-8686-\
7dad1277dde8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "6", ",", "5", ",", "8", ",", "1", ",", "3", ",", "9", ",", "2", ",", 
      "3", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1729382256910270464"}], ",", 
      RowBox[{"-", "1729382256910270464"}], ",", "2", ",", 
      RowBox[{"-", "1729382256910270464"}], ",", "832", ",", 
      RowBox[{"-", "5953516662348487683"}], ",", "1048576", ",", "8", ",", 
      RowBox[{"-", "6174427804945253377"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3", ",", "5", ",", "9", ",", "7", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "6", ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "8", ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.713667696532343*^9}},ExpressionUUID->"457ba872-c3da-4a15-8e5a-\
0a55ad9d442c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.713667696532343*^9}},ExpressionUUID->"4f69ed5f-a9de-4660-92f9-\
a2dc38075683"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\"\<A\>\""}], ",", 
     RowBox[{"2", "\[Rule]", "\"\<A\>\""}], ",", 
     RowBox[{"3.5", "\[Rule]", "\"\<B\>\""}], ",", 
     RowBox[{"4", "\[Rule]", "\"\<B\>\""}], ",", 
     RowBox[{"4.5", "\[Rule]", "\"\<B\>\""}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713670291350775*^9, 
  3.7136702955718565`*^9}},ExpressionUUID->"ec512d66-a393-4aa2-8e3b-\
65315c1ffb2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "1"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c1Tree", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c1Tree", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", "]"}], "//", 
  "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.7136677546376953`*^9, 
  3.713667759230184*^9}},ExpressionUUID->"bba48a9b-d4e3-4aa7-b61c-\
bdd69dcd3ea5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 3.7136678296873684`*^9}, {
  3.7136702821869965`*^9, 
  3.713670285392059*^9}},ExpressionUUID->"2cafc517-62d9-4b53-993b-\
7c2440039087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcomingXY", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "XXX", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",", 
    "\[IndentingNewLine]", "YYY", ",", "\[IndentingNewLine]", 
    "meetingPiExpLevelUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiExpAccelerationUpcoming", ",", "\[IndentingNewLine]", 
    "\"\<Zero\>\"", ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", 
    "\[IndentingNewLine]", "\"\<NoGuidance\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.71369205615333*^9, 3.713692056309333*^9}, {
   3.713692133066923*^9, 3.713692141812703*^9}, 3.713692648722186*^9, 
   3.7141305464660625`*^9},ExpressionUUID->"4999fce5-d89b-40e4-b616-\
cd2b0631458b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"XXX", ",", "0.15258571323408482`", ",", "YYY", ",", "9.5`", ",", 
   RowBox[{"-", "1.1999999999999993`"}], ",", "\<\"Zero\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 3.7136678296873684`*^9}, {
   3.7136702821869965`*^9, 3.7136702854076595`*^9}, 3.713692057455761*^9, 
   3.7136921720769405`*^9, 3.7136929654955206`*^9, 
   3.714130547795045*^9},ExpressionUUID->"85183af4-c346-4a83-9a28-\
43e10ada3322"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<usdrub3wChange\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<usdrub3wChange\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 
  3.713692254495117*^9}},ExpressionUUID->"337b8bc8-5d45-4ac5-b07e-\
9abdc5305882"],

Cell[BoxData["2.973955483780467`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7141305557523823`*^9},ExpressionUUID->"329cf2e8-029a-4479-844a-\
2f4e9410fc2d"],

Cell[BoxData["6.7591563776880745`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7141305557523823`*^9},ExpressionUUID->"0ce551ef-c118-43ab-a050-\
d068c40d9cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136923054137316`*^9, 
  3.713692306122746*^9}},ExpressionUUID->"b09954cf-9d61-4b58-bad5-\
c6a57dfcad7a"],

Cell[BoxData[
 RowBox[{"-", "0.03786013836977826`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7141305577107825`*^9},ExpressionUUID->"fbc6a465-2cc7-49c2-babe-\
8bc954f0cb5b"],

Cell[BoxData["1.1842808305801629`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7141305577107825`*^9},ExpressionUUID->"e12c8f06-d81a-4405-9ff5-\
53a63afc33b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"upcomingXY", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", "\"\<Cut\>\""}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"XXX", ",", 
     RowBox[{"2.9403248577675676", "+", 
      RowBox[{"2.", "*", "6.767784936275289"}]}], ",", 
     RowBox[{"2.9403248577675676", "-", 
      RowBox[{"2.", "*", "6.767784936275289"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"YYY", ",", 
     RowBox[{
      RowBox[{"-", "0.005602073853649224"}], "+", 
      RowBox[{"2.", "*", "1.170741855728133"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.005602073853649224"}], "-", 
      RowBox[{"2.", "*", "1.1707418557281337"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", "z", 
         "]"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Contours", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
   RowBox[{"WorkingPrecision", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.713691848487169*^9, 3.713691898074406*^9}, {
   3.7136921169241924`*^9, 3.713692119086035*^9}, {3.71369214914987*^9, 
   3.713692179489287*^9}, {3.7136922607078395`*^9, 3.713692356584693*^9}, {
   3.7136923920072403`*^9, 3.713692394107484*^9}, 3.7136929691349955`*^9, {
   3.713693009695488*^9, 3.713693010430702*^9}, {3.7141306777397823`*^9, 
   3.7141306921395826`*^9}, {3.7141307474673824`*^9, 
   3.7141307511683826`*^9}},ExpressionUUID->"702f896a-a1bc-4acb-8e96-\
ca69ccfc2fdc"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxlnXdcj2v4xytZhZOsygqJiJAdvl/jmNmbzEgyDsfeO9uJbCWzJHsU4Txf
WcmKkIwjqchIe6p+fq9f7+v5vb7+Oq/367ru67k+9/d57vu6R06diX8Nmmxk
YGDQvZSBwf/+t4PjuIxbzerrbFZ6Jj2/a6T7s/rpVtcH1RH2LZX13T3JSvjc
y+2zRjapJOzZd3Sid1wp4TPBfc5EBX5X4LHxHrWGVE/RwCbPCsreX1daC6dZ
uBplLK8k/L7nvRUlnKoLu13ftXzjkjrCY5736Lh9ZH3hId9y8/e2sRPuY3wq
9FCVJsLWFc52eL6omTB6z3ePenDP0kD0wuiF0QujF0YvjF4YvTB6YfTC6IXR
C6MXRi+MXhi9S6y0LvNi8hT0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6MXRi+M
Xhi9OwNirEevyBS9MHph9MLohdELoxdGL4xeGL0wemH0wuiF0QujF0bv6ZZz
ErT1U0QvjF4YvTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7ZY3lkL67E0Qv
jF4YvTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7zGlfaPPbL0QvjF4YvTB6
YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7MueNxjFtvuiF0QujF0YvjF4YvTB6
YfTC6IXRC6MXRi+MXhi9MHqvjt5vfajcCw16YfTC6IXRC6MXRi+MXhi9MHph
9MLohdELoxdGL4zek5Ws1q9tnyB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdEL
oxdGL4zehbmJBVeSf4heGL0wemH0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6P3
6I+RofMHZopeGL0wemH0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6N300RdpldQ
nuiF0QujF0YvjF4YvTB6YfTC6IXRC6MXRi+MXhi9MHqveHjvfWFkoEUvjF4Y
vTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdHb5Fj34LizRqIXRi+MXhi9MHph
9MLohdELoxdGL4xeGL0wemH0wtoGparoOtfTeXw8NarfLENZP8DdzUruP2bs
oIVpD9P+79IzGriMNJT+g2mvz/rPZ72GHcaunz/xOp2+YNylnY3u3nnLI9ur
G+m67j6/0fangxbGHvkiZqafsZEWO0y++u15Pu31n0977PrrT+IRX//5xMs2
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
9Q7nyfr7Afr7J/r72YzPrN9g+k9/Pxs7z8eOP/vR2GHs7C9jh7GzX4wdxs7+
L3YYO/u52GHs7M9ih/n92P/k94L5fWD6l/7nfaK/8dffr2L+oT7m+2F+px7F
zveEnfoQO98Tduo17HxP2KmfsPM9YaeeoT/4fugPGH3651u8X7RHP+87duJh
5zwHO+8zdtYrvG/UR/r9iR092GnP+0h75lvqNex8L9iJj5342InP+0x85kvi
Yyc+duJjJz524vM9EJ/5jvjYiY+d+NiJj534fE/EZ74iPnbiYyc+duJjJz7f
I/GZb4iPnfjYiY+d+PrteR/53vheYfYziY+d9vD98sa7TA0qyPc5Z7VJxNx5
ZYXNN7Ye8nq0pXyfuhMt39aNbCT20qtdBx/W2P3mz/cK833CfI8w85l/Ut/e
iyqr96/Tb+yv5m1q9dv9ad3CG34F748pQ+f7FTWdYCXzw/Fzdfd/rG4hzP6q
S4MxPyfvCJL9VZj9VZj5M/5Cp6A7fcI0c299vv+2hulv94+xsz9wbmZ5p4yA
DZqw2MUvtjrE/XZ+GuuYNm+gzk3OP0z2bHEtbB8k+xfH8r53j21zTfO5ba5n
bpilep94ztI6Z5ZV++2+Mv6MNxVcvhemRZyUegwmf75n8pPz1uLnyX3e4ufB
tOd7pb2crxa3l/uxxe1h2vM90l7OU4vby33T4vYw7fneaC/np8Xt5f5mcXuY
9nxPtJfz0uL2ch+yuD1Me+ZP2sv5aHF7mPZw7ufCpJl9rLT9Nt0ZEjTdQAdf
Pmwzs8OKfAV+3PTfFnXrZwl/ujY8u/SDFGHDHXEL3nxIlO/ju0nm1HdNX8r3
kTjDekX5cjFKRsGRSvOa1tF2WFRmYezMaKVH5NEpfvdttNcaV/Qt8eGV4vZH
/XYhvRtq5zsn2i3++Fq53iw7ISq0jnxPW5pv6rf3anVhP0PbpxsKKgkPcjHp
c+RyaV2j5a6m0QV7lM+7NFnrWqQoJ1dEdrN9s1NZbO7ZtU2jJE2NC6eaHRjv
r5zo1DenY5OS2tMes+INo08pDqc3VL56xly7POq9e0HsMaXe8uiEB0bVtS6z
LA45fdumFCw3/3Z3upW2/rvEgleXjinRK/qm3Xz5az3+5OPGgdHnFHPjs1FX
2tfRpn4+PaCFnY9yfe2xBmFbrbWVn7u5WBsEKw45Z7el5dhovXKnbDDbdVQ5
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
pRfHDzA+kKnRboo0GBZwTrGdFKobtjZDE7s34+ymkjrlbKmIcau6FWrGd2y6
L7ztTuXK683O3afnal71X/ri0/wLSvDEhCEPV9rIfsLd7BWXQlLrCUd8tX1x
0aiucOiwLfPCt6us6+24+/YRa+HI948yz1ZS+URAkv2IXjWENy67NGPVlJrC
OyYbnV200VL4/D9tZg6YZqE+b8G6sz23Vhb26TsgZXZQFWHj7LZh1xp+1eR5
u+6p1mm3ZpxrgG7GoGhNl7Ud+imxgZr6q1pOr70vW2N1WVmW7HxR0yHxR0/L
4ama8aMSZvmeXqG50OtUpeVOOZpFgTsft4y/oGG+zhr9vvTCa8GaPA/jA8Mn
qfshVacYBmRGmks98eqCud+XfmbCjyNuj0mzryxcbsXFyQVnqqr2Q/eubA1V
12PlAs+ZTKyjzufsr/C+M19y/hz6bmzllhdri539Ffi554fwwyHq90K9w/fR
/ca89/Nbqetp6h+Y+ZPnMX/CNd7PPe1wq668v1NdO/k6P1Xrx/CK1yediKkr
7zP1Jey8bd27/hE1xT9ht8WNjYnVhY+nV3LunF1T/KlH4bFj64zXVqgq/jlu
lzSLG1UWDrl19nFzp6riT/0Kfy19ot/Z3uV0I25Z7yhyUZTJZ8p6OStldStX
nfn5acp1ZWFg28fhf5bXvbVt361t+GFleHxq0LbGsZrTp9ZtST8Sorgvfjpt
27QPmhXdCqcV3A1RvnTL0tWOua7J+7C5afjRHVL/zuif6N4w/qTSZ4/ZjhWv
DaX+ffPW07jEvJLCI/osCdg1zEC7O3VQzLqv25UaS6omNxxvpH0X7T2x3dqz
yv6PFxzin5ho70f4L55sEqp4Bpid3PK2rLbVt8kLZ/VVlClLr28JLCqvbZb9
bqrTo0NK6T9yHL7XLqcNXdPGr+PdC1Lf6N8XtffptHfhjlvKsh6PHSvrTGT/
0SSvcd2Kfuq/v4D/0DVHG/W96KXeXzkck7th13n1fkvj8/MmPjgn9Srz9/Rg
3a17RyrI+Rf7oXy//q0ONvd4VFH49rioFO1ZM+GruQtbGb8x/e0+Kr833yvn
EdQrMPUKzP4t9434vh75hT71qGko+8Hc/8F+6WEF92uxP2X/l/s4sh828oT9
Yc9ssXM/BntiYudUT/s0sXNfBXvRp+BpMceS5H4o7ytMf3BfFDuMnfuj2GHs
zo1dNxsbG8h+8c+S1jUe9ymhY7+I8wDqB5j6AaY95+EejZ+F1v55SO6jThlZ
ZrThsOOyn8x+WuK5S/bxS8vK+/DtTgddQ616P5XzAPxhxl9N4JDlm5/WlP3k
cgeXl0jpXVP2r6j3/sy0W/5n18NynhZ8dV7ugpfXhGm/e/rbZY/u1hUucJut
W7GmrsSjXiQeTDyY9pXdTsWXLmkr+9nb3tQIM11ZX/bPqDdf+3wOnxBzSurP
254ef9yK1AnTnvuzrC9h1pesx/n98vrU+V7xqqnuzbTW40ddfqgJuflDaZtZ
Rsd+CPsRRjtOfXT3eybnR25DTRv7OT+Q+Qf9bVaOLztyvZWsR7eEfjxavouF
er+o55U49y9W2mfbPLuU+euu5u9zHhq/BEvtZlvD2OPmDzW3ryxasGuvOr+x
P839H/I5uK7Rl5LVPgg/bnr08+cS8bJ/jj/7cU0q/bC6siRW9tOxs58t93OL
9+uGFeSv8Y2Plf291PSSG6Lnx0k+3Pfh+dOnZY9v/+CrsE/lWeNqXkmWfPAn
n/yca9u/OXyVfLCTj9zPLc7H5mN43tO9XyUfJeZZoWnj75IP93ukfxrGTQvR
pAu3Xlbra8PgDMkHf/KZ/Fe3tWZpaZIPdvKR+7nF+SyOj2i7xjZd8rn3/kn7
Qz/SJR/u8/D8tQd6BjzdlyNcI2WtbVcz9bwDf/LpE3dSaeScI/lgJx+5n1uc
z/jhzef6rsyRfE4Paj0/tFeu5MP9HZ7vUeFs3Nd0lY1cv04Y41Ek+eBPPi2G
Vszv5l8g+WAnH7mfW5xP94g9Z0NeF0g+3nd8zj8/Wij5cF+H5wfqTP4oEaBy
1pcTj50mqucx+Mv+eLzTAYeVhnI+I/9eQ3E+cj+3OJ89tVZkuu83lP1njc+q
+dmFhlrOR5nfOB+FZf9tXPlaNzcbyf5j0szxVi4TjMTuYGxrOzFI9Z8/xXnP
myEGwv5hjv+0b6XuZ38bnrtfu0I9L1rfYef41DlGwqUb+H1sfstQzmPJh/NY
mPqz3ILSUUvbGemoP0sbdVxY/raR2Fd/azzbv8BQ7OsnZD2oMkdtf7//oLja
AQZif3y7Rsd/ahiIfdDrJt2y4lR738muSZ4zDHX0H/M//Qej/1WfSwbuN4qk
vvrqMSrX171I7At3JZid/Kn6G7u0SPfpny88ydzw4yizAmmf2mFLntsx9Xyt
YamwdeFbi1R+E725l32hQv+RD/0Ho6/5khMe7y2KpH7fGb5xlEE1VX9tt1T/
FocLxd5wgKdLxS1q+yD7ThvrZ+SL/XLVqE7G7/PEfqNzpvOzaT/Ffmn4+D3p
KwvkfJ76iP6D0Z/2qu+dvq7qfnfJnPQbayrkiX1H3RUv/jmi+tdKehCyOjNT
eLnf/gBtsHoeYhpRX3HurZ5HdvYe3fuMY55wF/fZAxye5Uj/kQ/9B6OvT5ku
Dnf+zRV9nWudXpQYpepvl75pmkUP1d7lXe062c3V9neuRvc13Z8l9sdHp5f4
sjZT7NGPt1W8UjFbtcfnjo6xzZH+o36k/2D0m7h92uhYVj0fqLlu6+qplzLE
fvKsxf55PdOFW8+fvNT9QIrwbvuW021d1POiesOVNS1S1PPbUdaZFXbGZKic
aVKlysJ06T/yof9g9LnuepN+clKG6BsV1L3Tw0Wq/oErbZoVfktX7R5XE95G
q+3fdZ9tnqpJFfunZqXCnzRKEfuP0Q1f+oao9sTZ3tbKwzTpP+pr+g9Gf49E
Q98WY3+I/uk2/bYdvJQsds9Fk24Ev/0q7FeqcJXP6kTh8XMOTLAw/iLtF4ef
92pm/0n6K2FUzYD0wmT1fNy418VMp2/Sf+RD/8Hoy+n2ZVadKsmib07bWKML
tVX9z62WJt2r/13tn+TjQ9blq+2TA6qcOf3gk9gNlmospx1W99PNn61pVfra
Z7EXFYyM6JXwRfqP8yH6D0b/IoNWtoWB8aL/YKdV1TwM4sV+xXtP99UNPwgf
7TyxaqRPtLBNdd8X9/z+k/Yj7tx3zPnxSuk46/HLO46ldOxv+W4qHGvgX0LO
m25llk49drJI9r88r+58cex6dTlfd7wS2GRH1Zrq+XpK0Oepe2qJfVXqbq+l
HVV76NyldqOuq+fzZhmeLwZMrSv2CmZlLl63qyf2K14Fpe4uVe1bXL7u2/q4
vpzPl5vW3LHQWD2vtBtRoOyNshX7nZPrfB7sbiL781UmWvy7d7t6vvRwauMr
i9Y0FTvna9T3f8cHp0yNea9YR2kqttx5XvN2/rB37t9fCX9OyO2hHZcg559j
X96xvdbrV/3u7XTC2eCIZnO8d7emH6y0R8K+ffxHCdMEr3qxfcO/v+qNyI0B
/b9f0dyJm18jz8RC9qvk3/MtXr+42AWHbR1np/VqfNjyov1KzdTwHlXifr2/
lhvmeYf991zqr1n1N4yJXhQt9dY2bUXFqetL4fMuKTltN/2n6Z7fepl/jonU
6wdNuhuYJ5bVBh+K7Dtz2CvhTT+beZRa8Fa4ceryWb67Pgp3vtVv4sB1H6Re
e1+58fZSVaKlXqtqpNm3uN1rtb7c8NJ25pV3Ym90IKxWnvdrTcU9Yw659Vf/
PuHCzcaPV3T9VR/c+Ga1ut8L4bT3lX3Tlqv22LiUjd6WCcJbn77tOdowVvrD
M8ervvXsRNFfxXPosGcvEoQbVP4zfUBukvQH6wX02bW+7DvtfaJwpUkJQSE/
Pgvnvuzz6WmvZOE/AqvHrGv3TfR2nDVRCemUqN5vcJt+KzXyk9gL7dpumuaV
JHZXx6aezQs/SX+QD/rmduu6dt5oVe+9ocPvnJ6j2s+E3zAIf/RDeHRIoPLP
ZXV91ehH034nd6SI/tRW291K/Kly/s8yl8OGpUl/sF5BX375ziaR91OEU21G
Vsx6mio8aWw5hxIrMoT/6pHR4N38dNFbKqha9fmLUkTvYP8aNb27pIo9cf1q
gwF108S+b8uywhYjU6U/yAd9dapsKHheOkX4QU3zWqneqr3T8DtOhdpM4V39
nKrHXVLXd2YTd228/S1T9L86kX24pp/KH/76K+XtuWzpD9ZL6ItbGfDnl3pZ
wtF7FGcze9Xe5+nfHjVjcoWHho5yzY7MEb3fai4f5hWVKXrbWa4ZcdonS+wP
8z47eSzNFvuKoo/t+l7Mkv4gH/SV2ZDc9scEVe95r4UjTZNVe/2IxgssDuQJ
L7l5eNjPCup6Mud5/u3/uueLfqX62HdtcvOEw+NeNM42KZD+YL2Gvvvp5VcZ
L88X/tfEdkMjz5/CzbvFHG/jWCTcocnNgxUbF4re517x2082yRe9dbYked/L
yhf7pRn9F6x9+VPsU/7uPW9K+Z/SH+SDvh95Q+aWva7q3Vvi/c76PVW7accd
F1pkFglPbFlmR9Wp6nr2R73mK5cOMJD14uAeE8sF2qkc3ejgxQ0tDLX0B+tF
9I1wbD/2j+kGws863Z1QN0XlrW/8Uk50NxI2j6z0fVeYut58t+q4W1xXA1lv
ri0K+DTrhIHY+6aMGtnfQl2P+v894pXuooGW/iAf9H0Jfhdd0dRAWHut7ufa
A1V73vCf8/0DjISPDw5x2zvhl57i+oH7M9RX3OelvsFOfQPTnvs2+MP4w/hz
Hwd/WNZXxYw/93Xwh/GH8ec+D/4w/jD++n8/Qz007nLLWx+isuW80G7C+wSz
fpnCh1c+vzD9x0+pn+Tf6y3mJ5++LtxW2+RXPZcfsPxgmDLT9UDi1OlltBGZ
7odbP78mf29DPQRTD9XXnA4t0dlK9neXPe2+89T+2uJf+XOTLOfF6v1Hzq+w
w9iDV74oMzZIrb/KGcReGjLCRuycb0n9ZZlu18ZL/XueMgs2mRtlNJB67NhQ
s1L2WxoKr3fvtmj7jQbSnnoHtrrcrU2VxN//3of6LK5S04YzV6v/vjT3FbCb
zZzt67PSQeo7p/c57V85NRPWBf+35Mk6B/E/Ojba+81AEx313PZ6Y6627GGq
a5ZSyb652Xm53//pq9Hlomd35byfeo/7D5yXtOk6u3ebX99NixZOH89b3Jfx
jvvZfF8wdu5TY4exc18aO4yd+9DYYanniu87Y4exc58ZO4yd+8rYYf7+h/u+
sPRnQc0Wiy5mSr2cbZE1f9HMbOGFR3ucePehobbwberuU9/2aFraDZ414GAD
Yf5+hvNV/l4G5u9vOE/lfWY/vd+ktOWfXlhrazilmN8ID9SsKRN7sEELleX/
p1Fcbzs+ad4u+7WNdudce622zFHNYusdYxzMbMSf8xjWB5xv8DzOTzhv/B+n
AHFc
   "], {{
     {RGBColor[0.237736, 0.340215, 0.575113], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVD1rVFEQvfveuy8mEhtLFRRsbGxsViEoBis7f4K1aCO4TRCjvlVJ4RbZ
ItFuU6mxyIIJxIi7leLXpvVrtwjZIMu6gkg6z/GcgMUw8+bNzD0zc+49dvna
patJCOE6JIWsxxAacLyEHuH7N6QH2Y+fB+CvwF6AnimFcBIyBZmDtOCfta8B
+yFjYZ+ALMP+AanC/oW6bdijqO9TkJWg/0uOGUA/T1S3XJKPMfWScs9Dv86A
iTgznVOFfRx6IersRegBcvqQTciRPISv8B/Old+BrwuZhK+AvhFU467rMIc9
tSEX0ftBYkPNNZw3Dvt+KkxtxxWJ6l9B7qco/B+jeqDNPjaM+QFyb0adeSgX
RmLpGGvf9pOoWT+NOmPT/q1EWNl34TOJmXvbSbSHt5kwv8u0g3+xyP2cKj5m
6rVwv8RBPLfxfxu+2n87pp4P2tWs99vwOfSdRu4ffJ+BbjG3pBmTO+QQ98Dv
mud+FnFjOOccdwEZhz0N/T6KKx+gd53bc/7Ic5kxp4iHfOT+iLvwLqtBPbP3
N9BD6DVj+oa6q7C/m9s7rtm3zR2MEnGMXBtG9fMzaq6L7nnZPC17PsTCmRzN
hamVaaacM7GVzd+WcdaDctgL58x+yCPGNIO+C8f0ovB3o85oOq7uWuyXWHh3
uAv2N/DdYc/M3bujZd9TzntfKh43gXUM+kIuzHuzJNc5Q/KIu8pTxbE39ngr
aufkEDnNOQ09Z+Je8ky+pHoz7kAPzD1ysOa3o+PYefc0ZYz0r/uurWba1673
9MKYV4yFb9Okd0aedc3Vhmf1Kmo+G1Hza/jMiu8N+2X/rHkPtSZS1az43Ztw
fd7Fbd8LvjFbvoP8xxjuYjmKJ8+iuEKbHHkctetH5uCc+/8LTD/BPw==
         "]], PolygonBox[CompressedData["
1:eJwtkrkvRlEQxa/33n2IRKMloUMEQYHEXkoQf4JaKOlE7EtB6UNHYy1IfF9s
QSWx/QO2QkTE2mj9TuYVJzmz3Jk5c6ekb7B3IHDOVYEIzHvnpnC8gNLYua7Q
uRhkgxbsK+L1Wc7tEr+Df4NzeDu+T7inSD/8Hl8R+eO8G6ZuPnYx9iM5aXiT
cuCFseVOgjnsUW+5Q7wZgS+DBewy8pfgt956f4Bq3l7SrwCeDfbhbfhy6JmH
fRLZG71dxF6Fd4cWzwXt5M7imwhMs7SPhdZbGj7grbFpV/0D6h2SU0tsHfsU
vgVS8Ep8G/DZpLdqqnaaN7mB7VC77Iitt3xHxFa8zfYKyondYO8EtmPtWjvV
bi/w/cKPwVpgM2iWmaSWNEn7dDKr+jVjP5GTwf4CNdiN4C+wGc/of+JNy7s0
xKZBWpaxd+Db3vgbqCDeE5o21WiIrUeczJCJrId66Sa+vN2Qbkl/mPKmUVq1
s01vf6i/1E08eLuByWR/6vXjTfsPqCP3OLLZpVd/qZk1u3Z27W1GzaodHWHv
RbYP3UhnaDen29NOnuH/RP9f8w==
         "]]}]}, 
     {RGBColor[0.2778258652667209, 0.44985447074145357`, 0.3286638367750744], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVktIVVEUPXrvuURFhSiU9lEUjXhGRAY10D6DgqKkBg0aBDVoVoNKIsPM
/iZJzyRfFqRCRGk/TbP0qbOK/AwiiPJZk4iy7ygatVZ7iYPD2WefffZZZ++1
9715ew/uOJDunOvDCDDqsbiEcQby49C5GZArvHO7sXkfuueQi6HLwTqGeV7k
3GHoq7A+jL1DkGdBVxmYXIZ5EqM5zbmvmHMx8uSrBOcLISchj+NsD9YTmDNx
/gh01dhbALkCcg3k7MDuvYn1cW82tN0jH2+hewrMM+HnGORNmGPYG3E2F2MM
Qz7qDTOxN+osfWxONxueK9VZ2u/SnT04901vOYX5O9ZDsPvpzZ5vGYBdg7MY
XtFcL/mat7guxb050M3lmzDXSl+L9UVv710Y2V4mdJexzk+39xNHeWA2tKXN
HKxP6V7Op53pKccxrnq77zVis09v+gJdGXRFwTT2IsWCec1VjngvfbQoX9Q/
gJwRWZwZb97Pt9Q4ewffTAyLYNOGWHnaRMYlciqmt9DnbeAowHoc+lasmyC3
Mdbi3jr6wNwq/UNhoe2gMyzUBaHdlR0ZTuqZiw3i0nbc1ydubITuJe5dDflH
aBwlV896yxMxMJYdmNsxHikmLbqP8aJv8or5H8QYg/xOMf0Dn6O6nxjJJ9qO
0x57s7FeCwyxyN7UgXMp+eM51kE3xhDkXtXbp9DyUxhMc7NUfqnnvUnFJS4u
NCnXzPkrb+8Z8cZxcp1774WP2KiPif+MQUIxv6u4LAPeMtX7tsBiytj2A9v6
yHJ+Abo0b/4Db7Egtr+h5alV8WyTTLylkXH1fKA8yyYhHLz7BHydgHwSc1dg
crU3HMTzBP6XwE8K+sWYcyWfDqzeyMs62O9UPd2CPCmcaeJgVmB8v+GtZhPa
ZzwYJ9YQ64rnt4rvjd743qC6I6dKlIupmmQ+WB9zVO93vL2t3Rs/2pVr5jIl
ntyTDW3JiW5xjHOP5C3ibWdo9ZQvjvItlNkrUt58r0AMzgkzsTcp9sQ3JL9T
WDqEpzOwmsoIrWez9qd6dolqIEd9mfXBt+dpb0x8I+9oUyw8rDfa/ZJPyuwz
yyPLedJbjQ2qflZG9tYP3rANqt5zdSdtuc8aZJyeeeNPv2qK+glnvnmeZ+Pq
bfymsa6I7TPmYW92xJKhfsK+Qh9D8hNXjbXId0o1S+5kKgeUC8STevVsfkPY
46ifCM02W72VcpZ4OSB/5EIyNE6xtuq0T/72hsYt1k2ft1piL/mt7xG/S92K
B+O1KjLsv6BvDozL+9WzyWlyIiHON3v7TlD/BvNHfZf5fe4KzfZFaHwiR0ah
H1BPq1L/K1VvWaNvd7nq+qFix3jHlPcW5fOB6vP/d9Bbr2HdX4f8w1uOyYUB
5Zd55n8G+V+puDOOjOf8yPAQ1z+xJh4C
         "]], PolygonBox[CompressedData["
1:eJwtkk9LlFEUh2/zvvcSIS50U1qLwG27CHQzUQSu/Qh9AF1kESEqmmQhDEWS
OgWBEEFOgQom6Ig7saZaCWZo7sRGcly68vnxc3FmnvPnPefcc871+309vYUQ
wk0kR1b5ech/E8Z1eCQL4dG5fjmFMBxDGIL/IL8zi7h8IYQ6fDU5fhb9Glwm
voR/DNsM3CDnLfQq+iTxP7GtwxVsv+AqMq/v0dfgA+JvwF+wvSJ+HNszZBP7
N6Q9ub56GsL+InOtp0gVf8zdSwXZwXeseqqF/z/8FX8/fAnbCnyPfM3EjWBb
RP9AzEu4A/9HeAl5H9zTMrwa3essthV4I7pXvXETbkuur5lcgeewTeN7jf4J
rkR/K9tnOEO6NV9sZfr4l3m26r+Vfrb05oJ7msA3nHlf6r+F/KPn8ZqJZrOX
u3f1XML3JDpWb34M303WleOO4vXGgneyCw9mjr2IrTm5B/WiNy1oH8ho8Mw0
u+3o3RaJ34H/Rs9aOffhQ6QW/Ma68kffluoPwM8z7045l6l1O7m2eijCp7lz
K8eUbjPa/wC9H+5Kzqd5dybvXP1qJkdwg5i94Bs4ib4h3dJ3pIZMRu9eM34D
v43elW74HbyQu5ZqLsE/om9XN1uDzwB6inZr
         "]], 
        PolygonBox[{{1566, 734, 1568, 1218, 1219}, {1414, 115, 843, 1415, 
         1416}, {1229, 1228, 1225, 130, 903}, {1219, 1218, 1409, 639, 948}, {
         989, 988, 900, 734, 1567}}]}]}, 
     {RGBColor[0.37137836320783557`, 0.5271753189415453, 0.2524828593821648], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVDtoVEEUnffezKIWK5LEqElWVETETy+rWCpZjLy4TXb9J6JLXK1MIRpE
QrRIJVgmhSyYQizUSktBRHSTRsSIIPIUJIJilDQL8RzuWVJczrw79965c86d
t+381cErsXPuOiyBPYicq8J6YM/g6AW+9M4dCM4NI7AI/IW4b7AM1oLlYX2w
c9i7hphhYEBeEb5+7mM9BLwE24C9FDEdwJozfwU2gJgR+GPgmsjyuHcRcWPw
XwBuzTlXx95n9LUZ60/wbwF+wPdHrLtylldRbjmyXNY7hvzLWB8Hrqjfvc56
LKnPJ6gzjpibiLkRbD0eLO6gYu8gphP+d+CkibrPYdthdxE3Af9ksHpF5WQ6
ixyxd/JZ0x7r7nN253YvffK19/hdgJ1A3Trqp8BR6UM+08j85HsP9qpY7wYe
DsbnoWD68dxCzjgg14xfdqbletii1plwSX7q+Ta2c9aiTgM4Bazq/ieBc8D3
iNkhnWvSel780F+WrkOqv6wZStUL+Z8GNmOL5Qzmdcdp5fO7gv1XsKOR9ZyJ
2yXVpa+ifepcEpJP+lri9Iy3/s56m5d+zQHvMaG7PIzsbJ67M1jdXZrfI6rF
N8EzqCHXr/Wd6X4FzXYcreqbyU8t3kiPL5irx8BO9BN5e4ext1rUdEVapOKx
RxyRH3I8J56fJrbXIa2+az6n9J3zdk5Dfua+0Jq8Doo75rPOIurNiAvycFp6
n/L2XZam+73VmUT8bGQ57I+zU1ffjyK7V7v3GdWk/gPih3yMiBP23lRv99X/
OmDNW+7fxPiuxqs6s3dyzF5+KPdnYm9mAfg7MU3/ADfhPSwg93ZiWlLTvOa3
V9x2B+OkC9it+I05q8Wat4L9DzLNzD/xxR7pm5cuvPes7s1ZKOnNU8tU88/e
eVZL54+qB76JMb2Le97u9TUxLRvi5j+smaFe
         "]], PolygonBox[CompressedData["
1:eJwtlFtoz2EYx3+//++QU5sdtETEkiQuSRJ3CkvbFBmGTVNONzaHzTGJIpo2
fzlcSNuU3DiN3a8xRtrB34yFxg4yi8KEz7fnvfjU877v8z7v8z6nGVv3FOxO
eJ5XAiEsjpDZSPietxC5FZ7AVw6H4SdyS8J0FiFvDjyvGFLIr+Es8hkohDXQ
DPXYugY/kNOw0YB8HXzkTLiFPAXucD4JGwXYboYfyEm4CO3odcB5dM7BWlgH
K+ARd9ugiPM81qughju1sJG9577pSHdeaPILKEauYq8SlsIyqNVd9yf97Zf+
DL9hNDSf5Nt6mBVZTBSbbzACn6APPkM/HEVnB29NhbvYOwlNzh/5sjk0Xz5i
7wNnE2LPGx+bT/KtSf7CQexUwvfAYqkYKpb34R5UcLYPspFvczYTGtE9zd4J
bHdAJ+srcBnKYDtsgCJoQe8xvIHuyP6sv1/grNrpSPcSJKEESh2SB7gzCBtC
y0UfvGT/C3tD4EMCsiAfX/5Qa+naC60WVAMp9AcDqwXFbAh5ASz37U4G+qOq
R+SdkBdZDagWHiA3wjao4KwN/NiQfBUbw4HFULHcDwfgLzzlvBy2IL9Hp9+3
HM0PTUe6E7GTEduf9LcbMJbzdPbSYsuBcqGYK/ayUc36COvDgelINxdb//h7
Ee/NRa6HOmiAm9DLnXeh1bhqXTlpcT3Y6mI84GKq2Pa7WlOOlCvVfI3rmaSL
iWLzEB65GlGt7IVyCCGIrCZUG7Mjq235KF9HXe0nXe67kDtD63H1uno+5Wrm
jXtDb/W5XhhxvVHjeusQZ4exn4KuwGKq2CpGilW58009oF54xt1sdHOJZ2to
MVKsepDfQj7yroTlULnUjGh3PsrXOZHFWjNLs2tcaLlTj/QGVoOqRc2cHOTj
+hNyN0zm/ZXsRb69Uaj+is13/aGK9bTYensXTEd+Fdhd2ciJreZ9F2PFWj73
uBwr10vYK01YTau2V0dW23pTb2dhIzO2GaBZoBgoFurpU5rVkdXuGM0z5GO8
fzSwO7o7EljtawZrFmuma7brzaWRzQTNBs3ITaHNIM0ixbwtNJuyrZ4qi2ym
a7bXudr9D9mq3+M=
         "]], 
        PolygonBox[{{985, 428, 1042, 1027, 1028}, {1230, 532, 903, 844, 
         845}, {1028, 1027, 1562, 731, 984}, {832, 831, 1414, 644, 1417}, {
         1216, 1215, 1406, 638, 946}, {1558, 730, 1560, 1215, 1216}, {1557, 
         729, 1556, 896, 897}}]}]}, 
     {RGBColor[0.5797936393702607, 0.6477992924766771, 0.2594366117967208], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVktoVVcUve+ecwIFP4O2asRJKLUO8qxJixkkg2So0EkHpaL2m7xqB/7A
SJuEJlCDX0w10QqC2laKFQI1mkoh1YFtFUXwlxc/WDElmvihREcq0rVYCxwc
9r7ns886a6+936v6bPX7q/Isy4YwAsbKQpaNYKIStgZjP+b6MbZjcQ7myzHL
GmF7sNaAsdWW5wcwvwV+fUF2oeeHML8DfiNGXa4zdRjfJ8TF927Y3UFrk4j/
CkYL1i9h7j2MDfAvRJ0ZMp6jBWFsgf8r7CyMZvgT2P8F/Kuw0yuybBgxv4Hf
6/tvYM8ZxKqCPxfrXUHvfb1C7zhvLsaScN+F/QqjA34b7AD2zMYoZeKgyWd2
Ic587BlH7HPYdwT+WdiPovAMY71oPnsyYeE54uHb+MZR7GmDfaugPfV+L/d1
wq/2ed7TDb/WHPcbc0ScL/F9DXH6csXimbtBfF50DtvhzyvoTtquTPt4J+P/
DtwHse9EEpYuYz6M7z2Y/xn21QrxRv56MN6EfzsKV50xbcVcq98zP8q/g72H
Mb/R2BfB7zOPXX4TMbRE5Xgm+YvifRbsc5wvwb8Muy/ofASehxgn4d+HXY/R
Dn8D7KmofM0A3pkV4mck6O6Nxsk7u+0/wLlfrON/gnQyCPsk11nGuoXv2/h+
A/Ee56qZSq+ttDb4vcL6bLLumMdyLk1ybQL2gLmgfkvW8AfAfB5+L+zmJP00
BuWKeWA+Jh2D564m1d5well71EOd65P+f1j/I1cd3GPN5dLUjKj6WRDFNTmv
jeKanL8bdW+77+7wvZXWVpvnTwDfIfivRfHZby3tDeoXzzA/BrvNuvzc9/J+
9plO5/0m3nAce67DPoI95t5BDvvM46ognhqC6miHa4k5L5kT1nKP54vWFuNT
i63W9GguzK3mmpwvgf0uSbs7k3JT4/fwnnrHpN4Zk7Gbo/K8BniWwl8Hf3FQ
PbPGPsFcKUoXa4PyQ41Rg38n+X/BfhyFqwg7NQrbFNhPo97LdzPvIeg+9q8q
65Sapj7ZAxrMz9OgvTxDrlewljC/Luh9o67PQeu8OqpvjDlHzHXZ+f7Q/FCb
1D79Kvc16pM6PRpUA6w56oW9gvz85vjsu6yjFITjRRBX06PqKAZxlFxv1N/+
XHqlPgrGPy2qv/PeLCrvV5x75oS9q9Z9kJzkUbmjlupdE9QYNbLTPFO/zDXr
kfkeSdpfTsJHnF8H9R3eMx70xqL1T6zEzPefTupxfyZxx3qnJqcZ/xPj4n5+
H0qqx59ga6ylZtfHpM++bQ1QC4w94b7BvsXfGtY6a/exf7vJF2NWuw8xDuOO
J/WBe0ncdlrfg0lvP+7fvUeuu3esW+qXvYNnWXMDPn8MdgvW/sXcpqgcEgOx
FK3nbsyVg3pjh3vVA/dY6ow9gXXZm+TvSvrt52/WsqhaIv/L/TvJ/wzsSRe9
59uoWmf/b3IPJgbi/iFJ0z/C/g9TCiXf
         "]], PolygonBox[CompressedData["
1:eJwtlVdsj1EYxr9xzl+sVG3iRmrvImqVuhSbXhCrVFtcWAliRSTiwkisFonE
juBKzRBcWBEuURGRmlUrRSpWyu/xnosn3zvOe867v87zl05dkkRRtAY4UOSj
aC4oAwvB8jSKSqXjOzITRSeR7cNgfRxFhcgGY3QutjODoOejnweKwQIwEFkl
+hL0udBtuOMJ9ouQVWF/hDN9oCuQnYD+yZmR8Bfgn8EXgmlgCpiqs+g7o38A
pjt7ozj4LN+fI+sbm4+n4H/xxgLeLkX2B/ohshHQ59E/CTEq1hJQClZwpozz
nm8+vm7w5mtHUImsypvtZ5CLvgJ+B/Rq9BNSS2IZ9ArIBvg96Lejfwt6cv4l
slXoT4DdnM1BVp1YTJfQjef8uBCzYpeNbMvBUfhekoEfypXyAXoHmXQtQTZo
BVqDtqANqAffQXvQLsik6wa6gu6gR7CRbRZoEXKu3DeAv6AAjAb5YBRYllpt
U74j8HUyskkhBsUyEUwIMul26q3YcrIXegA5OBtbjfpDf+Oer+AOuJuaz/XB
R/l63FuvvAO9eW8WNiUh3zOd+ZwVYlSsj5D1iK1G+0OMijUHdAEJ+sWx1TxW
76k/QB4YGnKsXA8Dw8E6sIG7OmBzlfPT8XETdFdkO6G/gLoQg2LRjGhWOqHf
AZ2Nz1WJ3bHG20xptv7PCPdt0X2R9Ug/+KfeZmEbfBG6RsgyoBxUOKtJQ5g5
zd7mkI/XYCv0B2Q35JtyjH3Ce3HGfJSvC0E5urGcOZjaG3orD74C+g/2v0MN
J4aa5weZdDOczaJ6+LniQJYLfxj+InS1s9xoJjWbNWAg9BFkV9BXOcuNaqRa
lYZZlI/ydRZ3blEuOLMH+rI3W+VcuW+KTRNQDf0C1Do7qzf0Vg3nr8EXwL9R
Lr359l4+cf9u+G2J9aR6c7uz3CmHjaGPeZs97SjtqnvgTGI+yTf1gHpBO62V
fEY/Jracf4Ke7aw3tRPmOJsRzYp6vtiZD/LlFLjlbadot8jnt/D94T9CnwOP
4OuwyYvNh/ua4YztJvVwO+jH3s5qx2nX3QGnE7tDd2mnabdpZ5dx1030Q2I7
czf0fF6Ycc16kbPdpp6c62wmNZv1ms3UZmJYmBnNjmZSs3lIPsOvBuuh23PH
Rey7o3+VWM53eauJanMdvlZvc+eQ1HaYdtn38NYizSlohv3DxO5cqT5EVpDY
P0P/Duetl1UD1aI2td0vm+byzdtbdWBQxmZCs6E7DqQ2U+Whp9RbG5E9Tmxm
Nbtfnc2GaqBanPcWq3pevd/M2W5XjIpVMSt23ZEFvza1flB/1aS2g3LCDtcu
v+2tF1QT1eYfA+zqrw==
         "]], 
        PolygonBox[{{1549, 724, 1548, 892, 893}, {993, 992, 1044, 421, 
         1037}, {893, 892, 832, 359, 1002}, {1160, 484, 1164, 1030, 1031}, {
         1130, 1129, 1012, 103, 1128}}]}]}, 
     {RGBColor[0.7994726411021973, 0.7595906242332253, 0.3006357688162337], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFWGtwldUV/e73nXN/NKTlYTtBKxFLLLnRiQJKIMj4QwSsD0SlCTM6itZa
aHmo/YHaFps6ozAgYGYCUeOjFuL4xipYI1OVJFbGsTx9TjsiCSgBcbQhkQS6
Fmtl8mPPPvd85+yzz95rP84dPW/R7IVpkiQv5JIkA78kJsk8TFSBv4m5XaAa
0EJQO2gU6Mqg8RXg1fkk2YnxYmyejv2/BM0B1WJuN2gIaEpe4yVYcwy8GzQx
kVzuLQI9BVlt4L8A3wq+JycZNdClgLVngC6CnP/i99ngG7DuPXy/Frwc9DrG
l4FX4IwC6FKsW4K5O0D3Yu9MfGvFeAb486DtGF8P3gI+xzr0g/o4j/WLclp/
JuhprHsX/OqgM3jWWPA7U913Buh22Osu/L4pSuYOyx2PuXGgN7gOev0JfBXW
7MPc7/F9GX6/BH5nTt9eBbWCtoGasG4p5q/BvgngD4C2YH4ozm7E+CDm20Fz
Mf4W/BtQDb6nsM8BjNdj/m7wGzOdvxPyrsHef2F+FvjKKPtMw/fZoFVY83iU
LtTpLPrB+rSBFue0txT0eSb9iyCnLCc9V2DNi9j/R9oQ3+eAHuP9MDcX4+cw
fgvjSnyvAz2D3/+MGtfSbzntbeSZmey3H7zL5/L8c7G+FrYbA34daAHGV4BX
2Q/E4CFjlZgtNo7opwP26SL7e459vcs4rDG+ec49ibDLOeJ5j/FMWR+C9uZk
d9qvzBg702fejXFxXj76MpNtCrYP7zrBd/8evJe4xbgK68aCX4i7lINPSnSn
m1ONGQO0TaXtU51J9yPgkzPJuAF7J2WKrZkYz09lE+4/CvqOdwWV5eXfH8N3
01LFyseJ7lzquyz1fXgXYqrYNuTvUbbPMscC46/G43ODzuqhvUFdPrvTeaHI
Nu/x/C7njCG281TaFrzd+h61jC7L2G087vGYuNzr318y9nCXjqh9B7yn02PG
1Ef4tglrdkfJ6fT8pJzOZHxNwfdq0HsYb7YuPOc1c+5jLE5yPO6I+n1DJvs1
2IYlkDEsVVyV2f/32s4cL7c9yR+kLaLO7g6yP+cesI6tvu9ixx9l1GP9cqxf
HYW7UQPYC4pNxuj+KB+fxNy3QTq/mclmbb5brfM0/TDXMUOf1wzESaL8t9hn
tNsuW+y76Y69GcYs8TbauZo5mzFKLE5OlF+nGws3RuXcx4NyJ/PpzET2W2Ib
0gbrQesS1aMa67rVsUhdu50DmQuLEtWK00F/g/x6yHwS/Bt8PwoaSVwxX+YU
by3G/3bvYZwx/kqwZxbmh4JfnUrmEPuDujSYNoI2WEfGdDNlYH15qnz3GvY3
Ybwpys+NXrvBeGK+H43vZ6XKlc22K+27yPWHWCg47lf4/GafXelc0ujfmy23
0/m/A/xr51Lm1Muj8s5jsPlHQXL/gflunL8MlKY64x5jdbtrE2vBB871r2eD
2OW6J6Lu8Cm+fxWU31oy6dNgfet9x4fs06Xev8V34R0eioqZnUH3We777sP8
Ssi8GTIPs+45xojllcYj88Za546eVHHB2JuXKY6/gIx2UDPm3onywYM+Y539
yt8THNPPOBb2GmPM01XG+ttRdf1wkDzW9+cxf3YUttYH4et0Y6lgbBFDE/Oy
dVVefVC5Y+aHxmhDEE6LvIe9GGtAhfcXGYfEJnFZ7HgbOKfVmCIGLorqtx5x
b7XQeGoyPpuMl432AeP1R+6bmm0X2on1ln3YTy13g/e8HIX1/e7FGpybBnIl
ZX8ehNE3Mtl0vbHaF+SzrZnyMfNtC+YvzBSjo6PyAvPDE0G5Y75r4U3utW6N
qv3ML7PAc9ibuhYyz+TckxLrxHyTORvdXvs05/W004lUPiGdTFVHez2mjzZj
bR3GP4Pv/u1YYEwQb8NT9XK/c11mfaa+C5zTKCNxbZ7hu3B+hfsu9l+0wSbn
Io7HZLJJneWzPySmSzwekSnuuL8/lf7MacRev8eMJa7fZUweT4Wrox7T1lXu
+adE9VX099gojIxy31ZCv7ifuzivuLgjk17DrM/HzifMK5TdZ/n0If1CnzA+
OE9dqP/wTHmhxJyYZOz22J7jcdYn4Aej/MJ7EesX5GWnD6Pu0psqNv4clcfu
dzx9nw5+5/gHiXTusd48f5jz0j5jlZil7ccZk+TNHl/ntwPfELONe75FGIeM
R8YmayJrGWvo+/j+dU71eE3UnX6ely691o1vlmnuNyj7iHMuZR92XM20TGJn
bpDcTeC/cbwwbnj+LMfp7UF96vwgex+3zXku7UI7rAnKpaudHw45R7DWd7ne
b4vKbeflpcdB1+YzfF+edSqXOAeyj2Q9pc8aM/2+jRg3dvgmOOQawVqxxvji
+6A0E95o70vzqkX343e93y98x7wShZEKfF+J/R2Qsypo73jXXOKUeKJeT0X5
tjwv2eXW89VMNW0M5ssy+bvamFhuPBCP9cYk71njPuC4/cY4esl9L3vhtqD8
uS3If3WOi79Ah/swrjM2OebZ1LPguj/OsUbdODcyG4y/UtvopPv1JKp/Za7Y
G9Uvsm88FlSTaIcj4P/JpEdtEOb3Oaboy1M2iOqNeMe/RuGS34cE1UhivjUq
bzFvMnf1ReXiqeC9UXWpAH5BUH82DvzZIN9tDHqLVzun3RL0zuJ/Bh3u1Q+w
ZkbhsTgqd/a55+yOsvtPwH8dlHOYeyr9bj8f/FdB7zL+x8Acw1zDfM6aRDt2
BPme/nwYcoZHxepErP0q0xvtD5lqLHMg78b3MN917UFvacbxbcyR0bnc/chU
9x6My7sc79+5xz7VayeSS5kVHhe8n3JmR+mcc278rWsR33NX+T8H/vdArBOD
T0e9k/mG/CKop2Tc/T0KP2McJ+yTqN//gv474PtzR9CbnG/IT2i3TP3SiaB3
C98vXRjvicpzlThzvP+LmQC+wLWL70vGC/HGs5rta8brar9H1kb1gqxNnwXJ
osy2OJjriflz7F/6eb7fv1W2B+suazdljHBtGMjXrHfsk5jH1gXVvf50sG53
u1frd85jveC+Ed7L9cfc/7M34vjRoDO4jlgZ6v7/NNdB6kwfdEZhmfXnKsdC
n99tZdlg3S6zLyY7RhgrlzvP8r8u5sgW58kG96jzXAcq/P8V47jU+fBl8Cd5
v0x4JW75H8MJzydB2GKOOhWTmeRQLvM/6+5If6/1mn73YOzFGOO0He3Os7l/
oA8pWA77WsppBP8/5heM/g==
         "]], PolygonBox[CompressedData["
1:eJwtlXtol1Ucxt/f3nNWZEuUskXXnzkTG3TRsmRKNy8/q7WWRg4KWrVMS7v+
kX/kHUzZ1uawGrW0CykWOUvDnJKi0xxBc6kp0UDNrbREMgVt5ufh+f3xvDzP
+Z7zfc/5Xs7JVs+qnFmQJMl8EEAXn2IG6uBL0yQ5gy5D70a/i26PSdIGX8XY
TngL9rOZJBnP2IvYf0VnsX2IrkP/jR6B3oRuQlewZgZ6NLocvgJ7H+unoF/C
vp6xL+EtzNkAb8Z+CvswxqZj/x09HNsX6Ab0B+gz2EehZ6CHsWYq9mvQQ+Fl
oBp9M3o0PAHj0Aegzcx/j/UnWX8V+gX0BvAj+g3QDR+JfQu8CBTDbyxMkgWs
fw39G/Z3GOuF/wXuR3dqj/D3QQ/8m+iztOD/a/gQ5r+S8ZoG+JPRsVMMnoLf
y5pj8HYwCfsExRDeASajH0D3x183yLKX+9DHse0C5cF70F52g0r01OC9ykcT
fBH2AtbOBfP53+fBWj7lOxcdS+V0Evwm7DfA52FfiL6Lf54u8Jo1wTFSrA6h
hyo20XPlfzy2LHOux/4DeFT/BwvBErAUFDH/ksQ5uAx+R3SuldM74Z+AJnzV
M/YxPBudK9XEYHi/4P+fAMvhudRcOaxCL4teuwQfTfCx0bWnmrgHXgOeQL+O
ngbfEV3bqsHt0TlX7veB5+FXgkvhP4PnlMvUfC+oQR9BPw7vBNXBY7KphkbA
X03taz+Ylo+BYrEYvA1exr4HWxd4Fv10sK82cAt8EOiX8Zxngudo7mZwG7yO
Pc9J3MP10T7l+yJwsXonuhfUI6XwT6NrUzH+DF4Jcol7dDK8Ijh3qjHV2vbg
WlH+V8HXRve6erIV/lH03aE7YAV8T3Tv6w7pgg+K7s0KdDH8cPTdop48At8a
3du6M7bBG6NzN1f9Dl8UXVuqyfXs5/JoX0XYB8I3M3Y3tsXKAfpf9lib8dgp
+PFg20hwDH4QvAUfDg4ontG1oBhUw88z1ohtLOiD78j3r2LQDp8enMsqcDp1
zWt/6pFR9MNh7AuUO/WIaif4LKrZIvg55p8F/4E+8D9YiW01+Em9n/puVE2d
gO9nTx3odfj/Bf5P6n+rhk/CHwvuffWceu8K5SjjmpiYukfVqwPBLmyPBN8d
1wnwKcF3jeKr3n8w+C66FlwNXxfcWxvBWt197OEgvtvw9we8k7E3sZVo//Cd
qvmMY6bY3Rpcy6ph1fLtwbWrnlJv6RHS+deop9jv4ELfdVqvu3NIofemM5UU
OmaKXZf6MPUarW0Gf8LbUudaOfie/fVE71UxPArvHxxr/fM8c0uDz6Yz6i1Q
Dlbn7/Oj8I2pz6Yz1UbHULHUm/Attu9S15Ji0IJ9DLosn2PlenZqX/Kpf++L
zqXe1L3wiaoxvR2gPjjmir3GcvCHFNOM3wi9FVtS16Zq/FB0DpVLzXkYPiA4
Hjpfq96m/P/1RtVi25S6NtUDX7G+N3XstEZrZ6Fn5s+gs1wA5koULw==
         "]], 
        PolygonBox[{{980, 979, 1001, 410, 1040}, {1032, 1031, 1174, 495, 
         841}, {1064, 441, 1112, 1110, 1111}, {1122, 465, 1121, 878, 879}, {
         1111, 1110, 1172, 494, 839}, {1166, 485, 977, 1156, 1157}}]}]}, 
     {RGBColor[0.8731853982714127, 0.715740370740345, 0.3252068410322601], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV1lsVVUUve+eex7UgMEPpliqLdDWNIYaaak1gKUtUmSyhdQYNQb5QcYy
qBDRBEElWBAwscECdQKERIoRleIACA5/ICYO8QcEY6LBxEgkNK2u5VqGj9O9
zz777bPHdW6L5y9rXpomSTImlyQBdDj+DMMqhfAM6ALI/wGdmyXJcpzfC35s
PknO43wMaDvkw6BzCfKt4B+HzjTQZqwl4OshfxB8G/gm8EXgj0B/NuhYrI/A
14P24XwEVhlWoXVqQW/B+gD8RNCRWO+DnwBaAfosVif0S7D/EPw9oLOwFkM2
BXe9jZWHfF5MkncgD/B5JfiN4C9AviWTf/TzZfB14BeBnwF+kv1/AvRu21xB
Haxl4Aci9rJU+WKuRqXK22uJ9uTpG+lwyx/B3Stw9jDo0kx3rQyyS/urwE+3
nL6sc86fAj8hr3unBvlE31aDb7AOdRkz7cwBPyenuwaAXoOswPktxX4tVjv4
TtC9WDdg7cNvC0AXwrcXnJ/1zBloNXQbsUZD5y7YPAp+m3M+BnQy6A6s7yGv
At2E1QO+ljnG+pp8qt9+Bb4SdC/WAdsswarBfj9srYPsVCY/6M/+oPqxjnuD
4plrf+j3Y4n2leA3YB0EX257vPcH9hD4H5kf0NtwVpdKhzz9+X9P/T+C8nIZ
dD3kq8A/kygXzMkh5t59yH682fx9oC05/ZZ+DXS9noSdDPxS9hL4DtrAasUq
trwhqA4d/i1jbHGc41LlhznvDpq153HXYfYV+Jsy2erKaU/d0dZnvkc7FzW2
w7pQ94D1WYtRQffQFmW/Yn8a+1lYjdgPQv4bQD8LmlPy7KUjztFGnH8Ovhny
xVHxdTnGXvas9Z/2vHPuB+Q1j5zLNe4lzvGdsFPP/MHOYMabqidmGhOIH8NT
yV+C/H7jQ3Gm3LW6J1odH/km14i1mp8pzxedvwXW2ez6EhtO4GwG+Ab4kIA2
5YRL/VjTzbMfZ+fUh7dG6RzH704GyR9w/za7jllOM0n9tqi6sy+mRenzd5y1
GZ63MudqHugvxmHi8SnOA/ir7oV59n95FM/zHOhM2xkfZZMxvWscXgP+eNQM
fgy+zbkl7m7GfiTk58AXsSeCsI1rSBBu8A0g5rRmklGHtThojK3JC5srjc/F
rlEL6FDboT5ryBpTVuW3YxL2hUE9ecBYWmh+nHnOOPvuvOeTvx8UNKcVqXCA
d9cYS4m1POdd7CWeVxkrSlL5WuH+Zm8XRuHWZGMX8azWmMZZZe32webEVHo8
o+1BjuUL5gX0NOiGqDqWOVc8Zw5XOyd836amwk/el7i/WDvGVmr8WWsf+VvW
Z63P2HPsvcooLP5vjpD/8an8ZpxDMs37t0FvAeerwG8B7dF+jTGQePhQVN9y
pv/KhN1X+O4ZvzhD9anw9Dv7uSmVPdb0Rc9sexR/1FhbbuzdGqW/JUo+xe/C
ZL8hzPliyHux3813Pwp3uiB7NSjvf7uX6Hu7Z7PMbxzxpjWVbJdjjlGz+2iq
+eCe8t04v91z/oZnp9q2DkHeCf1jkG8L6q1LmTBthN/UnUH1S6JmvNG1azGW
c/aro+6tisoXc8A4+5zH/kw4PM5v6xLY7CeGZqof+469yjkbEq5/a5ByvqYF
z0GmuuV9L/uiz7FcwN090P8UuhfBHwP/s/ucPHPPOtS5puR7XJcO4yrj6QvC
9t6gPPc7F8SeAmNRv98vvmOMib4zhjmWMUdnjONnM816pb8Heo2TzOVpz9GX
mWqX82xcNb7ljMHBNjm71+zPbsS2nTHA9p85+cq6NZqydsS37X5H+I3APb/T
Zvr+as/djlSzdwF+lDNvoFdy8onxd0Xp7DHWJv4t61Vk+6WuFXOxx+8o+7rW
GMP8vOk3oC4qJ4V+l+9IlR/2Br//+F3xHHQWOrYOYmeQTzvB/5bpN79nmuse
z9RA4/+mTN+upc55SdS8FEfhJn2kr+uj5muj3+GhjuUk5PvAn4h6l4a57q3+
Fi3PlGd+P/S633k/e74bZ3ns38v0fdKdXv9WqXG/Fbh/abPCbwhnnLkvs895
15x6xO9dqXwvcc4YM//faHPch6N0ukEXBfVQp/PQ6bpPZ07BN0Vh5+FU9TkX
xX8TVZNS9zTrxHq9FfSmMCec11eC8Pcy7L8e1A/EGPYV7bO3zkbF/on/Pyiz
DzdG5W1w1Hy3uxZFfoOpsyXo3foJ9v8FdVBonA==
         "]], PolygonBox[CompressedData["
1:eJwtlVlslVUUhf97zzkXTdDwIsTEqG1w5AUTylCCU0ttqwhUcSBClKgJ2FIq
oGLEAUFtKlXEBMWWlqklOLQ1ouIUNaK+KWDi+EIpxjhAolaJ2Oq3sv6Hde/a
Z+8z7bP2/suWNDcsL2ZZ1gYiOMrPxQzshd8asqwBPFjIsrMZa4MfA+Ox7wQ/
wt8Bz+E7F3zD3MPRsRfiPwQ/hb8b3gdmwb9gbDz+CeBL+BBjL+DrAQfgfzFW
CR/Afzhl2evYJXgL51kIP05MB/4bwEz4LcTMhZfAbuwfiCknfhL29/DJ+Ovg
GdiO/1Dy2q3Yi7Gng3r4MFgGXwT2E95PzMHkM+ls2vME/D6wHP8w/opSlr0n
P3wy+Jn9KrBriP0dLIW/yljEt4I5N8L/A1fge5exoeQcK9da40Psn7An4N8L
xhH7L7gaXxUYgf8BZsArwZ/wY2CS9id+CH6S+QsKfqN++MHoXD/NHvOxvwpe
W28yAq9jz6X452DPwK7Avr3onCg31djXwQPYqXxx54C/mfWmlTxHc0+Ce+Dv
B+dOZ9RZVybHK2ct8FfyfLxN/EPwLsY2F60xae0DaaroO+vuemO99Shogr/E
WKHgM05l7h2MfZ55ziB2JfY8/KdAI7xT+xV8x/pkDUqL0lxz8Jvp7S4Dv0h7
YJ/uwprT4UfARUXXxCB8NnPW4nsKe2OyxqX1VuxnsPcH+6RxaX0b9j/EVxMz
Fn97cuwq7FrdjZg34QXGehQffXadWWd/EYwy/2b85cztiM61cqBcbI3WrmIU
209MJ7GPMHYT6++OXlt7rIbvUpFjN/J3PbwnuHYawG3M3RX81qqpWuwdwbUj
DUzB7sYeyVxT52M/Ea21QfAkvDW6VmW3wY8ma70de4m0qTfE38FYn3zBXDlW
ru8P1pY0MwZ99UZrR/bL8C3Kj86OfSbz50XfRfebH10DqgXlYEDajX5Lvekc
+Jrg86mnDGCfkbzWAdUTfCJ7HoGvA/uI/ZuYWUX3JPWmWrCM+W9g16meg3uh
anYAviF57sPErIMPR9eqNCqt7tCcXF/18F+jtaeeo95zVrQ2dIYLOMtx7Cnq
NYz9Bn8guJeohlRLC6JrSbZ6jXqeep9qqpv9d+bvrfu3RGtMemhiuEF3y/Wn
HM6MfiO9le68Bb4QrC+4x2yCP578PtpzfbLGpDX13Hb4lazxVsHrXx7dY9Vr
dYfn4dOic6ccVsA/ia6ncfg/hVdz57F5je3B/g6cV7RmpB19Y/St0di30T1N
vU3foG2c57PotTRftXoaY1UF12AndmOy1k8HvdjnJNemNN2FfTfYjF3DGlv1
bYru5dKctFeV51s5uAq+PX9P3akJ/mz03ZWDTfBFrH9v0T1Jvam8ZJ++H1Ph
lxJzCagB14DVwfP1Rqrd7ujeNwZ0wfcEn109fgVrX5vnU2eQtkajvxVfs8Zd
xD6G/Wi+h/aam/c3aUK9YFXw28uWVjYEa1dvoLfQN05n1ZnXRJ9BZ9GdFrN/
lpwrfdP0bVsZrG2dR7kpS+5d+ibq29gX3RtUg69F52A4/z6Ulaxxab2XsY/V
L/N49ZiN8I+SfdKktPk/3poWKA==
         "]], 
        PolygonBox[{{1201, 518, 1200, 1152, 1153}, {1095, 1094, 1064, 112, 
         1092}}]}]}, 
     {RGBColor[0.7948751752015297, 0.4583075740732274, 0.28778419340897915`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkskuRFEQQC/vvTb+gfkLzPM8NQs2ErOQ2JCgG23obkJs+Apam+fhC4xr
YiciRHwEds5N1aJyzqtXt6pu3ssbDXYFEo0xjYRDhF1jPhKMWYR+nzFf+Ap+
7YpHKDrDP/EwPom/4hMwrh4iv4u/4XP4Bv6Nr8N94h2fJ7+qPe2cK55j+C88
Jm7wMt5HdJ9SatI9YzpZdov389rH9pvSuXb+j/b5gzO6g91lTWfZe8zp2RAc
pOcMPQdgqStzy+Ep5+/wGvwEv8Ur8RbiEW+DF4TH2UtY4UpNFXx25L4p7Dyt
OwThpSNnW/FqV/rXwkbiAW+GqT7p+UTthSP5JvJ1xD3eAJOoeaFm0X4LR/L1
5H2a9+CyfiP7rZbUo7CZe45R0wqH9O4H9CjBR/AdfBqP4kf4BB7Bp2CM5248
Ez90JD+Jb+IdeDKe5ImnwH3bC+/Dz/ElfNbO9MRDMJfowbd5H9S5AZhPDOOF
MO6IF+C7juzfghfrzkWw15NZ/TBHe2Z78t/Y/2eBc208j5P3wzT9l1Jhhif3
yoLtWrNH/T9O12H/
         "]], PolygonBox[CompressedData["
1:eJwtk81K1GEYxd/x/b9DRHegiF6BIiaGMpFO4saNYEpEQRsDZRxNpxlF2nUD
XUB3EN7BNCqYqVmuLD+jnVsXfoDg73BmceA5/+f7PO+/8+3ceKklhNAHMnCX
QtjhQxlMYtdiCP9yIST4VwJ24QfYv0E+H8KHaFvfHsBfkjOPvaei8FVyzsnf
BEXsHeJ/4TuFV+FXxG/BX4Mu7Cxv/wqYhxeIvyC2Dh4T/y06/gXoSO6hXjUw
A78Em9gToFU28fvYy9oJXoWf5TyTZqtEz6Ke6h3zjv/Ctyt89eh6Y+BR8o7a
dQP/M/Lf4z/E/gNK8J/RWkmzj/C96F7quQL/BP7nXH8N33W0rZ6atYceb7C3
wS32UOZe6intF5K10bzS8nlmbdVDvZ5Io+Y83+F9mbWThp+xS8laqJ92nUq+
tW6+TnxbsnbaWbs/JWed3BPwA96dfCvdQLeYTdZeN9jQfMQfEdsAA9hF/NPN
fRr4l8Bxs14F/01zf2myH91DPsUs4h/MXEs1t6Nn1KzvwGhyTdWWZr3JO2t3
3WSW3JHkWOXobbcnvx3Nr7enGdRPOxYy31D50rA/c0/1/gvK8MVoW9+068Pk
tyG99PZ0M82jnYeTNZE2+idewe8BHW2E7Q==
         "]], PolygonBox[CompressedData["
1:eJwtkUlKQ0EQhlvLjkZPEPGRaNCFoiARBCGgBslGN4IBERTcOBGfEkSSSEBd
eArnMXHIERwv4E5EFPEifkX34qPq/VVd1f2/zsVwer3RGBOAhUKTMV8NxmwR
45CAED7RNokdEECO5hm4EnQGzJFHI8b80XdAfQ/2PZrXwdLXSs8svRvkl+Jm
6Kx26jEYhkdmVKkNQQpaqE/S30yMgIUj9Cm0NvJxGIMLtGW0LPkqrMANWgkt
JB+AfjhDW0BL6V6IwQlaDi1u3fv0nSPwxF1q4nxQP9LwjHaLFqgHnDkWN0Nn
DcI82qm4XbqzwplfzuwSe6EPSvCDtkPshh7Yhm+0IrELkl7XegZeqT0w1+Lh
u/pBrKLX/EydnYU3+ur05dldpO9anBfqyQQsoZ2L80y9i3p/D8V5qx4n/R1G
4YV5d+L26L4C9TL992hrfH9Qz/v/p//xH0YbOig=
         "]]}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlUtvlGUUx5/O+77DxUXbmSkkGKRDoRuTtjNTSUy4tANoImhLSzDaubQl
ZQHCGCUp0UQXfgQ/hXj7Ei5QUBZ8g7pjwQISG01M+P85vwldnJzznPfcb299
c7Byp5RS+k2QCTqCy4IPBfN+6+M7wtvC9wSbon+WYHUkpft5Sr+KnhD9tuhb
RUqr+p7KKT0Sf0P8tvgPRa+L/qIIOzP+JrE39T4s/EJ4U98b2HoB/6BwVg6f
d0TPCLrSbwj/mYXOxTx8W+8b4f+KiLcpfERwVfJHhXcF0+K/JVwWXBL/QBGx
OuZPRf8vuCD6vSJiaRLPLPQM0CD+ZcGCYFGwzvsKYF5bMJAfF/gCNT0jOCtY
EpxD/yN4fm+gvyLoI2e7PeT87mLL732Kdb97lUWcjs/1Mj1H/If0/qAUNb1O
PpZpomMZx++e9vHt2M/jd3wkfPpbZSR406p1TfRXwm9QT9d1Kg+Z7Txydu62
c19+xsQ/Kv7vonuiT2NjY4//dWL4KQs7tvdAdEf0u6J/yULH/n8QPSr6iOgf
s4hzUvRnecg/oG+N7PXM1fB1VzJ90X+I/3ke8TiutSJ6dq0I/33yvZdHbA/x
06Mmzsm+vDflcuTyiLi6gjXxv85jVj2zHrkJxyHYpQ+e8W/z6M1fWeRgH1/m
kZtt3RK+WcQO3i4iPsf5SRG5bbObLXbEu3KM+fcevC+4IbpdRH/dF899G/7F
IngD+O6TcxsIf8xeeD9m2aNd9myrFHdilRuxwtxsMfO+H11uyHl0vKP+fgOZ
g8r/iejv8uiVa+VeuTeu/znqV4Pve1XxXLI/y+zFIruzzPyu8B4T7CDv2p8U
nBBMCua8K4Jj4BnnUgoZ701d0ECuht6U4JngKXYPo2P5f/g2ws6Zty9FzTrY
fY7M3+DnyHuGRpmZZ9ga+nhK3kOdHe7FEnegSlzHyXeSnByXZ2CaHBbQmwWf
JWfjM9gtUSv3w305oP4MmD3PoO++d7UoRz6r2G/QA/to0gO/W8xEm/iayFZ4
1/FXJ+4pdJrUe553h1k7SbzOe3hTjf3f2uLezFOrHerh711q/DiLXfs3i5kf
zuwksuPEUKXnx4m1ykyU6ekieThOzxW/k1c6OW/rZLwr1Dbbk3OFHGvY8B31
3Ownpha5+K5UuV1z3G3nkOHDdtyfbfbXt6rCLfV9GuVGeee22Efv1jj3zfds
jJvWJqcWtZ4gb8/RKv+R4c64ZvbpvXQdvXuOsZ/23McU+Tgv1+37PG7jqTz2
cwMd97OHnmUv4WsJez3qe4iYLtPPNepboxZNejaVXs+34/Ud6jCrCyn2oUF9
T5DrHDkN976OrRb2LDfcH8u+BM4zsNE=
         "]], PolygonBox[CompressedData["
1:eJwtkctKQlEUhpe59/HSoKs4iIwmTbOiIAiESh00syCsvHSCJpZHKvBQoM/T
1TfJQQ8TzfoW6wx++P61b+tfez2MGv0ZESkhh7a8SIvCBrwJr6IzfBG/AufQ
CT6Lz8BVdIvfxR/BfRTCMbUIbqIIPqZ2Dld4pJMSWUQfaZF9/BU8j97we/gW
PIde8Qf4NryA3vEP3NGFl9An/pD1a3gZfeG/0Q38w5v5QOSC/adiPVxqv+wP
WS+gCXtr7CknZ8as/SWsGX7hXGB3aW2Kz3ubhc5gFn529rbe+QL7wHrTngL4
0VnvmvkJHjrLrhliOHKWXTMO4J6z7DqTO7jk7S/0D9bgbW+z1j/agWveZqt/
UIfvvc1eM/fgkbOs5STrP+QKKc8=
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNzk1KQlEcxuF/mDesHRj2QdAkMCoJgiBQtHmDpJo11PJGBYmBDlxCq9C+
tlFWtpgGkhD0DB5+5z1cuGf1PD1qzUREnVImYi4bkSNhgXl+WKRAnmWWmLDJ
FkV22GZKhSplDqnxR50TjjnjlEgimnpJg5QWGfcTb/rlm5zdn/UmHds955pz
Vzd4dVfVL73XDuu82GX91MT3WYb2s33tPx/atu9Y48k+0JHe6g0rPNr7+q5X
mlJgaO/pm15okzwDe1cf+AcGcSXM
         "]]},
       "0.42500000000000004`"],
      Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz8lKglEYgOETarroBgShAdwIQVBiFImSYOsgaOGqnWCWQxPkwhZ1FZVm
NkA0XEFlXVTLnn/x8nC+D87hzO8dbDenQgg1FWMh5OMhFJTWvobqmDe5qjVl
1NJIXbs217WhWR1pHGl3zKJKWtCZ8tPmdnG2Eu7Xs3nS+cQ8xbLzprI614tO
7XqsqKqc+vqI7rV75ZsudKVLvZv/6VeH3nlinY9s8Ic1PnCHY+5ywi3es8wR
K/zmCu+4yCGX+MU5DpjmLTP85AxvmOB19D8u8x88PCle
         "]]},
       "0.40800000000000003`"],
      Annotation[#, 0.40800000000000003`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz7sugwEYx+FXHO7ABUi4ExKrJghJJW3CWPfQpJO0IpFIDBhtZTA4BqFG
1S51WBQLanHoovT5hidv/7+v+ZJvKLuYyvVExDTzvRF/fREdfjmxm/0RGffb
/uKTY/tGT7vv9huvHNmn+oz7ZDd55NAu65PunX1LgwN7Q59I3mdXuWbfLupj
7pV9SYULthkdiCh4lvefAnt+D2sjDHo+bpf0ZWp2nSUtxaa2xb32QEmbYkfb
5Vl7YUWb5Uw7p6V9sKrNUdPq/Ght1rRs8t3JO/jXwl3XFugCcY09zA==
         "]], LineBox[CompressedData["
1:eJwV0EsrRHEcx+G/XLIZsVbqSA0vwBhk4dIw7gYpxWJ24zZvQWGhyW3lfkli
IYX3YG/hJSArNnYSz1k8fTuf31mcTpQv5lbKQggFdipCGCBLPUNcMkh3eQjD
doQGxrhilB63cTtBxCTX5Oh127V7NNFYFUKKiD63G+2WtOc2MtpaZQjrJPVp
7pii323GNpOhhVXueWQ2/nbvVNtNSmywzRZvbu8888cDdfqHrbUv9pcfuiiS
11/tE1980skyF27nzPvWOTq0Jc600/i/aVnatUVOtGNSWitpbYEj7TD+N1oU
37QCB9o+NVqCb/4BEkIw/A==
         "]]},
       "0.391`"],
      Annotation[#, 0.391, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz0krhWEYBuDXvEAkHbZKZhmOIlN+gCT5ARzHkIVpJWVnIStT9qY/YPoD
prU42FpwHDupUyRcFlf3893P+71fX0VsdmgmI4SwSHtWCCU5IZRSTDkR0lRR
QyUN1PFJJ9100Ecv3wwwSD/DDPFLjDgjTDFBZm4I7779wTVpprPtWTD32E+a
y2kjygTzdt124+YyWmkhzpxdl92YOUIzTYwy8/8eX3xzS4pC55flGwmCsz+y
SC7JJDeseF5jlTx2yOfp/w5ZQLW7NvzbJutss0Wtfk/us8shB9Trj+UJR5xx
SqP+Ql5yzjVXNOkT8p47HnmgRf8ikzyT4pWo/g/TYTz4
         "]], 
        LineBox[{951, 1224, 1574, 991, 950, 1068, 1112, 1110, 1172, 1113, 990,
          1571, 951}]},
       "0.374`"],
      Annotation[#, 0.374, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzTsohXEcx+H/4VAkksuZJUliJEnMJLkMyv0WFiZJblmUokROlF1Wg8Ri
UlIG5ZokBklKokjJY3j6nt/n7bxvXu9o00gkhDBDWWIImUkhZJFBjBw+KaCQ
fIop4osKKimnmip+qKeBOppp5Jce+uhikAEiySG8+fY7R3wyHA3hw6bbCAlc
u6P2ysb8J5dD94572nsubY42Z7PsgWeT+gSZ7lk9w+7q49oYae4pvYYF94Xt
9LyDWr/bbDtnfqfYRZJZI5V7Pdvu2RX7YEvtvC2xXXTz6D619TbuO+ucuy9Z
0lrY0ra5+38vy1ore9o+T9ozq1o7x9oJb9o7ca2bG+2Wb+2HDa2fF+2VBKJs
akP8AbNpQPg=
         "]]},
       "0.35700000000000004`"],
      Annotation[#, 0.35700000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVyzFLQmEYhuFXjrUEEdlQDYm/pD9QSw4NDoENbbZEhImIQzUEQSAF7dGu
ErU0uIjhFoGJtEWUEG7h1NVw8fDe5zu54v5WKRURm+wlETckMxEpxnyxq10z
TUf8MtQG7GgNJtoPPa1LQbvkU/vgQbtnW7vgXRtxp92S18551V640hpsaKf0
tWfOtBPWtWPmZiMO3Ie0fZ93V/UFe6SVedQX3TV9yVa0Kk/6sruur9hVkv+3
NLWM/bZj3qj5p2U7+pq3WUbuP9lVLOg=
         "]]},
       "0.34`"],
      Annotation[#, 0.34, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzEsug2EUBuAjVZtAwkykERETBnVpjCQ0XYIFtEtoGhKUDbhtwKUTEqSt
hhmp6tx9AVStoE8HT95z3vP/3/hGIZcfiIgcs0MR3WTEP7/80WFG/yW/eeeT
D6b1L7JNkxbPTOnvZIMqdWqk9BeywinnnDGpP5YnHHDEIRP6fVnuS3hzMGJJ
t2u+NafNO+YVeWV/pMkT2/5Zdbs0X7PomwXWdDf2Ghn7Muu6uv2eefscWd2e
N0bMoyTdXnU/bDKsK7qXeHAbs2/p3+gB3kEx9w==
         "]]},
       "0.323`"],
      Annotation[#, 0.323, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-10.59524501478301, 
   16.475894730318146`}, {-2.3470857853099165`, 2.335881637602617}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713692190780515*^9, {3.713692343619028*^9, 3.7136923670251217`*^9}, 
   3.713692400302082*^9, 3.713692482706703*^9, 3.713692976548405*^9, 
   3.7141305672481823`*^9, {3.7141306848031826`*^9, 3.7141306987517824`*^9}, 
   3.714130758161583*^9},ExpressionUUID->"ba4ae2ff-509c-45f0-bd57-\
e412e22e3f7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcomingXY", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "YYY", ",", "\[IndentingNewLine]", 
    "meetingPiExpLevelUpcoming", ",", "\[IndentingNewLine]", "XXX", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7136926833541584`*^9, {3.713692813579934*^9, 
   3.713692824038142*^9}},ExpressionUUID->"c63d587e-7e12-40af-86e3-\
773ad2acf135"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57.5`", ",", "0.15258571323408482`", ",", "YYY", ",", "9.5`", ",", "XXX", 
   ",", "5.`", ",", "\<\"Zero\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136928248055573`*^9, 
  3.7136928266211925`*^9}},ExpressionUUID->"a9919631-5e5f-43f1-91e0-\
b37b22d5405f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136927472292514`*^9, 
  3.7136927479810658`*^9}},ExpressionUUID->"314b5649-1f7f-4943-adad-\
5033949d2124"],

Cell[BoxData[
 RowBox[{"-", "0.005602073853649224`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.713692748831483*^9},ExpressionUUID->"0e7bc2b1-6fc5-403f-8461-\
b13b2ef87050"],

Cell[BoxData["1.1707418557281337`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.713692748831483*^9},ExpressionUUID->"427fda9f-bde1-4b20-94d6-\
3dd5b716afda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136923054137316`*^9, 3.713692306122746*^9}, {3.713692731819933*^9, 
  3.7136927421043396`*^9}},ExpressionUUID->"9bb33fc0-4517-4b6a-af7b-\
ce187135c4ef"],

Cell[BoxData[
 RowBox[{"-", "0.00601168368233244`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7136927518945436`*^9},ExpressionUUID->"6e37ceb0-0bba-449c-a153-\
25783d2b839e"],

Cell[BoxData["0.19666393636540952`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7136927518945436`*^9},ExpressionUUID->"cb75d37f-7271-41ee-8806-\
f4fa011fd805"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"upcomingXY", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", "\"\<Cut\>\""}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"XXX", ",", 
     RowBox[{"2.", "*", "1.1707418557281337`"}], ",", 
     RowBox[{
      RowBox[{"-", "2."}], "*", "1.1707418557281337`"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"YYY", ",", 
     RowBox[{"2.", "*", "0.19666393636540952`"}], ",", 
     RowBox[{
      RowBox[{"-", "2."}], "*", "0.19666393636540952`"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", "z", 
         "]"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Contours", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Point", "/@"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7136927592180915`*^9, 3.71369279953904*^9}, {
  3.7136929284822464`*^9, 3.7136929292174606`*^9}, {3.7136940016115046`*^9, 
  3.7136940175244217`*^9}},ExpressionUUID->"382f86db-264d-414a-a64f-\
4b94d4ce4a02"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
yd8hn+/PXGcv6cN9fnRyDZX+21HlUn1bOL0l/GjgueddJkv/RkDu7VE+66Q9
9/59jT2uSbEisYnH94t/hSpN620+2OWfBMLeQf9Mbz/zGe3nRs2qtkxb+4Tw
gDn5/E32zxqbfP4mvM7y7V+7nPxov0wpMq/biXv3aL/cNIwoeeBOFPHr/bHr
7P4IMhK+Edz0br3ER4T3uMaffXPDQPjN6OJJt+4mK1cje+263jNUuV1+n2+w
/Wuid4uPveT9QfpnXCr0efbp2UvCjU6trWK0+0z8OOSww/FJWdIejR/zadU/
A1MJO019mOP/7iPhtcqlhwUbS/4ufc9t54DR0n4dWedplu8vuT/ExeDOG8K+
Ee5ZuOzqet2lv7v6k6pDpn6T9mvj1Stdutn9Jlzgn0271w6V2Nrlcs7XLOk/
mp94puHdXtLeDQ4qOqbc0SzxqHNUSPmaerrPQP6MTs/LVYrNonjztCKHnloG
ZRO+9LNpU028rwiZHrV5+PS7YkeJxZ7V/44gfQT6DTDsH8TX6tZuumHl5Uyq
3zD5aKuTlzdmkz1ytE+XaQMG5igHHXNKHBseQfVVod8jngEMew76+eHF28Yc
Gii/TwX7DnTYd8Cw72AvuqUN7BfSIJKeP/0kudGuVD+KN2G+oK9Df6b7uGb9
qNWQwPS/p8v8uh5br7fbsOgW0eF/r1LwoG9P6yxx+eijpktPPSZcItmmjWUj
A8V3EJ+Hfx36CvzpiH+PT9r1bvY/st4b/Hl7Khx5nn0xmvRp+OPhf0d7YPhb
wxzanmzTMZzkIfwbkHfwX8A/Bdze12Ls36Pk96I4Rnv4OzhGe/h/OOb+sOpT
9aOmFwigeh+gA+N5+IMGlLifXqexm3A49/KQr2WuUubbyCuXm8vvSYEOfxG1
/9qo5RLtL9LPO6bXVook/lQWbwuY0ayMB9X7QXv4l4D9XQI79Psh9fmD7Xrf
L3u6gBWeh/8a8cjKtS+nvx5a0Af+z53z/qk3NLIA4cehK488XG9BeOKWkOmT
syWG/xv99Q566Xjrr9/kT21g06XIlkG/CN9utvPtsrM/CIcdaL3H4XgeYejr
Y/0vWO6t4Er6+vRWHX92a+FCdMTjQQc+fStHX+Rkthh8NLvGw67hypvjw7Rb
y+WIulnl+z6xDyN/YnnPue9aWwYRrq089g+8G6SUeljk092Zr8j+MDSqZJdp
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
25v4y/jWyB1Xy23zp/ibhe/JTv1LuSkvnXb1ezYiSzQ5f/jM9tquhPcl3pr5
/rILfa8G8+tuWj+az+mm9SOM76Oh/crl8TYWd+OJ3jlihTGnYSJhfM8C81XC
drE4flvel6q7M25O93iJ8b0LtM/5MG/j2B3yfk7BvDqRf5z67/2qAYb+rqE1
Bc1Hu+urct9GCmVCS4fCDpUfkX8S+VuQl9HjJtuvuSrrmSG/Cfr9hseLiyvh
X4j+LbHNzbU5uSQ/7W9USD9+Ooe+j4z8DdChDx8Z/Hp+6KB40l//itdWnJ8t
scP5vE9xx6W+nXZ8xJhGunjC0PfRX4shNXzbukTT80nxUXPCpsQQ7ubQoU/3
PKkP77Hbe3N3xRjC0MeRH4T6z53dpxXe6JFB+TXVFy440+1BOmHEc9D+3J6M
I4HeaUS3zbD0sXqUQhjvszKh5IN2D42ifZG/sidbxoulJfZubeAQQfm9qCdd
zjk+yvJkCt3fL2xouun7xzTCiK+g/eLHIxrXu5JO9Pfj1q2zj8ggDP3XynLg
k4pxjwl7pW5sXKOGrEe2zO4Px/BTj0nfGWp1c+S5BbL9ilLuuxIdAwinfUwN
f/HOj56/cuLkPyfmSPqwmoNser/3Emuvbvu4tU+WqPSg4KT9L9ypvWub0hme
i7xI38H5A/0FGOuDeOzQZ/ZjjleQ9cgK9e84sOEMWY8M/nZL/av0sQ8cyN9u
VaHitdXPz1I89EvfbK+HnS8R/cmSiDiboo4kP/B9CWD43yE/Lo5PmhldwoNw
rzoPziza5kH69r4VdxqnugrCqL8F/QB0nP/m7z/R+Q+M839IodZ7f/jE0/lv
a3RYkV4+geiL7ta+tMhZ0sem3HBfO03qw93ebevlOSOW9F+OUQ8M+hHyr967
j/B72lTWBzvza9qtjiWl/gB9Ce3n2D359cNK1l/x8bDNaNpermei3y37iK4p
pI919xrh1XHwZ8KjR/XcXXC1rAdWOOJQNf1vWQ+sR9Alv1rGTMKbLBrGBPYu
SP2vG91z++09EmN+NmT2XDNpViTNz8ymjzWzK0v9akLfv6e8XynpSyv4Dnz2
MFIx9ki1LPAqR3m+86Im49ZF0f5KrcABhXKVbqlb3/W1cxBOFmNfNN+UQ+/j
kW9v+Aiez4l4IPLPQcf3pqg+ya953dbby3pbz8dm1s7tIDHiS9Cf8P7Q//D+
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
o3B5yEbjYLsC2S//B22cmC0=
   "], {{
     {RGBColor[0.237736, 0.340215, 0.575113], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmFtwVtUVx08+JfnOOfluCbfckw/eKjC10A5k1AqWy7QyU0uo2gpyE5/a
h/alxEHrmw8VgV6gFNH0yZliiE6dcbSl9qqt2GpFGEVEucYKGBKq04vj/5f1
z7QPe/Y++7L2uv7X2qdv47dv+1YhSZK9DUlyjfpaY5L8VO1X+ujMkmSn5h5T
69F4l/rH1eoa71Y/pNam8SPqD6jdUkmSN0VsWZ4k6zX/pOZ+pPF00Vt3bZIc
19p7xSR5V+023Xe6GN+Ma77zmPa80pQkr+v71/qeWYj9rdrzhuZ2iOajaptE
fwR+RH/ltCTJ1Q5q/2+5T2dOaX04TZITOrtO3y0at6p9VXT+LT6PidbSSsjU
Yzl7sxgj492cRy/Q07kzxZBnQyHGM9Rv1J5DmtuvPZ+Uk2SFeFhbCn6Ra732
jOjs2WKce0H8tTSF3g5mwcsLOtusMzWdLanvK8SeDq09mYVu/qA9azX+hc59
oRR3ow90/pZoX9AdNX3PbRYNrZ3U3loh5tBVm8YzGsKO27X3frVXxcvbjTE+
0Ri2wUbYtazv57X+BnOidVBzO8XDN83DvGqSrBK/z2nPsNou7d+pdrQQcjyr
uddta2x8t8b7tN5vPziUxhrzi9Pg/y6N39HcqWLch87OWeddWpvVEHZ5Snsv
aX6zdXtB442F8NnW//Mhemy7V3NVy7NUNippfHM5ZNzr+aPqD18T/ranMfYg
243i9Sa1tbp7tWR/WPT+VQmZWcfv0RE08J/PSi/PyHafs372mM60UvjmE6XQ
1W61B5I4B2/w+5Vy8P9l9UeaYh/6nK5xWzH8AR3v8ln0Nt92Z99Ox8Zr18Zd
7FlRDvrL1S8sxh7micd9tsWQ+Gy1zeAV2ZHpFdm7V/3pLO6Yl4YvdavvUVuj
uT9rTyd21p5/in6v5uvYIg/7XNH8kMb3ajwBfuRh8w+z8GN8CZ/6cR42HNP4
UY3v0Xg8i/u5r1v90+onirF2sRjza8wXetgvWg9OC5vdoPZzy4TNwI153jNX
5+vmk36O2oDo/LIp+Nyq1peGLODLH8XPbDAoiznWoPFaHv0ZzY8XgxZ0sMGw
fYNYbmuIeCemWx3XT2XhU4tLQXOSp0Lsr/sMfj1q38bn/6HxpkL4WacxF5qc
gT6xTByj064s9hDvK6uBp6uqETeXHTufEVZc1fx3Nf9+MeiDd7PT+GaMburm
D17g6Wvm7bzH4ExHFngEf5wFb9A9NgAHOkSjPQ1f6UxtV2PFkO3E/R/43mFj
EpiAHMgD1j3hOPpvOfxtSmePOA+h+2ItSR6S/fdLvvYs5g94nW98+Aey3dOS
fUE1+G73HvSDb+FX4GWXdYjOLnl+SRoYCn5+yfmOvNdtv5xleh2+q70QuoIe
fnmj8QT5thv3wGtwe6A57uw2PyNZ+NSr4ndFJWy8shLyQQtfQp8fFiMPgeXs
gTf8+Qbfldbi3nNZ5A7oww+5cTSNHHLRMmJD6CEPuHuyGLgMJn+s/qNixAln
h80/9xA38PNyc2DQEfVXtGfMMTvSFDKTi0+ZJlgw6hx9l/P8euc21k/6e9Q5
Aj6hwb3rnF/IJZNnmgIr4eG+SowHK+HjrJF7wV14AwPPZqFH/AXao5YFeu/4
3pZC3An+LTK2g/HrrRd8fziLOHgpD/1vt+8i09uuPapp7EeH6AMsQycfOO42
23c2Oc9xlnupD8D+h2zrQ1n44BGwJwv7kBPPOzapMcDmbsdYl+MMmtQsZ51P
ufN93zdhfrYUYh6sgZ9z3r/R/rvBNQRzZ/yNfCfMJ/PkY/Zf8HiDczo6xdb4
DnGLr9znWoK65pLvhR/0g//Bz7h78JB83uo65Wop8vJ5dJBGDOD/g1lg/EAW
NMYcF2A/OWCqFmq3LLONSXxvsd+js8E06kNyR18WZ8AB9Njr+pD69Hva9/fG
0CU02Mf8Udeu0Bj03T3Gkin8Jr7BLWpL8gt1bt20qVveNK5Tj5Hft6XBD/2g
x/TbTJ/GGAzEPtCb4TbTMTVL6zN9Hzrrsp9wjjs4i4+DHVMYRdxiJ/CS8Trn
4jHbhv6K9VxzzBAv+PvkuBDxUjMP1FnIhlzUH+hpd/K/Wgr9LHBOLzmPwBvy
Ur+QW3e4djrm/c+5VoXGfypxx5ossHqx43ptc+DiRB76PW4eNkzpqSFoQZP1
bmMldjpm/e53HsGP4OHmPPLbN0oRR1eNdfR8g903VcJHNtfCnyesN2ou6ryj
zp/tzqED9uE54vfrpXjb3G7646aJbha4nqk7TogRciPvIPCtsRTj/jxqDOKO
eobYY9zn/iPP394cOYJccVlnluvsGtHYlgX/yHGvY3ir+4999ouWcWst3llv
2fbwOc816gXbgjH9EtuXvt/j71QDp5eL3upq5DLyHj6AvtBVpRTjcinyDr4K
P/TPuIbrN33sjRw11yF3lKIuv7MUOL3EvnF9Nfyduow65bzjudu1B75B3Lzr
uKImGnf9QcyDEWADmDwnC1uA2dSj8Ii/I9eQ8aTX+8Hpi861860f9MB6n/EC
3Dtun5zUq9+wtTTyCjllifHwDtnw1nLU96vLrmWdl+/X92LNj+WBD+AOslC/
Ut/9LY+YhSa2+2setuWdzdvh88WIPfQAjvAuXVSMtQccmwu9h/d3i+mcdh3/
ch7+uMj7qafBod/n8X4Ah1/U+HIWGLMjj/cDuehnebwHiK3H8pATeckDvCuw
+cKq7WPeJjHVMmJTalDyNG8MctQev+tnGA//lEftybt/fjWw7rpqvOd51w+U
7Bem83AeduAdT52LbvGxn+SxTl0Abe4g54IRrC/NQ8fYDz1Rj6zwvwvyT6ff
O0v9j2KZ+rY0chX8PViOd/T31e/Lox44ZP3BW7vrjenG4g7/CwCz7qlFztpS
Cz8l3+CTW1wrtLmGb3PNULc/P+48VPc/IDCU2Lq1Gny1OY8S/+AAmPG7POTm
P9Bf8sgP/C/hH0yL+dudh634z7GyHP+AVqk/nIdf8+9hmd/qt5Qjz862jPzf
gcZv8vBN4hrfI6f0O/8eyAMvR1wrzXVs0uZYdvq5lpEzh52PehynxCD1Y4tr
SN6u1DI/FO1PAfCYYPA=
         "]], PolygonBox[CompressedData["
1:eJwllEts1VUQxsdb7i235/7v/d+0BokQqS2o8UGCLVjqg1IpLdgqpQV0YQwB
IhsxwQ2PRGFDWIgRfPCwPnBrVWLiUqzim6IgCjEhMSFiTEyqJCRE1PD78i0m
me/MnDlzZr6Z1vVbhp8pRMRmZBrycD1ifjki47C9EtFfi7hQingP286miEXY
Z2C/CfuXCf9qRBX7z+Al6I/icxA8UIx4PIu4A/+r0yOexn4U/1vBF8HDN0Qc
ALeD/wCvBr8O/o8Y4w0Ry7n/P/oQ0kK889xfgb6dfJobI64gd5Lfat47i/0U
uD+P6Mj91sfgTvSemu0/IkvQB4hRRz+HzzL0Ee4f572fONuGfjv5XCGfUfJ5
K/lMNsVQrEFinm5wTYbQ/+FsH7U5B76GvgNpaXSOyrWM7Mc2Cf6LeBk1qfO3
PmQq+Uy2ZnANWy/4l4Jz+pe7o5lrcYbmnOS/g+RztOgYFWz3ke9M+vEBOXzF
3YXgG8Hvgz8HD+SuzSfEe4H/7uHObu7uJd5vxLoN/8v8dxNvvon/Y5wdKrmn
vfg/kbmXC/F5lvfn4v8n+gb8D+N/d25uHOONe9BXcf9wyTXu5/5KpLnkM9mG
kSMl93QQ2xvJsaaIOY/Ybyfnoh6oFwfB6wvmiLjSw52sZI6Ja4eS/66clNsY
+MPwn/S3V5NrcQncBn4F/FTBHBQXJ8Cr6HUzNesEfwpuwV4Hd4DfAR8Lc1hc
fgn8JPYL4Dngl8Hj2H8Ft4J7a+bCGGc7yK+tYl0zpdlaRz37i+Z4MTMHxcWc
O8vR51PDjxr9xhT3LyEPTnPP1Ltu3ktFx1gL7kLWkP9D+CxG/73Juu6sqzgn
5aY/7+duNTPXxCFxabJibh3g/aaaa6Raqeav4d/H2USDObms5hqpVqrRZ9jX
cn/mdHN+J/axirmlM9n6qv6bOCVujfP+u0XPzBB4tOJd003MFcTeiGwre940
293gW8Bz8DnFe/fmnm39eQH6SOZZOou9J5mj4moHMpFbpHciW7AtJt7ssjny
XXKP1Wv18Dj4fnBr2T3/HvwAuA3cTvwzyRwVV0d4/0hyzVQ7zbhm/bncu0k1
25r7T/qbdsaainNQLuphidw31L2b9OdNdXNK3BIn9yXPrGa3G5/d6JPJb6sm
qs2J5F2smdfsn07eXcpZuWsnazdrZpai35V7VsWxF/H9InkXa6drt38NnlXw
TtFu+SZ5N98M7gL/De4quYfqpc5k051vk3e0drVm/hH0H5Jrp5qqtieTe6ke
qBdLk3unmM/jv6vqv2pHaFdcB3yAyFs=
         "]]}]}, 
     {RGBColor[0.2658528665694387, 0.42588279541742435`, 0.378908018447751], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgm4ndO5x7+z9z7D/r49nYhUtW5qyGgs4hIJUkM1iLElQw0RcTXuVfOQ
UELRUi0yVHIiiZyEDKLJOUjV3CuRiYgEh1LtFVdL1dTIgPT/O//Xw/Ps71lr
r28N73rXO/zfd307j7zgpP/JJUnyZj5J9EuyYpKkeuar/nR9kvy2kCRd9Wwp
J8mf9L+9miR9G5PkpIYkWVSXJGfp+bWex9R/tiZarfodeuao/pzKCXrGadw3
NccOenLNSdJdC52fJcnAitbSPMPV9mYtSa7X+wmlJLlb80/T86uY+7aY/xit
/ab6D6m6jXdd9ZyiMf009h+icZbWXRljJjUlycnqv6PWO1drvSw6PlGfdu3v
M737ifo+LjpqKv+cJsl5qu+p+t9VX6Pxl+s5Tc8rat9D7X9L/Z/27npmNro/
/9dpzhf19FJbq9pWqe03QcPEJvNrtGgcqed2tR8gWkaq7TzRNlb1bmrfXs/e
ojOv9n1UHqInU/1QlfdozhUad6ue6eo3VU+mepPWXKv5G/R+T/GhXu2Xipdd
RGuznrL6lNTnFfVJ1Wes2l7RnIeLh0fqeU31o1SOU/sbqh+t+lsq/0/Pq+L5
ONG3RHsapPJX4kM/lXto/uvUbwe1X6+yX8199leZ0zxPqk9V6+4uegqi56qq
y0/UZ5bmvEJ9ntf8A9TeR3vbpv1/oLE/Vn216u/qjN7V/1M05gHNMblgWWDv
cys+0++rva/qieq7q6zTHs/X/sbomaR3N2jMR2rfS/Ms5pxUDtR6a9X/EJU/
0TrD1Oc90XqL3q/XszIxbz5u9B7aNM8U9dmmeUarfpTq0zXPG1rjNfVdpWeM
2oeoPVGfjXqe1bwbRP8q9blIzdfpGV+1bCPj9Tmf21S1j9X/z7XWOJUDCuZR
D73frPEXav2OzOe/RPUX1T5c73+nemveZ3RL0Fyv8beqXqiZxof1/qCc5Wix
6s/lzKdFqq/O+WyhnT3ka57niMy0nCr6U+jQGRVzlh/ksnvOeo1ebpfzWSDr
38pZzl/VnDfp/wTN+VnV9cM15zdy1kX0tF1r9ZUcPqjyR1qnqHlfEk19Qr+h
CRuxa852Y2ne+4Lfp4XOzVafPvq/k+qtql9cs1xdorJDNExM3E4/6pP0tCE/
Klv0PKR+56vfep3VE6rvJ3oeV3mBznGE+j2l+k+jPkznMEK2aZT6H5OazrOC
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
tjW1bIKPsDenh8/9N3NAvdM=
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[
      0.31717882309348977`, 0.49325857650857363`, 0.2653211110653636], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgnUVMWVx/tb+vv669fvdbc5o7hnxlGURUHJ4LjhURjFDdkTI3FlFRA3
RBQElKiggPIhEIzLjBtqlCSKKAIq7hsqouzguOOSiKNsEeb/8389J+d0napX
r17VrVt3+d9b/a/nX9xjeG0ul5tSl8vpl+vXmMudrXK1OhfX5HKjVA5TWduU
y61Raav2KtUrVdqo3VrjZqneT2WLvvtBZT9NNKCUy+1dyOXuruRym/K5XLU+
lytr7GCN66DyrtaarXd7aMwc1Rv0vEzlbZVD9f551e+otFe7ncpStd/XmitU
Wuv5Uc25TvOtUv8Gtado/vla9zj1LQqaf56LeQbGPMzL2h2in9Iu6GkrmreJ
/itFz0at07/G+x1Q43me05hBWS53YEMuNyQzvW1jnV769hz1L1H/GPX9KvbZ
IdobY532sdbG2Cvrf6rv3lK9Luf9wVee/1rO5U4RPY+r/kh7nKo9zq4171mX
9TmTQ4OG8WpfIn6uFB8W1PhcfqlSpzlqVZr1bZPqgsoMtZ/Uu9vj7O5T37+p
7KlvH9Qefqm1TtKeemvOuep7VeM7i4aCykN6Hqp1fhTdb6pcpHGt9fyE+Haq
aL1Y7e/Uzqt8pvc91Xdm5jNbmKpd9tl1TnK59Tnvlb08VbH8vaT3r6l9jOZ5
XfVSPf9G/cOqudwzej5c/Ysq5if840xf1PN/qv+leN9X9PdR+UTrPqV130i9
Tpvg2wdNlqcL9FzVfmaovlBldpw3PKmof3qNx+ym9sway8SJapdUlql9uua+
QOu8qefNmu9blRFaf1LZ/JysuovepSrvMH9R8yJj6p+gsqfa16k+R3W9eLVD
tP1dNF+r9reqX9F8vTXfvHrL9cA4025a90L1vaV5r9HYDqrrVa5S+3B0WeUR
zdtZ8z6sepCeHxDPW9ZaJjeG7KF/4zTXf2iuRo2bqu9PEg/v1ndj0Vl991ed
7w3q/4foma72OLW/U7tG4yerXau6tcblVR6Dj3p3gPr7Z5ZL1toQ57w+5Hx1
k+0IPN+g+ong/7om2xr4/KHq+cHzRzTXq6LzM53jF6r/RWvdWWu+jgqedJU8
7a51u2eW7QGhs3tozOiwZZTRYR+wRWNCRw+N8cjSguAz7XGioZ3KMPEpL57U
aP7t6r9Ye27U8wjVu9S3UzRtCzneEPucpbNONeaKsvUAPV+r/sF6rlH/ENXr
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
         "]], PolygonBox[CompressedData["
1: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
gjGasJruhO6G5vQO/IWR75pipGLlFOWXrH3IlzC2sLbavk585jp7+bypojGB
sEFnaC3jvS0Mm/EZ6CwO5V2bXEfbawXXmKo1tV8/6t9a4tq+NnOolpjEK8Ze
lLjGVa2rNfdG/iH0WNpD7eVc9E0yrrlVe+uflv5taQ5r0C1L/K9N/4Te0FgF
z0U1tmptYWZhZ9X4Gwr+R6d/dVnO7yr4GrFjo3Ja9dg1kmqlxtBE5aKcc4ti
nmJfs5xzRX/knxlvSuxaUjF+Kvy02LFAMekpxefQvlRzqfa6MvbY9aCR8L2Y
Y6rYa5yn+Mv4NbPGqMKqM2L/G1LMmxm75lK+roY8KPY/P/37EyZ/LbJP+dY/
xznIX4S2Ff7Rv8c+se+u/mH9wtjFrOmxrGOAYsGtobGG2qSbxRorZV1jVsu7
RhGWFqZWbS/MLOx8JvS87lvsvVHOUe5RTlKs7oT8X+SPY//70BqX6N9BZJ3W
p1qkZuS3oTest7wjcq5QjHw3Z0wvbH+q5qx/YXljWf1T07+1vpHnIgwkLDQ1
sa3WoLW0S1w7CkMIS4xI/O9MmORu1V+Ja2Odic5GNbFqY9WUFeD/B/Ze9m8=

         "]], 
        PolygonBox[{{2871, 2870, 3409, 1348, 3410}, {3495, 1437, 3494, 3327, 
         3328}}]}]}, 
     {RGBColor[0.49119505154474363`, 0.5976687059991909, 0.2498845287353681], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnuUVdV9x88M9965j3PPPRODJtrVBQamMSsJTUwipk1XNBEU0qAQbJZG
IiiCyAzyGkBEBJWHDY8abU2tNnUtK4IQzWoaREwDSkBAgayEZCUYkS55ycOk
Uh4zg/1++P5c9o8ze999fnvv3/49v799pu+YScM7mpMkOa0/vdR2VZKkW8/j
hSSZonaynqeKSbK9lCQ9alfo+c96kmwR/U/Uvi+6qzXxRf0eV06S94Jmjp7X
9VxScJ/2k3q6RXdMv69qSpKf1b3PkTxJ9mnsqJ5n9L6WJcl8rVlRe0BjB/VM
FP1O0e/X+9fr5nF3i+d/ruR9O8T/7a1J0qbfa6tJ8mYtSe7TOqnWmdvL41M1
f5XmrNQzQc9RrdOmtddp7nm9vB97zRNdf7UvaHy05vfV3JvVfkJPl2j6qh2q
sZHql7XOZNFvEe1vEu/FPlP0LCl7bqfW2i5+t+l5o2i57Sxadk1qd+m5Rv2D
Wvcu0R9QO6no/mz41O856h9RO7no/t0aX6B113zAp9Y+oj3/sdk0vO/Sms9r
zqfU/0aaJI+oP0hzH1Z7r97NFe1der6kscv0DBbdkxq/VP1NzeaZ8RW9bA99
1B+nvS7TuTap/0+iuVN7DdS809Cofzl6Vn+8aDpK1ksf/T4m2n8Wr+/XLYNu
tVMz7/OZmvVyv+jfEs0bGp+m/p6QAzI4pTVGxXkzPX3F23OhuxFF048V3fcr
1iP6/LJ42KzxR7XHhWr/rGQb7K91u0XzhZr5xHb5vU/vn9Dza829WW1XwWf7
j8w6+5NkuEl8/xr9pdY/tH8hPrZqfLfGd2n85+r/Sv0dqe30o6L7neiOa3yY
2tUN+Y/43KY9Pl+ynXyv7HdDND5ec8cVbBcXhG38vtm2NSV8Dx+8tGa5dDTZ
brE7fGizZLKHVu9+m1i/2O2K0MNGtWs1XpSfvKL+q+q3i+Zn2nO4nsdE21L8
0BZoJ4lmXWZ7/V+d60nxO1rPt3W+RRrbqXnXFSy/3iWvOxp5F2wT2NGXwpae
07z1mvcL/b4BO9H79oLnMBfeR+psJ9Xu0lk7JK/D6n8Tn9ZeD4p2gH73iP9F
ah+v257nhU0vz6zvkWqv0Zy3NfZa3XsjB2SHri4Ke1ge8Y0zXpuZh2Fqv5vZ
5kepXd9sPdwmmi/UvdcbWvuFguPVLYnjID49Vv2BRdPAV1E6LegZ1Mt+f374
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

         "]], PolygonBox[CompressedData["
1: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
OsMOZEP128U+4x9i5yDlItVE1cYH4DdOOcbKkE9yzgWy8easezL1Zjrju4Ua
qlr6CBgCrs7Zd9Tjq9c/VohF+ax8ty78a1Pu2dW760w624fonMF4IDoap/2m
OAXvrazPohykXNQydC5uCzrDXw2Wp9wzqXfSnepu++BfWznPFb71Ttln6uRs
c9leNjujvIH89eivD+6HXgo6pd3zqvedByrSjlHF6oLYvePXGT+oXoTxT9KO
0bOhc75yv3q2GvVP+MhGxQLjLqF7QvWGqmldE9cY1Zo5jMPEbzq97VRDhkfO
2crdynHKdT/O++1yATwM3S92ryAbyBZvRn67qaaptg0p3I16evX2qhGqFcr5
yv2zwYRi5zTlto2JexG9MTdA94/d6+hOBkAPzfttdgkMg24feu/PgdqJ3zx6
+8xmXKJeAJnKjHvAbdDHVR/SzrnKvcoRyhX6dkLxqDNlXONV61WjVKtUw1TL
ngxdS+XDx9nvF1nf9VT0zc05RylXqSaqNqqHVC+pOzqgXi7v3KM3ot6KpXon
Z9zjqtetCL33mSCduKapto1X/6feNTY9gvXGoPtI4l5cPdjRxD2qetVpzK+V
+M2jt49y8FL22xX9gwOvWUc5NW/ZP8N/N3JOVW5VzH8W+c2tt/eNoKlihznH
i2zTryR+c+jt0V9+DX6Xcy+t8/0Wuibn2qMeezn0D/TeKfIbO6f3gmp4kX00
n/hNuamQr1U7lXOVe3fLR7LOYcplA5g3MPQbRW8VxVADxp+E7l30Zh8e20ay
lWrETvU7qs8p54B6Ob/hGhZqjGpNp5zXUg93NPSZ+hdqomqjcrBysXqEG+F3
DN2L6U3fTb1y6LOrxjRiPCrv2KsBj+XtI/IV+diFrGNesb8X+TlZ95DqJRXz
86G/jfzNKedE5caRefu+bDZCvWjs/ybUE/4wdk5SblLNah36Ta23td74euur
Z1HvopibGdmGsqVqimrLnsj/pWjNm5HdGTk3Kocplz2Sd+zrDgdDX5f4bPIJ
+YZ6ZPXKymFLYr/RJxd6PvV+uyLXftV41XrlMOUy1eyTsWNYsawer13oGFAs
qEe9h3F55F5d/8E0UT8c2Xa6U93t/wFPBJGm
         "]], 
        PolygonBox[{{3286, 1095, 3176, 3470, 3471}, {3370, 3369, 2916, 790, 
         3282}}]}]}, 
     {RGBColor[0.721171824901331, 0.720895247793581, 0.2843395183362966], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXmQVcUVxu8MDPPeu/e9d8cN1KhYJYmC5R9GCaasGHdEMGoimoh7xYCo
mEVc2QSGAUUZXEHZd40rBYrAAA5CogKDYrlUXDEqWgpEwKgJ5Pv5Hcr80dP9
+p4+ffr0Wb4+c/iVg86/vjZJkgH60059YyFJTi0myeqaJHk3S5Iv2ifJU5Uk
+VWHJJlclyS5fr+s+Wki/jRNko4Vj08tJcl9eZLsr/WPqN+vnCTvab5WtO9q
3Kq176sfqe+zxXuW2sei66ffn6jfVk2SKaI/WXy6aq+j1Cbp9xB9T9WWS74X
tGagWp3aReL3G9EcIXlq9fshyT5W7VzNzda3l7R2jda9SNP3ZyXnOxxQ8jyo
1qh1j1R9PnhMEc0G0a5Xa9X4NNFco/5z5Jd8W7S2qvEHcZb31A9Uv13ze8S2
m3R2qPgM15qOOsMC9fVqbVrbSXTnpT4zZ58k+oJobmrvuXGi+Uh8iuL/B40P
0fwpGnfXHj/V2uvUX42ORLOf5qfWeMy+zxWsF3TC3XFv7F0V/77S2e4a62NS
nfV5q/RwnHR0i/q71RZrfm3ZOkbXyIFe19RZL6+I5mr9fkn9XWoLNf+C6B9Q
u0vjZ6XDNs33F836ihvjOZI3i7uD51nST0+19pLnK31v1LhF8r0q+mv0e17u
79Cdon03xTzfJ6qdqvE9FcuBPLNE/6F00U20fdRv19w2tY+1Vz9926HxpZJt
ocY/lgxPqB+l9l/pbKj6+WqHa/5R9pVM02qsz6kxbtJ4H53xH+K3W3d3uWjf
qNd37fd4rIXH19pnVwfbx1DJ1ktre6hv0Pcc29Z8XZ11Pl3jy7XmW42vlGx7
xG+32meaH5DbljpmlhWZn0Jm8TpR9CMrtuWVccfDcq8fon55Zr/sob4VX1Gr
kW5/n1mXV6gfrDPM15kukl1U1Mol2+eSgm1oj8bXi2aeaC7UtyWSb7zWPqc+
y3yOi7XXX0TTW7TzRfOtZGqUbN+pHyaaQaLfJZpbNL5W4w0a/1rj4/A19YnW
PZhYt8iAjWKfV4Scc9QfIJ1v1l71Go8pmc9O8TlO88dKj49p/4Uar9b5bta+
Z2i8QTR/E/1Wydqq+Z+IZl1u+8ROiQ11sfdUzqX5BzV/kNp2zY3XPmtld33U
bhavozv4zvCXAyreq6t4jlY7W3zmiX4Osmt+lPitEp9niAmiXSYeP1PbpbXr
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
5Rnq/weUchN/
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{3435, 3434, 2987, 1330, 3436}, {4183, 2008, 3068, 3464, 
         3465}, {3465, 3464, 3069, 1368, 3466}, {2729, 333, 3368, 3370, 
         3371}, {2743, 1471, 3542, 3303, 3304}, {3437, 1331, 2988, 3434, 
         3435}, {3472, 3471, 3469, 788, 3285}}]}]}, 
     {RGBColor[0.8561409047915522, 0.7428592816972356, 0.31903992332908304`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgmQldWVx7/3env9tu+1KBrFZNhER2VpaUAHlIZuFlHBxEQFFR0TURFB
UDNEIyhgZDNIIqbGiQsuqCOuEYJoICrOmMVkRMQNkFVkpzFVSc2Uzv/H/1BW
va/u+e53l3PPfs59Hf914ndvzCZJsqgqSfRLOjQkSXcBdxeSZExtklxWkySn
VSdJNz0d9HyYUV8lSTbU6bvacTWGd2rOFRp/pd5P17hLKl6zR5ok16lvs8bs
1vsOtZ/rmaq9ntT79oB31vnb/ujbEf1H3t8WkuVckvxQa/XS+ldWvOZYtVfV
J8lS7d1e48dVvP7RxSTJ5Lx3SeN3qe8LPT9J3O6KvWj3BHxA7T49bYKf0LM3
xu+O8cB83x/whIrhb2mvdjnT4gztNSmfJCfpew+1GzXmIn3bpPYjPSMFf6z2
hrzxPSXvvb6IM+4NHFj/Aa17icZv1fiPwbPWNO2gffYJnqK9Tkh9/ivFt5Ea
c4GeVq1zutrT9KwWvwZmDX9Xax6nR0smmpKcqb6z4IfGPJoafkRtfc7f5mne
n/X+uPZqp/YJPSO0f1/h87AWOE9j5mhMRf1j9H4FslPnvdl3os7WVft0V/sX
jfmh+t9V+76ecYLXql2h9oxYpzHgDZr7oL71Fvzvqc+9V0+b1lql9/N07t+l
Hts7xg/J+uwXacxr4KkxK9Vuqzc+s/X9oXrv8T2N2ZgxzNxH6027uRozqs4w
NLynyjgvFdyvzjSBVm0hG/+l/j56mvRciFzp2z61Qzmz9v4tfFA7RecfqL6z
1O7TmAOCh+nZKh37hdYaLHqeo0dLJn/S+P6Cb9O4T/V9k9pd6m/VM158+Y3o
0Bs5F87X6Fmh9+ujbY7+VwX3ErxNc/eoHQJO6h+ip4v6Bun9ZY0ZrPYYaK7+
y9S/riS6SrYeLUuuay1n26us05vVHtSYc3SmD9Tu1NxmwR8Hfn/T+G/X2A78
Ru3xejYKPr5sPd+rs3QoW9ZrdcYX9L1VPPqkyjaGsXu01syy7UyzZH+x2iXq
v03rt2RNC87zf/p2pdqbNHZ8xfp7rPpeqfW5ztC3SXV+B75D8BuCx0JDnXV1
rfnxlto39VyB/Und31PthHr3j1T/DYJXCR4leKJwwFhCv5vz/t4/77X5zvpf
afxLem9KrCfoy4sFr8lajF0VvBoVdnd3reXhR/XmLzqDnOwOme9UMd8e0167
U+PWlJr28KFFz4iKedhbdPhjvc+OnJyUWsa6pubbjsR8vzS1Tl2i9nbhd4rG
dK6YPtfHmX+gb7vUzte+J9QYnlxt3n4h+CbB308Nz8kb3z2B886MdQZ9mRf6
8332FjwidBD+wceJah/XWg9o3cfUTtb75+qfoXZG3jB9K7VWZz3L9X6VcP2O
xl8k3C+vWPa+VzC9TxT8ZdZy3Ttke63WvV/9LWoL1e5fmnHbFGMmlTy3g9pG
va/RPu/rGa11s1q3u/qXau6zet5W/4KK7f59am8XfrdoTie1jQXbhpc0fqHW
btYzO+c15qh9NuN+4Dz00Zxm0W1u2bo2qNb6tkhjDum5R/TqqHHLEuO0WPud
qLmPqX2cswt+ouL15saa6BRrolfThO8/aowfe4PLzIzPD42g52uC+9f7XD/T
+Gka30PtXXoWCJ6udnrFPvVOtT8Lv34ztCqapguKpvGsoPMYvQ9U+6jaTzXn
WvVPKTmeAD/0fZjeb+ZsecvTGPUPE+1a1D9A8Oei5XrNvUbwTSXLx4Qa2+Dt
4Qvh9a0l93fQXps1Z76+vVm0zWsNu4etA0aO4MmgeuP9XLXP/mDQYEDAh+0X
e2U9ljn5oF9zyM8lmnuWxsxDf0r+/mjea5wd68BL9OdQ1vTgG/R+JnXMMFnz
nkSete6SimOcllqfr2fBccELJePOGboE34CXhw1vH/3Yuml1tmkHUsPdCtaP
Nq15s/YfnTp+WCA8L0/d/4uwY3fE3Ol1hrFpR4dtwcZcpfF/17j789Y/4Fu0
5qHUfNxZtC3rR3yR2P/hB08QDs+gB1rzGb1v1dgmwVui7RPwI/V+x48TX2Ar
Bmn8+XV+B2Zs3xj/UGr416ljpT7hxw/FXuhO36JjwBnC/73UseK31R4lnF7S
2HWCZ1c5Jnkhax1n3rrEvL2vyvz9NLV97pzaxhPjYecPQtsa0+rYsuF/Ljgu
OBj9reF/4fuhGvdj++ZUHNfOVTu/1t/ob1e27Fwu3H+leQ/gt2qsy/hoaE1M
vqbG/nJzyfAb4ktNzGWNCXo/VuudmneMRixHnPEt4bdM+H1GjJQ6ZjhZ7YIq
+0785tEa87LGfKj+bonXIX7cW7R+oWd9EtPh8He9v6LxGzR+pMb0FF51DY6H
+oZMtAbNmNc1fBNxEPFLY2K/iH8FBgd82R/q7deHxDzWeqfe6+D78EljdfYR
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
9gXzaU/Y1P8HxP9/lA==
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{3544, 3543, 2743, 372, 3400}, {3394, 1341, 3396, 3269, 
         3270}}]}]}, 
     {RGBColor[0.8246611724379616, 0.5573803799620947, 0.30772878298746703`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNWGlslUUUnbb2LX3fe98rFhFaUMAoYKG4kki1FP2hgthS0dYoYKGGTcBS
XP+5gEYF46+6xACFEsCIJqZAABU1KCq4iwuCIrhHjUjBhcRzek4jPyb3fvfd
uTNzl3Nn3uDmBZPnF4YQHisIoQj0zmQIizFGgN+cCGETxiXgZ6VD6AI/Fvwe
8Lv9TZ4650I+A/wL4PsHyXYlJZ+d1vxtkCWiEA5ioRti0c+hcxV0bgfdiN+H
B31T92rKS0IYBjoadEZpCDNhpxn0EObfhTnfgj6McSb4LuisxLxm8KdgzvWg
UzCuwwF3Q2cG+HdjyyyfjFEPvhH6UwolbwL/DfTuAH96JoSvQQ9gtMJHDaCT
MeoLTc13pPW9HPyatNZ4HPyWtOZ3F4oeNH/Y+x8A+z+Cvwd8BfhfwN8LfiD4
n83/BFpBmfewHWe8O6m4fBeLL4f+uHwIJYwPz5oK4W3ozcP3iQLN59wfvNb3
oEsxBoFfAnqG7S8qEB1k/X2g+zGOFsoO/VALegXWeovnwbr/4vtL8DWgN+el
n4s0l/J/IN+U1jft1BQrXjGCdEtePukD/Z2gbzr3SN8yv8ty5hJj+5rjuwo2
xzp240Ev91pzQedhDA2i/D4LfN8gvgz0U5x5NvjSjPK2Oa38m5WUfAh03odO
C/cJnXX+jfIPIb8V/Aeg870W7c9JSofr8txdafnkEeR5e7F0HsyG8CdknyJQ
v0HWiTEH8t9B12LMBf80YvdMSno1WeX/xdAvwu+XYTwLe6MT+mZ8G7FOU1o+
6cjq913w59Ii7XMjfL4Q8hbol0C+IqE5xfQt+G7v47Kk/NldoDPd5rOUY7Qx
V0FXY16ta6QsJb8zzykbb/+vhV/GgX/RuVFrOe1Tfgz8+ljxWgdak9RvXHes
eepUg15q+epYfAfoO7HyIAf7S4pU188VCrdYs8O938Xmn8Q+R8E5Rwoka3Ne
rU8ovqeC3w+breBPg81FSeER5+6DfAHzGLQvfnsJ65wF/vNY/jk1o7yh/jDj
WKt5xp1zOac2L0obzOWdzueKIJ4+/gT7W4gB02GM+UPgx4HejtHtWiZ/I/ih
GeVN35xqtsL1y/pibTEPzofOcXwPhM7ojGJdnpOt4wXC2Pvyqv+HsPCQjPKy
LKf1X/F+/gzyH7F5IXLxOZy5Aj/0x9gAfgD9BPnz4M+MNZfnORyUc8y9BVnt
fYf3z7i0O8+rnXvLjZmb08KaayPlwt4S1QRr45jzhJS1f3asXnUOaGWJ+s9H
4EsjYVhbVvZol9hLu/wmjrGPvYtRGYTPW7zuZ1n58WrQgUE6Faacc657EuPM
GqVsj+Wb3BfZHwfH6olDQFdkhQPj8/ptt9dtipWfkyKdq9o5z5xmDRO3Xk8q
z5nv12DuxIRizJiwjzIuvT21Mda+uf9OxDEbqf5as8IC5iWxqAW+nJmSHdIi
Y0tRSvjPnLoNZ+zAWqWwuQj8VvZ68G3gd4C/IFYeNRQKE2rNM7/YS3t6Kkad
ey3jNSElvsa6U3rnJoUX5K/0/hkH4kqtceavAunUuKedcC6xD/f0ctvlesxZ
5led1+Vd4+WEfEW63fwi26KdqoT6JrGY95btvv+wboiVxGfi1VbjVF1KucS8
OjsjH/4d6b7D+Zw7MqG5xFj2BPZC9kHWAvdPn9EO/UD+Nczfg5i8EamP8Lz/
uBZZV8SGrcZS7mGHMYE4sSKn/FiZUx7TPmuAthtsf1Ss81fF8lmdfTYiVnwr
QXMYq5hjoPMQ6zXg+8aqOdYg/clYHHe8eCaejfvlXYi9mTHhXYg9g7nA/r/J
Oq0lOuPrkXKauY4letZZ6m/iLDHzj7xwhXnL/OWaXJvxXWoZa+Rfy7kf1hn1
Ob8CvjiG7/MQn9Ngcy1s9fMdiXVEfGQvYI9nf6+P1NuewLp14GPwj+Z1J+X9
l5hJWbXxaoxxGsv02KNd9uXzY9XIhbFyinKudUYs/BwY6z7CHss7SWNeOdqU
V49iT2CfKvbdpcz4QzyqdN8gJhFz6IPeO86EoH1Wc06s+u0Tq0+xhw/3PYi6
nLMP603G3h6MlKujnOeLc/puyylHWEtHHP9258BezL0G/P2Rcnyk57KORvv+
eWdO33fkVB8z7Z/VOeEN7yyUtVhen9J+iBsNKX2zvoijPAMxtxezOJ/1x/ph
btP/LcY05nyd7dTZznXOJ+bFUPjkY+MzcXpkkG8HYUTuzeX2dbV9SmzvMiY8
AKVJsPkZ7C2JtNevwJdldC/8Ajbfc74x74gl24w5jFG3c4lrjvQ6r8R6t7wa
K9a9d4Q230cYv22x3iHbY9UJ45jwPaHbttf4XtUZK3ZHXC8Nrp9u12+N5Z0w
kLF97ifrfGZfYk/hfJ6j0++7dvdi9m76o/KknKv0eY7bNs84MSXcJ+7xjcY7
KO9dfTK6N++NNX+C9Rf67nDI+znkuDAemZPiE3mvjG2d8+QWvxP5XhwBnLkR
/NRSYWRtwf9+594YC9ZmlXN1GvSmQ396qfxabN9yv1PT2nPWe+L6PPss4/xR
KF+U0H2eutOsv806PN8622EtExeJj+xrzI3ZfiPTzzen5WviEu1wXrlxg/jR
z/fUA+CfSukuxVjwDsGYtUeSPeW7L983fOcwdsz3GX7vcI1myzeaZw4024dV
JcJu7rXJcTjsWEwxvvN3+qfYGPVoQndI+oE976j5ZX5rEB8G5CSvyghvfrf8
beMx+y/PTHvER34fs07/jP6nOBgrl/j24fp5Yx0xj+e6Ka1cqfX+6WfK6Fu+
kz8pkc/4JmO/Yt8inv8K352Az/IZvek73Mt4N1tlnXrzjSflKOuFOd7l/s59
NXpvO/3mYP7yrs07Fu9XGxxj9h2eb5nxk+9Inp9npx2es+fNmxDPvGJerDfP
WAxL6YxTvSZ9twF4NBTy2TjTfN+NeUfOeC+MdYv74DzX9ZPGedYssZ13Kp5r
onn67ybnJ3nmK/3ZbBltjol0Tr4tXsxrb3Mi7Xmq85l+ol1i0CTbP+r/Vbjn
5b4zTvC6/wEpEEKG
         "]], PolygonBox[CompressedData["
1:eJwtllts1FUQxg+t3a3b3T3bAkJpQWwBi6YtGLFQlWKr0QdQ26IBEhBQjBBo
abnFZxU04iU+EWOQa6tihBpvCYIGEpGoeKUFKVjq5Q31QQpqTPx9+fZhkpnz
zZkzZ87M9//fsLKzraMghPACcg2SiSHsToSwB8mib86GUI/eWxRCXyaE71kr
x+8Qaz+glyJ70ZdcG8LS0hB+KQmhDrsW2cTellwIJ5IhnER+BpuVCmEK+3cQ
bxfxzrG/E+z5QvaBVbI2MiqEVeDr0YfAN4FvQcrZvzHr2D3gBzMW6X8gVeCn
8CdM6MXna/SFrI1wwWH2ryCXsny+y8n3EfIdBf4SeHVxCAfAJ4K/Df4Y+Arw
m1P21Z516NXg7xU450H01WnvbcM+jL2YGGfRh7lPIu2aqXZ/ItWc1Q8+H//7
kafBR+s84j3Knq/QD+XvM4LMwH88a29x9gGkHL2BHKZzv834X8Q+jTyBvgYp
w38P9h3okfgPKj5r67DXImfA6rEvF/kMnXWetS6wDcg4sJnIlSLn/C74+BKf
pTfQW9yGzFIeyGykMl8v1Ui1molUkd9q/PvBjpPDKRrrduJdJNZE3u8q+nz2
vI5+q2oanONZxceuwe7GvhCds3LvQMaw/7oSY8pZuZeW+CzVQLXYSM7d9M8k
7G3YFeBPoh9RT6pe4JF8JrP2nOqR8lvrDuvRy9LulSFkGW+1NTpWIfV8Kuea
qDa6wy3EfgO8WbmBt7L3g5RjN4Hfl/GZOvsoUod+jhit+LYjW/H/G7mKTCHW
VCQiq5J+c719NzH+5T4tWsN+Frle78Xa+5x1PudY6nH1+hLswaT3ZIh7Jude
uwzeXuI76W6qUSn4BuIvBGvDZxCsKnq29QZdxL8R+yPsRuw52Lt5swUJ11C1
1Jow1fg3fCcj74AfJOak6Dvpbs34tiC/os9ImFO2ECuH/V++P+aBfxk9C8dV
Q/LpyPPBndj7ot9Ab6EaNJB/lv0rk+YscVc/+fyF/2v4JJnf4WjuuIkcZ4ON
xd6f8Mxp9paVmrs03zns5aXuZfVDBfaltPNTT6u3m3PmLnHAXeidGXOVclSu
PVm//U7mfx/6QPRsqsfV68pJuV3B/wFiT4iebcWvTXmmNFtzkEbkx+jeF2eK
O3+KnlVxgLggRnP1aOwa7CPY7eCt5NdFPuOiuVCc3ZFyD6gXLuCzlPw/BX84
6R5QL7yScy+/jF2Abw94U9L3EzcnyP/VYtf4NPG258w14lBxaTbt2OpB9WJt
ng9Uw9/BmrDnptzz6v2jxH8o6Rw+iT5TZ9cQs4/9i6K5tI79i6PfUG/5Of53
g1dkzZUvcsdENAeLi1WDj9Gn47+t0G++NuUaqVaasW/An0m79zWTms0G5HDS
d96vfgNfUGzOFndf0jcsYQ6dwNl92POS3qO94jRxm2ZkF/pUYnyY8AxNi85R
uYpjK7P+JurbKB/5DqTcG4rZG/2GekvlMED8NWnXRjVT7eqjuUXfnEU5f0P1
LdUMdqJ/C/540jVQLTSDmsXPiHMibU7W7Ol91OuaQdni7GPY/yCFRZ5Zze4Q
cizpmfuC2PfgP7fIPtPA3ozmKnGiuHG4xG+lfwD9CzTme1s9oF4Yk/W3ezvx
C1kfm/W3Uv8Q+pc4mfYs6Yx7M+YUcYvu9B36jrR7Qz2p3twbzRX6Bupb+D+O
7xmM
         "]], 
        PolygonBox[{{2842, 1912, 4068, 3880, 3881}, {3889, 3888, 3891, 1729, 
         3890}, {2845, 1915, 4075, 3893, 3894}, {3268, 1230, 2674, 2610, 
         2611}, {3884, 1723, 2675, 2618, 2619}, {2611, 2610, 4067, 1912, 
         4069}, {3881, 3880, 3883, 1723, 3882}, {3271, 3270, 3399, 1342, 
         3397}, {2844, 1914, 4072, 3888, 3889}, {2621, 2620, 4074, 1915, 
         4076}, {2619, 2618, 4071, 1914, 4073}, {3892, 1729, 2676, 2620, 
         2621}}]}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1U7tqVFEU3bm3y5m5ZxwUYogkoygqJpPEEMQwGUHskilsHUH8AKfx8QOm
sbATRecPAgmpJKmSQbCwscgHSB5FQOy1ci3XEu7mrLPPOWuv/bitp4OHz4qI
eAIrYR3YOmwN9jNHvIezMy4jXoKvC/wB+C7wCvA74FvAFWwTZHWst+F/C/+X
WsQ+fJ+AH4FzD/gx1h5sA74t7JvAy1lnl5LOVmFd2Cx43uDeJM7PsmKt2LeD
+63QyljzofVzIfyxVOw+8MWsWBNYb2TdmUSsMkvb+SriNOs9tV8fl74M3xDr
gXXfsU7qpY8x+q4Zz4l/1aSP2m86FmP2XVfe3S1UT+bKc+bFfC8nad6uQ09S
7D/ge4D9CP6vwCdJcS9UyomxWIfXpepfWsu660y97Bd95Bgar1kv+7KYpWmB
+Y5FDGDHIT7WgT1qwI5g50I6yHUfun7XxM+5eFFJGzW+qhSLeZBveUzvv2dx
ssbcF+ZkDaiBdZhwv3JSL2dCOfJu0/d5rx06P7RmfP90DxxrVNN83Kurzl3f
b5mjae55c3Hu5ozrnucqyd9zTRt+M22Olvdta1r1TP6Pc+y6Ndz3nu81nU9p
rrZjU/vQucyZj//ltaSacxa2PPvkWHDvppL0dfxmxjGp8UrSvO7g7besWfmR
pIt9KTwzB/5feI/4ZaU9Z5Jzwrkkfl6p99RzNUn7tGNyFkb+X5jLoXu/6X+d
+XL291wL9ob1aoDnLxH9e2I=
         "]], 
        PolygonBox[{{2845, 698, 919, 4076}, {3898, 920, 698, 3896}, {3892, 
         919, 697, 3890}, {2844, 697, 917, 4073}, {2853, 706, 920, 3321}, {
         3322, 924, 706, 2854}, {3700, 704, 922, 3701}, {3605, 922, 705, 
         2851}, {2831, 686, 901, 4048}, {2842, 695, 910, 4069}, {3866, 906, 
         686, 3865}, {3855, 901, 683, 3854}, {3268, 910, 689, 3266}, {2830, 
         683, 900, 4043}, {2832, 689, 906, 3310}, {3604, 923, 704, 2850}, {
         3702, 705, 924, 3703}, {3884, 917, 695, 3882}}]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{3040, 4043, 2830, 3853, 3854, 3855, 2600, 4048, 2831, 3864, 
         3865, 3866, 2605, 3310, 2832, 3392, 3266, 3268, 2611, 4069, 2842, 
         3881, 3882, 3884, 2619, 4073, 2844, 3889, 3890, 3892, 2621, 4076, 
         2845, 3894, 3896, 3898, 2623, 3321, 2853, 3395, 3271, 3397, 2854, 
         3322, 3045, 3703, 3702, 3505, 2851, 3605, 3044, 3701, 3700, 3503, 
         2850, 3604, 3843}]},
       "0.432`"],
      Annotation[#, 0.432, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2602, 4446, 3856, 3860, 3858, 4447, 4448, 3867, 3871, 3869, 
         4449, 4451, 4450, 2607, 2672, 3868, 2603, 2669, 3857, 4445}], 
        LineBox[CompressedData["
1:eJwV0DkvRGEYhuGPggRjKyyhGQkaW2WpSKjtiSEhoaOYscUPsBcqldq+VFOo
rL+AwprYR+J3uE5x5z7vc573fOec+FRqMJkVQljCeV4Im0UhLBeH0FYQwgqv
mzewGAuhRDYhK+VJHs4P4SPqmN94jd95QffWzg2uMSNPy7P1t3nAfCw/wSnm
9WOyMfcKeZyHdF951fzMK/zCc7pXdi5xgWn5mTxLf4v7zbvyPewjqZ9CnnyW
q3EoP0CbftrekesX396nk1viPNdrek+cY96R92JUL4ER5ESz/QSazU1oRJXn
/XGH3XquQy1+5d26Ge7hdvcz8krzN1fwT/RO8i8uj/4tl/Ent8o7vVMLz6FG
FscjHtAgS6I82sE97tDlrH8+VT4Z
         "]], LineBox[CompressedData["
1:eJwVzj0vQ2EYBuDHYvD91QUVogOR0BYR0hBdSMdOnc2iCf6EX6FCzGLoH5BI
JO1A0qqPRUgI6WIyujpcuZ/nPud9z5nZKxcPuiKiRLs3YnwgYkle9Uek5YS9
ezBiUmbs1/qsTNpPqXBGQ3/ivWpPxK65RYFLzy44N9/1RezIW5mXKff8mTed
WXd2jVV++CanP2bZnOaLTzZ0RyyY5/jgnazukBt3vrm7LTP2pmfD9oYckY9y
Rf8kR+0tOSafO9/XV/xbfihim4Q+pf81z8pXXlj0Xplp8xQP3DOv2yfRuZs6
Nbac/wc/3i9X
         "]]},
       "0.41600000000000004`"],
      Annotation[#, 0.41600000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzssqxGEYgPF3lJTTYA4UGzOslCRZabYWLCQ1oklZKjPOxrGpYZZyB5IF
LsHSBbCxYXIHcw/ym8XT83++t/f7/uPbldVyIiKKaPZE1DE6GHHDH90RDR7T
t/ys9zil9/lbV3hIl7moDzitD7mljzmjj/hFV3lYn/GPPuWsPuF1fc4j+oI/
9eRAxJXvPF/yBL86n+qL+OqNmOFpbJjldMLuo3ne2Z1e0fc8i3ks6jleck8a
WVwnI2p4spfTD+Zr7Xt4E1tY1iVO9Ud0ogtNb+zyjtmb3V//sGC/gD/3dXDg
3d4/HG8okA==
         "]], LineBox[CompressedData["
1:eJwV02loz3EcwPGvUO4jzE2kiIfi+ZBCHlAo15hiMzYUJdcwxzbD5r6ZW9iy
trmmMPdsjLV4sJm5niFJSnh9H7z3/n7O3//367tByRlT01uEEPr5M6ZDCIu6
hNCdF3IPTuFunMY9OZUTeDFPbBfCUu4tXsJ9OJ178aqOdvIJ7stju4ZQzneQ
j5bi++YPqVdyK3GBfB12y9Xz404hPMRaDMYQDMTPziH8wBc95Wbr9U/AWbXT
KHR+rDaeH/A4/tw+hF/Oifq/mR0q/srD+DuPle9pdrg4gUdwot/Uy7mVemv8
Mb9cnIFl2GxmRTSykKje6FlNuKdWJFeMBvm/4q2+zSTnvXbtw36k6E1FDrIx
Q08ul+mrRpa5Sju2cIX8SCxBGpZiNEbhiF2HcQhFfvtoe/6Z+cDn7SmVL0N5
fK7+5/Ir5at4VXwWTzH3gteIa3g1H9B73MwxHMUBuWa1oPcLXxRfl7+Bmzio
v1Z+nfxLXs+veKr+Ot4kfs2Z8d30njJzEicwWe49mlCo5zSeevcqPMM/Oxq4
EXfNTjOT4x17O+fG7xS/O3ao5yLE+8HXUYIylKJZ/ozdZ1EtfoEatJR/x03x
3tkz3f48e/s47+Qn/Cie1fPivdBfwXdwA7dxCx/kz8Xvjlrxa7xCm/h+8fnx
feyZaf9ue/s65/Ms8S61Avw2m89tzeTEO4FtyMZ2fJS/yJdwAVdwGe3l3/Bb
zLZvDvbY3d8z9nKSeC5mq89Ch/j/Fp+FPOzCTnySL+JiXEUJrqGzfAM3Yp49
8+NdtneA/ft5gTgZ89ST0EV/Jm+MdwIb4p1AFv4DeResRg==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0nloz2EcwPFncp/b3Knx4x/kyNkcE2LOEM2VCPljJv5wz7HkGtEkSe6j
jQwxlBQmyZWcKckROcYOx8wxw+v7x/v3fj7X8zzf7+8bm7Vg/Py4EEIrP+Pq
hZAYH0IC4hNCiIlLG4WwHnl1Q6gnP1yuDg/julzAfTgZjcy0EZfoX4dcM7Xl
U+Vq8lCuxad5RsMQpuNUgxBaiydbJ/FP9YnW25CGSdhun9v6HtQ3j2bRWr4p
P1b7LndRXME1UI6bat+4Defouc73xdXQxPqu/sb8SO2L3DnxV47DZ1xTK+PW
vEVPId8T/43ekfUt/QnRPdTW8kMu5gL5Mxitdw1+eJ5Nai3UsrlCnCW/EkXW
H/EW7/EOr+R/mv+FH6jEbyyTz8R3PRvt09x+G7hcvFR+EY5hkv8gj1/ipLt2
EZ/iE5hrJp978nMewCm4gssottd5cxM5DX/0ZMtX8XF3eG39BvG46uxX/AID
zRxVXyw3EKVmy1CCQ+pdzC9U78zLOROp0feAIrkMd5yHwVimdtZMJ/mW1h/4
jv1vY7t8B3Gl9TseJF7ivME4rDdZ/hL6RO8WT9Tf81ffYjmS9LRDDCtwHTfw
RE+O3q2Ybd8kcaW77bHvcnPpejLQG32jc7Aa+fqmuPNJzsZmVJnbZ66/vY5E
71I9l2diDsaIZ/MnDMEIcWr0nWIL/pk/YL67+d3i8ep7eQJ2q+3FDuzCTuxH
e70do29QT1fujCmeIyYO5g/ar230fOKx4hzuhl5IFffgkfZpjKZY5ZmzcNhc
LDojOj/ah6diOkaJp3Gi91AdNfHUGfM4Xe2C2Wfu0M98CqrsF8f/uNDcfz8X
oTQ=
         "]]},
       "0.384`"],
      Annotation[#, 0.384, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV1ElsjWEUxvFXxNTZCgtBYojERmgES8RYQ02NIamrpS1ac5FIkSDGjbGq
XQiRmAlKVYKiRUwbhGJnqHlhTIvfu/jf53vOec753nvvd2+PREl2casQQqaX
wqQQ1qM2NYQrmJgWwgTMVyvDhPQQsjAxwzV+JIdQqV+FchxEBWbLrsVo2Rp7
Xqo14rt8Pv8CjViHnTI7sB1DUkLYaO9sud6ue6E7X2/XNv2tcZ/r3mobZD7q
J9Mbdtfhm32nZRpl1rheIrcUe/X2Yx9myX+mX/ABn/ARq+UfmWui73FK7SSS
5K/R6/ga6/Y/l1vlusTuxdiltwe7MVP+PW3CG7zDW5TKPzT3jr7FCbXj6CCf
RjNQ0DGEdDoHuUhgbjyr/En37Ufz5TfRPNqX9kGlM+zBvngWVKAc2T6fCkyy
t5z2l61yhr962/huGIFR+sNoExLI4vNoLg5jKn+IDjV/0Hyz+S38ZpxAjv4x
utZZB2EwMlEU3xNWOfsBc3/MdY33cPbt8btHAd+T/sU/NKMFRzBSvp3ZatcX
cQEDzHa3sz0t42vNP+Gfxhpuyf9yr116v2k9fxuX7bqEZzK9MND8eZnM+KzF
WZkWu7LVBqll0cE00KPxfHrD7SvFWL5Jr9q+DzTJ+79pfhGtoz9lZsnsjr8j
mUVma+hV1KJZP1W2WL21+XM0jW9RrzRzhp/Bn6Wv9VOcLzk+K3jFF9NL8Xul
o/n7Zia7noKp/OP4LOMBxvDZ6pflU9x7bPwNOuM8zMc0vogWogDj+FS5mngm
msUvUF8Y3x+m84tpCYoxnk+XuyKfEf8X+CXqS7EMOXwX9U7ojDtqd9GANnoJ
tblYzq/Afp9BrnPXqd3EDdzGLbSVz6P5WClbinL5hHxD3B3/K3APd+OzI/8f
Tw2yQw==
         "]]},
       "0.368`"],
      Annotation[#, 0.368, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzrkyg1EYgOHDSGPPBWBS2RJugERjBiV6YiwhQWGswZAb4B7sWkpbjc7u
ClDaChqP4p33vN/5v/lPbGi6d6oohJDDaGkItdVcFkINj3Edv5mPO0ejIWT4
WB9wQh/yt97nuN7jEX3HKX3Pr/qRO/QDH+kdbta7/KW3uUlv8bC+4aS+5Rf9
WeE9ld6Gd+cPxDDnffHyEGY5wfOctZNDsf0Lu5POabS6b8GKvWvzHudnpHCu
C+ZnnNSD/+/hRiybX5l3Oz+hHad63fyE2/SA7xu40z/rOe/u0l1Ed+nNqhA2
MOG7Gb3qLo1F713CApaRx49vfrHmPoMSswj67PejYJbFH9TvO0g=
         "]], LineBox[CompressedData["
1:eJwV01dsj1EYx/HTkaDDuLTjwlZqRBodXNhtKO1NawVFghASiSszqHGhKIIY
iQhtY7VorSIhJBKJkViNEdxom1ZptSR83otvv8/vnOc87+j7H7Bk7dw1MSGE
FH9WJoQwt1sIc5CLyYkhxHUPIR/t6jn8m/N4RXIIL/ECQW9qUgib1Onc1DWE
ZtTJt8zsrb8PemGh8wX25qEQT+wfdP6r3lb5F16aEWMtFj/lT84dsvaRt1nb
jq04G92vtRz1TMxCNlqstbnOZy517pgZB7mFf+Cwug7fXPOxGcv5gHMlOG9/
mr0L/JpTzdhv1hF7R/Fd7wJ785FkvQcncxEvQ60zt+RSfbc5jT+4xl312B4h
3OEKeQv3krdyo7yZe8qbeJ58g0fL1Vwn3+Qxcg2Xy3u5v7yPG+Q93E/ezYVy
JY+Sq/idfJ1T5WtcJu/ivnIx18vDPOdwDMZQDEGB9YHufxDWe65GXsd7PGeL
c7uj98k5eovsVXg/5WhQ5+urtf9F/V79yKyT6of8Tk7SVyNXow1X5Mv4HX0H
eOXsdXNXR9+COhZxKLH3QN99BHmV/Wv6qpBlLRNtaI9moRVXMcH+G/fa7nyl
XIUO9R+cRbJZFXzRvETvpcN9Hov2OUm+ZP27GWeib199ipfzac7WM19PRvRd
cyanYyKykGM/0aw8NLqHGJ4Q/Z54fPT+OI3/mXdOfR6xiMPC6HvDIlTZ/2de
Jf/lqebGW5+FeueP8wnkYjZ26NmJBBRjF+L1feGveKrnOYq8iyNmbVC/sf4W
z9T3PNtd1CJdTwY26psS/Q+j3wk3R9+Kuin6bngwhmMYpttP4ZEYgVSMwgzr
Y3gsRiPDPY3jRPM7uW6mvJizuDOXoQsmykt5EidwOf4DVW6pEQ==
         "]]},
       "0.352`"],
      Annotation[#, 0.352, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl08dOVFEcgPHjQiM4gL6BCLbYooIIaGSGoeqgIgygBAy2nZjoRiSxbFyp
sVdsOxfWF1AUG0XRBzCKbQkobmzxd+Piy3e+/9xzZubemdyOzvrdk0IIw5iS
FULptBCauBmTcQt/skP4i7R1IwZjIQwhMyeEDIzZk2OejVRmCDHOwqh5A8d5
Cyf4oHPG+bauc+1P+38hgXIcMGtEnvOTM0LI53fRjGt1mifsT023H1X2VKPb
NWkUObeVF3ltMRbimOuX8Kj5CeuZzjkefQbdy4X6Mb/Xj7hAP+Q2fZJz9Ske
02d4lj7Nd/RTLtLP+IPu4xX6Cbfrs5ynz/G4vsD5+jzf1S+5WPfziH7BK/Vz
3qov8mx9ib/pKzxHX+Z7eohL9Sv+qAe5RA9wh+7hufoqf9fXeZ6+xvf1G16t
3/InPcyr9Gvepm/wfH2TJ3SB+1iIpViOZXhgXuy+l6DF8/nBX82arTPs/WJ9
1OwzT9U95k3ojp43urBA73PWXlTqCiSj34T3/c0N9u5H3LoMu5zTpddYb7fe
iR3YZFbtjBoc8ls7gsOoN09xHWqxDmuxMbqea1CBKlRig3k5J1GGBOJYb97i
u2zGHp+51/t0xv7/d/4BWnlsVQ==
         "]]},
       "0.336`"],
      Annotation[#, 0.336, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "TransparentPolygonMesh" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{-2.3414837114562674`, 
   2.3414837114562674`}, {-0.39332787273081904`, 0.39332787273081904`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7136928513744144`*^9, 
  3.7136929524772577`*^9},ExpressionUUID->"cf1c2b6d-7db0-4b44-95ab-\
c57f38c3e8ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "meetingPiAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpLevelUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",ExpressionUUID->"e7aca567-afc0-\
4f42-bf5c-d8832e9b7f26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"-", "2"}], "}"}]}], "\[IndentingNewLine]", "}"}], "}"}]], \
"Input",
 CellChangeTimes->{{3.713670058446885*^9, 
  3.7136700787348804`*^9}},ExpressionUUID->"e94d648d-6489-40c9-9b7f-\
2b4921224138"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 
  3.7136678297029686`*^9}},ExpressionUUID->"95228796-0e58-4148-a9f4-\
9632ff2da7ea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
  "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
  "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
  "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", 
  "\"\<guidance\>\""}]], "Input",ExpressionUUID->"93990df3-176b-45ed-851f-\
e3d1c98908b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Tree", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.713667838475739*^9, 
  3.713667839695563*^9}},ExpressionUUID->"0cc86ea5-7cc5-446d-b359-\
ec42e358daad"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.713667840399576*^9},ExpressionUUID->"d7b4d77b-369a-41c8-80e5-\
c9d91f8cc257"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Logi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", "\"\<LogisticRegression\>\"", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1Logi", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7136678601883626`*^9, 
  3.7136678849830427`*^9}},ExpressionUUID->"ede94b23-f6d0-4fc3-81ce-\
258427cd8898"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136678869400806`*^9},ExpressionUUID->"db1e6a36-2a1a-4f67-9151-\
c8f5ee6d5277"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Theta\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"3.2702480824470244`", ",", 
       RowBox[{"-", "31.719313602318884`"}]}], "}"}]}], ",", 
    RowBox[{"\<\"L1Regularization\"\>", "\[Rule]", "0"}], ",", 
    RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", "1.`*^-10"}], ",", 
    RowBox[{"\<\"FeatureNumber\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"Method\"\>", "\[Rule]", "\<\"LogisticRegression\"\>"}], ",", 
    RowBox[{"\<\"Processor\"\>", "\[Rule]", 
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{"\[ThinSpace]","\" \"",TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"DimensionReduceNumericalVector\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{
                RowBox[{
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], "\[Rule]", 
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]]}]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Imputed\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Reducer\"", "\[Rule]", 
                    TagBox["Normal", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Version\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11.1`", ",", "1"}], "}"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"ID\"", "\[Rule]", 
                    TagBox["3939872915197901623", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Panel[
                Grid[{{"f1", "NumericalVector"}}]] -> Panel[
                Grid[{{"f1", "NumericalVector"}}]], 
              
              Column[{"Invertibility" -> Short["Perfect", 5], "Missing" -> 
                Short["Imputed", 5], "Reducer" -> Short[Normal, 5], "Version" -> 
                Short[{11.1, 1}, 5], "ID" -> 
                Short[3939872915197901623, 5]}]}], "Tooltip"]& ],StyleBox[
          "\"\[RightArrow]\"", 
           Directive[
            GrayLevel[0.4], 15], StripOnInput -> False],TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"PrependOne\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{
                RowBox[{
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], "\[Rule]", 
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]]}]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Version\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11.1`", ",", "1"}], "}"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"ID\"", "\[Rule]", 
                    TagBox["5346351525268736226", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Panel[
                Grid[{{"f1", "NumericalVector"}}]] -> Panel[
                Grid[{{"f1", "NumericalVector"}}]], 
              
              Column[{"Invertibility" -> Short["Perfect", 5], "Missing" -> 
                Short["Allowed", 5], "Version" -> Short[{11.1, 1}, 5], "ID" -> 
                Short[5346351525268736226, 5]}]}], "Tooltip"]& ],StyleBox[
          "\"\[RightArrow]\"", 
           Directive[
            GrayLevel[0.4], 15], StripOnInput -> False],TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"FirstValues\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{""}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Info\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Weight\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"Type\"", "\[Rule]", "\"NumericalVector\""}]}], 
                    "\[RightAssociation]"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"Key\"", "\[Rule]", 
                    TagBox["\"f1\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Null, 
              Column[{"Info" -> Short[
                  Association["Weight" -> 1, "Type" -> "NumericalVector"], 5],
                 "Key" -> Short["f1", 5], "Invertibility" -> 
                Short["Perfect", 5], "Missing" -> Short["Allowed", 5]}]}], 
            "Tooltip"]& ]},
         "RowWithSeparators"],
        Background->Opacity[0., 
          RGBColor[{1., 1., 0.99}]],
        FrameMargins->3 + Rational[1, 25] 2167^Rational[1, 2],
        FrameStyle->None,
        RoundingRadius->2,
        StripOnInput->False],
       TagBox[
        GridBox[{{
           RowBox[{
             PanelBox[
              TagBox[
               
               GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"]], "\[Rule]", 
             PanelBox[
              TagBox[
               
               GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"]]}]}, {
           TagBox[
            GridBox[{{
               RowBox[{"\"Invertibility\"", "\[Rule]", 
                 TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
               RowBox[{"\"Missing\"", "\[Rule]", 
                 TagBox["\"Imputed\"", Short[#, 5]& ]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{Panel[
           Grid[{{"f1", "NumericalVector"}}]] -> Panel[
           Grid[{{"f1", "NumericalVector"}}]], 
         Column[{
          "Invertibility" -> Short["Perfect", 5], "Missing" -> 
           Short["Imputed", 5]}]}], "Tooltip"]& ]}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136678870960836`*^9},ExpressionUUID->"ab0093d8-c253-469b-8e2d-\
6a4fa0747a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Logi", "[", "2.747939", "]"}]], "Input",
 CellChangeTimes->{{3.713667915157628*^9, 
  3.7136680083864474`*^9}},ExpressionUUID->"a43f45af-c958-41d6-87f5-\
58914f2845ab"],

Cell[BoxData["\<\"B\"\>"], "Output",
 CellChangeTimes->{{3.7136679153302317`*^9, 
  3.713668012046919*^9}},ExpressionUUID->"f6ca6e1c-a7f9-4130-bf05-\
2fb8b50d5c3c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", "+", "3.5"}]], "Input",
 CellChangeTimes->{{3.7136679403281164`*^9, 
  3.713667942326955*^9}},ExpressionUUID->"a75daf62-7b88-44f6-b6a5-\
099eca95625e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5.5`", "/", "2"}]], "Input",
 CellChangeTimes->{{3.713667946713041*^9, 
  3.713667948452675*^9}},ExpressionUUID->"1894d557-52a3-407c-9b50-\
a2f93a44acdc"],

Cell[BoxData["2.75`"], "Output",
 CellChangeTimes->{
  3.7136679489518843`*^9},ExpressionUUID->"8f262410-d370-41f5-ab18-\
1776eeacd129"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.713667914173809*^9},ExpressionUUID->"64a7e743-6cb3-416b-a8d4-\
1b8ff60d219f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Anton Antonov\[CloseCurlyQuote]s algo", "Chapter",
 CellChangeTimes->{{3.7136950009901085`*^9, 
  3.7136950091689262`*^9}},ExpressionUUID->"aade7653-f291-4846-9359-\
95a9a9e90610"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://raw.githubusercontent.com/antononcube/MathematicaForPrediction/\
master/AVCDecisionTreeForest.m\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713695011125122*^9, 
  3.713695027977807*^9}},ExpressionUUID->"41eefb18-3d9d-43ee-b945-\
a2c78b1d0b91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
     "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
     "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
     "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", "\"\<guidance\>\"", ",", 
     "\"\<Decision\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"in", "/@", "colNames"}], ")"}], "\[Transpose]"}]}]}], "Input",
 CellChangeTimes->{{3.7136950369297023`*^9, 3.713695046562666*^9}, {
  3.7136950867576847`*^9, 
  3.7136951429923077`*^9}},ExpressionUUID->"a3762093-cb48-4c7b-a3b8-\
75117ea0c2a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<input.xlsx\>\""}], 
     "}"}], "]"}], ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{"data", ",", "colNames"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.713699480209168*^9, 3.7136995353566575`*^9}, 
   3.71369961019794*^9},ExpressionUUID->"bf9f9719-00ac-4db0-83b4-\
7075d98a8949"],

Cell[BoxData["\<\"G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\\\\\
models\\\\core\\\\monetarypolicyCART\\\\input.xlsx\"\>"], "Output",
 CellChangeTimes->{
  3.7136996256184444`*^9},ExpressionUUID->"9348d898-e503-41a3-933d-\
4b8d44affe4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<input.xlsx\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136996021177807`*^9, 
  3.713699605778252*^9}},ExpressionUUID->"53d2c1ac-c919-4f45-8355-\
56140b09cc71"],

Cell[BoxData["\<\"G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\\\\\
models\\\\core\\\\monetarypolicyCART\\\\input.xlsx\"\>"], "Output",
 CellChangeTimes->{
  3.713699546723282*^9, {3.713699599740535*^9, 
   3.7136996061978617`*^9}},ExpressionUUID->"81db68b5-5d94-4840-954a-\
de8de47412fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136961566346617`*^9, 
  3.713696160195018*^9}},ExpressionUUID->"d8ffba87-f9e3-46c7-a518-\
2b34da3eeebc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.1334923927671223`", ",", "0.5115150170487845`", ",", 
     RowBox[{"-", "0.019154911602153546`"}], ",", "13.`", ",", 
     "0.49777777777777743`", ",", "0.5`", ",", "\<\"Negative\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.433044340046632`", ",", "0.5115150170487845`", ",", 
     RowBox[{"-", "0.028813708892286072`"}], ",", "12.430508474576271`", ",", 
     RowBox[{"-", "0.5694915254237287`"}], ",", "0.5`", 
     ",", "\<\"Negative\"\>", ",", "\<\"No\"\>", ",", "\<\"Hike\"\>", 
     ",", "\<\"Hike\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.011630832890643`", ",", "0.4992175326922793`", ",", 
     RowBox[{"-", "0.01229748435650524`"}], ",", "12.430508474576271`", ",", 
     RowBox[{"-", "0.5694915254237287`"}], ",", "1.5999999999999996`", 
     ",", "\<\"Negative\"\>", ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2107217524261138`", ",", "0.5618619201476801`", ",", 
     "0.0626443874554008`", ",", "11.647540983606557`", ",", 
     RowBox[{"-", "0.1524590163934434`"}], ",", "1.2999999999999998`", 
     ",", "\<\"Zero\"\>", ",", "\<\"No\"\>", ",", "\<\"Hold\"\>", 
     ",", "\<\"Hike\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9142943023243255`", ",", "0.7767732324021025`", ",", 
     "0.08720323837206978`", ",", "12.7`", ",", "1.1999999999999993`", ",", 
     "1.5`", ",", "\<\"Zero\"\>", ",", "\<\"Yes\"\>", ",", "\<\"Hold\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.7565492896045134`", ",", "0.31800350261079147`", ",", 
     "0.1233852151650649`", ",", "10.3`", ",", "0.`", ",", "1.5`", 
     ",", "\<\"Zero\"\>", ",", "\<\"No\"\>", ",", "\<\"Hike\"\>", 
     ",", "\<\"Hike\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.305424739277284`", ",", "0.6075909225173046`", ",", 
     RowBox[{"-", "0.06414148832327449`"}], ",", "11.3`", ",", 
     RowBox[{"-", "0.3999999999999986`"}], ",", "1.75`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"Hike\"\>", ",", "\<\"Hold\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "6.684592296148084`", ",", "0.6348421686732586`", ",", 
     "0.02725124615595398`", ",", "12.5`", ",", "0.6999999999999993`", ",", 
     "0.75`", ",", "\<\"Zero\"\>", ",", "\<\"No\"\>", ",", "\<\"Hike\"\>", 
     ",", "\<\"Hike\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "15.271723645209168`", ",", "0.841594273803137`", ",", 
     "0.17729819422769721`", ",", "13.8`", ",", "1.3000000000000007`", ",", 
     "1.25`", ",", "\<\"Zero\"\>", ",", "\<\"Yes\"\>", ",", "\<\"Cut\"\>", 
     ",", "\<\"Hike\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "29.19751763231304`", ",", "0.841594273803137`", ",", 
     "0.17729819422769721`", ",", "13.1`", ",", 
     RowBox[{"-", "0.7000000000000011`"}], ",", "0.25`", ",", "\<\"#NA\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"Hike\"\>", ",", "\<\"Hike\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "10.864332326968974`", ",", "1.1987192660480002`", ",", 
     "0.35712499224486316`", ",", "15.5`", ",", "2.4000000000000004`", ",", 
     "7.`", ",", "\<\"Negative\"\>", ",", "\<\"No\"\>", 
     ",", "\<\"NoGuidance\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8836211405955474`", ",", "2.080753352007654`", ",", 
     "0.28392275190903327`", ",", "16.6`", ",", "1.1000000000000014`", ",", 
     "5.25`", ",", "\<\"Negative\"\>", ",", "\<\"Yes\"\>", 
     ",", "\<\"NoGuidance\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.1889610750180486`"}], ",", "2.061622164589565`", ",", 
     RowBox[{"-", "0.01913118741808928`"}], ",", "15.7`", ",", 
     RowBox[{"-", "2.400000000000002`"}], ",", "5.`", ",", "\<\"Negative\"\>",
      ",", "\<\"No\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.154254454638313`", ",", "0.9322724029986431`", ",", 
     RowBox[{"-", "0.7490357932417246`"}], ",", "14.`", ",", 
     RowBox[{"-", "1.6999999999999993`"}], ",", "4.5`", 
     ",", "\<\"Negative\"\>", ",", "\<\"Yes\"\>", ",", "\<\"Cut\"\>", 
     ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.889760145172972`", ",", "0.5137182815578432`", ",", 
     RowBox[{"-", "0.41855412144079995`"}], ",", "15.`", ",", 
     "0.6999999999999993`", ",", "4.75`", ",", "\<\"Negative\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9872940586133749`", ",", "0.38432896422573276`", ",", 
     "0.03652584665437003`", ",", "13.9`", ",", 
     RowBox[{"-", "1.0999999999999996`"}], ",", "4.25`", 
     ",", "\<\"Negative\"\>", ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.8506923598023555`", ",", "0.5515532328462635`", ",", 
     "0.1672242686205307`", ",", "16.`", ",", "1.1999999999999993`", ",", 
     "4.`", ",", "\<\"Negative\"\>", ",", "\<\"No\"\>", 
     ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "6.6058664037466075`", ",", "0.8170801886854221`", ",", 
     "0.11059964419719759`", ",", "16.3`", ",", "0.3000000000000007`", ",", 
     "4.25`", ",", "\<\"Negative\"\>", ",", "\<\"Yes\"\>", ",", "\<\"Cut\"\>",
      ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.537140147041231`", ",", "0.7800996326177385`", ",", 
     RowBox[{"-", "0.03698055606768358`"}], ",", "16.4`", ",", 
     "0.5199999999999978`", ",", "5.`", ",", "\<\"Negative\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.025914711969305`"}], ",", "0.6195411913348255`", ",", 
     RowBox[{"-", "0.09134315916935642`"}], ",", "15.7`", ",", 
     RowBox[{"-", "1.`"}], ",", "4.25`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"Hike\"\>", ",", "\<\"Hold\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.8854799693197273`"}], ",", "0.5073091741358945`", ",", 
     RowBox[{"-", "0.11223201719893106`"}], ",", "14.7`", ",", 
     RowBox[{"-", "1.`"}], ",", "5.25`", ",", "\<\"Zero\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Hold\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.3127576988717924`"}], ",", "0.48526864894646266`", ",", 
     RowBox[{"-", "0.10562226020563853`"}], ",", "14.6`", ",", 
     RowBox[{"-", "0.09999999999999964`"}], ",", "6.`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.961280249804843`", ",", "0.3754567941113799`", ",", 
     RowBox[{"-", "0.02637458859920172`"}], ",", "14.2`", ",", 
     "0.5999999999999996`", ",", "5.75`", ",", "\<\"Zero\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04280485758145769`", ",", "0.37201553458645176`", ",", 
     "0.008552351289297766`", ",", "12.6`", ",", 
     RowBox[{"-", "1.700000000000001`"}], ",", "5.75`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2088475717262228`"}], ",", "0.39911759026867855`", ",", 
     "0.02710205568222679`", ",", "14.2`", ",", "1.5999999999999996`", ",", 
     "5.5`", ",", "\<\"Zero\"\>", ",", "\<\"No\"\>", ",", "\<\"Hold\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.910759904004315`"}], ",", "0.4715607137251527`", ",", 
     "0.03830008730088613`", ",", "13.7`", ",", "1.4000000000000004`", ",", 
     "5.75`", ",", "\<\"Zero\"\>", ",", "\<\"Yes\"\>", ",", "\<\"Hold\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.3649244173734365`", ",", "0.410912696658953`", ",", 
     RowBox[{"-", "0.06005089381179812`"}], ",", "12.4`", ",", 
     RowBox[{"-", "1.299999999999999`"}], ",", "6.`", ",", "\<\"Zero\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"NoGuidance\"\>", ",", "\<\"Hold\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3195403951943852`"}], ",", "0.3165458054918478`", ",", 
     RowBox[{"-", "0.09623497728651814`"}], ",", "12.9`", ",", 
     "1.4000000000000004`", ",", "6.`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"Hold\"\>", ",", "\<\"Cut\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2193600286337527`"}], ",", "0.20142571332483372`", ",", 
     RowBox[{"-", "0.11512009216701408`"}], ",", "11.2`", ",", 
     RowBox[{"-", "1.700000000000001`"}], ",", "5.75`", ",", "\<\"Zero\"\>", 
     ",", "\<\"No\"\>", ",", "\<\"Cut\"\>", ",", "\<\"Cut\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7124991751396923`", ",", "0.19461828744572657`", ",", 
     RowBox[{"-", "0.039092643038684954`"}], ",", "10.3`", ",", 
     RowBox[{"-", "0.6999999999999993`"}], ",", "5.25`", ",", "\<\"Zero\"\>", 
     ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>", ",", "\<\"Cut\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5517690139535847`"}], ",", "0.31800350261079147`", ",", 
     "0.1233852151650649`", ",", "10.3`", ",", "0.`", ",", "5.`", 
     ",", "\<\"Zero\"\>", ",", "\<\"No\"\>", ",", "\<\"NoGuidance\"\>", 
     ",", "\<\"Hold\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.713695885624563*^9},ExpressionUUID->"8c7cf0ed-cbd6-4964-b13f-\
82e1a1f7a9f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dtree", "=", 
  RowBox[{"BuildDecisionTree", "[", 
   RowBox[{"data", ",", 
    RowBox[{"\"\<ImpurityFunction\>\"", "\[Rule]", "\"\<Entropy\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713695150576066*^9, 3.7136951594329515`*^9}, {
   3.7136953296899757`*^9, 3.71369533343635*^9}, {3.713695484999505*^9, 
   3.713695485436548*^9}, 3.7136958588228836`*^9, {3.7136959075277534`*^9, 
   3.713695907943795*^9}, {3.713696777132705*^9, 
   3.7136967810380955`*^9}},ExpressionUUID->"17c26ac3-1b6a-48a1-966f-\
bd7acb571382"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.3810189364779717`", ",", "1.5325000000000002`", ",", "6", ",", 
     "Number", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.21576155433883565`", ",", "0.019999999999999574`", ",", "5", ",", 
       "Number", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4", ",", "\<\"Hike\"\>"}], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0.6931471805599453`", ",", "2.2064629431839613`", ",", "1", ",", 
         "Number", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"Hold\"\>"}], "}"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"Hike\"\>"}], "}"}], "}"}], "}"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.18385954407834715`", ",", "4.3`", ",", "6", ",", "Number", ",", 
       "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"6", ",", "\<\"Hold\"\>"}], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.14970535808138635`", ",", 
         RowBox[{"-", "1.6800000000000017`"}], ",", "5", ",", "Number", ",", 
         "17"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "\<\"Cut\"\>"}], "}"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.1516708087386961`", ",", "\<\"No\"\>", ",", "8", ",", "Symbol", 
           ",", "13"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.3236423315082535`", ",", "0.5117609705669774`", ",", "2", ",", 
             "Number", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"5", ",", "\<\"Hold\"\>"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0.6365141682948128`", ",", "0.5199999999999978`", ",", "5", 
               ",", "Number", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1", ",", "\<\"Hold\"\>"}], "}"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2", ",", "\<\"Cut\"\>"}], "}"}], "}"}], "}"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5004024235381879`", ",", 
             RowBox[{"-", "5.910759904004315`"}], ",", "1", ",", "Number", 
             ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "\<\"Hold\"\>"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"4", ",", "\<\"Cut\"\>"}], "}"}], "}"}], "}"}]}], 
          "}"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7136951098279915`*^9, 3.713695164904498*^9}, 
   3.713695336447651*^9, 3.713695488381843*^9, 3.713695855470548*^9, 
   3.7136959113911395`*^9, 3.713696783954387*^9, 
   3.713697020524042*^9},ExpressionUUID->"df157cb2-bcd7-4250-8915-\
73493e650e37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trules", "=", 
   RowBox[{
    RowBox[{"dtree", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_"}], "}"}],
       ":>", 
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", 
        RowBox[{"colNames", "[", 
         RowBox[{"[", "x3", "]"}], "]"}], ",", "x4", ",", "x5"}], "}"}]}]}], "//",
     "DecisionTreeToRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trules", "=", 
   RowBox[{"trules", "/.", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m_", ",", "v_Integer", ",", "cInd_", ",", "s_", ",", "n_"}], 
       "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{"m", ",", "v", ",", 
        RowBox[{"colNames", "[", 
         RowBox[{"[", "cInd", "]"}], "]"}], ",", "s", ",", "n"}], "}"}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{"LayeredGraphPlot", "[", 
  RowBox[{"trules", ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7136951743284407`*^9, 3.713695174330441*^9}, 
   3.7136966836683598`*^9, {3.7136969010660973`*^9, 3.7136969556935596`*^9}, {
   3.713696994210411*^9, 
   3.713696997123702*^9}},ExpressionUUID->"c3f75f99-be26-4b26-ad65-\
4298eabcd901"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQokHCD0h/0QWsQBVR7OPwChBNDUC6DJc6DJw/gw
ANdvj6afAU2/PXb9DGjycP5+NHEG7Hxc4jA+hrn2ANs1GMQ=
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.021167650531286893`, 0.7}}], 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 1.5\"", StandardForm], StandardForm,
                   Editable -> True], Background -> GrayLevel[1], FontSlant -> 
                 Plain, StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{1, 2}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 1.5\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{1, 3}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 0.02\"", StandardForm], 
                  StandardForm, Editable -> True], Background -> GrayLevel[1],
                  FontSlant -> Plain, StripOnInput -> False], StripOnInput -> 
                False], TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{2, 4}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 0.02\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{2, 5}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 4.3\"", StandardForm], StandardForm,
                   Editable -> True], Background -> GrayLevel[1], FontSlant -> 
                 Plain, StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{3, 8}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 4.3\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{3, 9}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 2.2\"", StandardForm], StandardForm,
                   Editable -> True], Background -> GrayLevel[1], FontSlant -> 
                 Plain, StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{5, 6}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 2.2\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{5, 7}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] -1.7\"", StandardForm], 
                  StandardForm, Editable -> True], Background -> GrayLevel[1],
                  FontSlant -> Plain, StripOnInput -> False], StripOnInput -> 
                False], TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{9, 10}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> -1.7\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{9, 11}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"= No\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{11, 12}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[NotEqual] No\"", StandardForm], StandardForm, 
                  Editable -> True], Background -> GrayLevel[1], FontSlant -> 
                 Plain, StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{11, 13}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 0.51\"", StandardForm], 
                  StandardForm, Editable -> True], Background -> GrayLevel[1],
                  FontSlant -> Plain, StripOnInput -> False], StripOnInput -> 
                False], TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{12, 14}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 0.51\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{12, 15}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] -5.9\"", StandardForm], 
                  StandardForm, Editable -> True], Background -> GrayLevel[1],
                  FontSlant -> Plain, StripOnInput -> False], StripOnInput -> 
                False], TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{13, 18}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> -5.9\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{13, 19}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"\[LessEqual] 0.52\"", StandardForm], 
                  StandardForm, Editable -> True], Background -> GrayLevel[1],
                  FontSlant -> Plain, StripOnInput -> False], StripOnInput -> 
                False], TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{15, 16}]}, 
      {Arrowheads[{{0.5, 0.5, 
          GraphicsBox[{
            GrayLevel[0], 
            InsetBox[
             BoxData[
              FormBox[
               StyleBox[
                StyleBox[
                 TagBox[
                  FormBox["\"> 0.52\"", StandardForm], StandardForm, Editable -> 
                  True], Background -> GrayLevel[1], FontSlant -> Plain, 
                 StripOnInput -> False], StripOnInput -> False], 
               TraditionalForm]], {0, 0}, 
             ImageScaled[{0.5, 0.5}], Automatic, None, Background -> 
             GrayLevel[1]]}]}, {0.021167650531286893`, 0.8}}], 
       ArrowBox[{15, 17}]}}, {InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.3810189364779717`", ",", "1.5325000000000002`", 
          ",", "\<\"realKeyRate\"\>", ",", "Number", ",", "31"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.21576155433883565`", ",", "0.019999999999999574`", 
          ",", "\<\"cpiExpAcceleration\"\>", ",", "Number", ",", "8"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.18385954407834715`", ",", "4.3`", ",", "\<\"realKeyRate\"\>", ",",
           "Number", ",", "23"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","0"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"4", "\<\"Hike\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.6931471805599453`", ",", "2.2064629431839613`", 
          ",", "\<\"usdrub3wChange\"\>", ",", "Number", ",", "4"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","1"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"2", "\<\"Hold\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","2"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"2", "\<\"Hike\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","3"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"6", "\<\"Hold\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"0.14970535808138635`", ",", 
          RowBox[{"-", "1.6800000000000017`"}], 
          ",", "\<\"cpiExpAcceleration\"\>", ",", "Number", ",", "17"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","4"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"4", "\<\"Cut\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.1516708087386961`", ",", "\<\"No\"\>", ",", "\<\"coreQ\"\>", ",", 
          "Symbol", ",", "13"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.3236423315082535`", ",", "0.5117609705669774`", 
          ",", "\<\"cpiMomentum\"\>", ",", "Number", ",", "8"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 12], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{"0.5004024235381879`", ",", 
          RowBox[{"-", "5.910759904004315`"}], ",", "\<\"usdrub3wChange\"\>", 
          ",", "Number", ",", "5"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 13], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","5"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"5", "\<\"Hold\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 14], InsetBox[
       FrameBox[
        RowBox[{"{", 
         RowBox[{
         "0.6365141682948128`", ",", "0.5199999999999978`", 
          ",", "\<\"cpiExpAcceleration\"\>", ",", "Number", ",", "3"}], "}"}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 15], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","6"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"1", "\<\"Hold\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 16], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","7"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"2", "\<\"Cut\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 17], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","8"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"1", "\<\"Hold\"\>"}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 18], InsetBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{"\"leaf \"","9"},
             "RowDefault"]},
           {
            TagBox[GridBox[{
               {"4", "\<\"Cut\"\>"}
              },
              AutoDelete->False,
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 19]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQokHCD0h/0QWsQBVR7OPwChBNDUC6DJc6DJw/gw
ANdvj6afAU2/PXb9DGjycP5+NHEG7Hxc4jA+hrn2ANs1GMQ=
     "]]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  ImageSize->{268.9333333333334, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{
  3.713695181098118*^9, 3.7136956552585287`*^9, 3.713695919252926*^9, 
   3.713696684709464*^9, 3.7136967956765594`*^9, {3.713696933034294*^9, 
   3.7136969457135615`*^9}, {3.713696983861376*^9, 
   3.713697021885178*^9}},ExpressionUUID->"805a03b0-d616-4a04-a634-\
a9196a858018"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Tie Breaker Tree", "Title",
 CellChangeTimes->{{3.7136744594617805`*^9, 3.7136745221836367`*^9}, {
  3.7137757952287827`*^9, 
  3.713775805745923*^9}},ExpressionUUID->"88916b8e-bce1-4dc7-af8b-\
6e224dad37fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fc", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sSample", "=", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eSample", "=", 
   RowBox[{"{", 
    RowBox[{"2017", ",", " ", "9", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713675125033452*^9, 
  3.7136752383461246`*^9}},ExpressionUUID->"983677a3-7352-4d62-9672-\
13dc71babcd8"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"Quiet", "[", 
   RowBox[{"<<", "Economica`"}], "]"}],
  FontFamily->"Consolas",
  FontSize->12,
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "dataDirectory", "=", 
    "\"\<G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\>\""}], ";"}],
  FontFamily->"Consolas",
  FontSize->12,
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "exportDirectory", "=", 
    "\"\<G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\\\\emf\>\""}],
    ";"}],
  FontFamily->"Consolas",
  FontSize->12,
  FontWeight->"Bold"]}], "Input",ExpressionUUID->"4f69dc25-8171-42b3-8ec1-\
d354557c3f47"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"bco", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
        "dataDirectory", " ", ",", 
         "\"\<models\\\\core\\\\monetarypolicyCART\>\"", ",", 
         "\"\<MonetaryPolicyMeetings.xlsx\>\""}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<Sheets\>\"", ",", "\"\<BloomCons\>\""}], "}"}]}], "]"}]}],
    ";"}],
  FontSize->12]], "Input",
 CellChangeTimes->{{3.7137757683666325`*^9, 
  3.7137757711046686`*^9}},ExpressionUUID->"13992351-53bf-43bd-aca0-\
f276f4522a2f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dtest", "=", 
   RowBox[{"bco", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"3", ";;"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dtest", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"(", 
    RowBox[{"ExcelDateToDateList", "/@", 
     RowBox[{"dtest", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtest", "=", 
   RowBox[{"SplitBy", "[", 
    RowBox[{"dtest", ",", "First"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7137760203007393`*^9, 3.7137760589482517`*^9}, {
  3.7137761002275915`*^9, 
  3.7137761048864527`*^9}},ExpressionUUID->"8c8acec5-079e-4bcd-b2e9-\
2c2239ef200b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"votesTally", "=", 
   RowBox[{"Tally", "/@", 
    RowBox[{"dtest", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713776149983263*^9, 
  3.7137761584641724`*^9}},ExpressionUUID->"ee7d23e2-1ef6-44c1-84c3-\
5b9474a3a73b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"votesMean", "=", 
   RowBox[{"Mean", "/@", 
    RowBox[{"dtest", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"votesMean", "=", 
   RowBox[{"Most", "@", "votesMean"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"votesMid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", "#", "]"}], "+", 
        RowBox[{"Min", "[", "#", "]"}]}], ")"}], "/", "2"}], "&"}], "/@", 
    RowBox[{"dtest", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"votesMid", "=", 
   RowBox[{"Most", "@", "votesMid"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7137765387307773`*^9, 3.7137766224954767`*^9}, {
  3.7137783479398932`*^9, 
  3.7137783632279897`*^9}},ExpressionUUID->"414c286c-bcc7-45be-a425-\
942970ba4618"],

Cell[CellGroupData[{

Cell[BoxData["votesMean"], "Input",ExpressionUUID->"2acc1e15-4ff9-47a4-b384-9639ead51303"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.055`", ",", "0.06979166666666671`", ",", "0.07043478260869569`", ",", 
   "0.075`", ",", "0.07489130434782605`", ",", "0.08201923076923077`", ",", 
   "0.08451612903225805`", ",", "0.11`", ",", "0.10492424242424245`", ",", 
   "0.16773437499999996`", ",", "0.14156250000000004`", ",", 
   "0.12749999999999997`", ",", "0.1146428571428572`", ",", 
   "0.11057142857142856`", ",", "0.10965277777777775`", ",", 
   "0.10743589743589742`", ",", "0.10805555555555553`", ",", "0.11`", ",", 
   "0.10916666666666669`", ",", "0.10926829268292684`", ",", 
   "0.1074418604651163`", ",", "0.10371794871794872`", ",", 
   "0.10059523809523815`", ",", "0.1`", ",", "0.09992857142857148`", ",", 
   "0.0995833333333334`", ",", "0.09914634146341468`", ",", 
   "0.09464285714285718`", ",", "0.08899999999999994`", ",", 
   "0.08907142857142852`", ",", "0.08587499999999998`"}], "}"}]], "Output",
 CellChangeTimes->{{3.713776118064226*^9, 3.7137761287123733`*^9}, 
   3.713776174222579*^9, 3.71377627140745*^9, 
   3.713776548932111*^9},ExpressionUUID->"ddb3a6d5-77b7-4cbb-bc8d-\
02704059608c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datesCons", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"Union", "@", "#"}]}], "&"}], "/@", 
   RowBox[{"dtest", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7137770864843397`*^9, 
  3.713777118569369*^9}},ExpressionUUID->"47f88cfc-c524-4283-8e0b-\
0f6e5f9319f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2014", ",", "2", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "3", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "4", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "6", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "7", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "9", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "10", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "12", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2014", ",", "12", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "1", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "3", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "4", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "6", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "7", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "9", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "10", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "12", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "1", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "3", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "4", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "6", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "7", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "10", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2016", ",", "12", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "3", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "4", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "6", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "7", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "9", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7137771033317595`*^9, 
  3.7137771190071745`*^9}},ExpressionUUID->"dc64d9e0-ce1b-4a54-a202-\
7687ab57d5ff"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"keyRateExExtraordinary", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"prtxt", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"3", ";;"}], ",", "6"}], "]"}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keyRateExExtraordinary", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"keyRateExExtraordinary", ",", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7137780714172354`*^9, 
  3.7137781593873096`*^9}},ExpressionUUID->"d2ea8fab-83d4-4391-8045-\
7bc067bf1869"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keyRateExExtraordinary", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.713778139556794*^9, 
  3.7137781419798565`*^9}},ExpressionUUID->"a2b81b1a-7251-48c8-a4d1-\
8f83c2821e18"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{{3.71377813748954*^9, 
  3.713778161458965*^9}},ExpressionUUID->"e478ec1b-dfca-40a5-a384-\
e788cd361004"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"votesMean", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.713778166819903*^9, 
  3.7137781685243473`*^9}},ExpressionUUID->"eb8e58f6-6607-413e-86e1-\
313eac890017"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{
  3.7137781688871565`*^9, {3.7137783402481427`*^9, 
   3.713778364913822*^9}},ExpressionUUID->"ca66bdc1-42d5-44ba-8c21-\
37637b3682ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"100", "*", "votesMean"}], "-", "keyRateExExtraordinary"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"100", "*", "votesMid"}], "-", "keyRateExExtraordinary"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "->", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", "0.1"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "0.1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", 
           RowBox[{"-", "0.1"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7137766303663793`*^9, 3.713776646898795*^9}, {
  3.7137783793631015`*^9, 3.7137784236703615`*^9}, {3.713778462083307*^9, 
  3.7137784709074774`*^9}, {3.713783006901902*^9, 3.7137830733859673`*^9}, {
  3.71378313915703*^9, 
  3.713783143769294*^9}},ExpressionUUID->"fee4fb36-4687-4055-a98f-\
4f5c7667ca9f"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBYD8QgGgI+2DOgAgeGgFAgmLofwuVwmDD73pdl5nehfAEH
VOUiDit0UhS5Ix9A5SUcGube6Jx746Q9dvMVHBg05ICgDiYONe8CVL+KQwOY
PgKVV3M48B8EzkP5Gg4Mip6TVDwXQdVrOTBcdpS94rgWKq/jwCB3vFDm+EKo
vJ7DAbbMCWyZMPMNHBr6Hlv0PT4B5Rui+cfIoSEE5P+tUHljhwahrdqBuzdB
+SYODhJfWGsdYe4xdWgAm38AKm/mwPC6ct7zynVQeXM08y0cGA6A3FsLVW/p
wBAEsm8plG/lcABkndBRqH5rh4btube35Z6G8m0cGmbPBIKdUPW2Dg21R8Nr
jm7fjz280cOXA8a3gdCY8Qmhn8DjE6refsFmyZSKNUwOZYYz8+X8jkLlFQjI
q8DiD8pXQ7NPA42vhcbXQXO/HhrfAI2PGZ+o8sZofBO4+yG0KZq8GZo8lvgE
gwOI+ETRb4Wm3hqmHh6fqPK2cPM49m2QN06VdjAAcRte72/Ifx8fsl0Gzp/F
dZrjym0FhwAw/4W9odefHiF7ZTj/0hkg6EHo1zMGgmKE/o/vgEBPEc6PKrno
Ki6rDOdD3EEo/xPiI9KTX6P+uroLYg4Htt3V8VdqxuBD1KGXH4jywm+X3GU5
JQWHjtUzOHsZD2DwIepxpzcucLCq4+RDAKJ8sX5zxO/NEVj67NmDzofQuNPr
bNXY74YfdXHyITSifOr0V9b5bqLnwASVR+dD1JOf3j91r7h287uxQ9sfpVWl
387ao/Mh6hDlm4VR472V3CYOUkWb4ztEz2LwIeoR+SWt3/bbjWRThwMzCw5x
qq/B4EPUESofCfHJz28bzyuaHqywdrjGeSz65vMNGHyIOkT5quoz8fyugzYO
e1o0P0Wa78DgQ9Qj8iuEpnV9KuNwQiK5x/DYB0T5i1KfKjl8ACX/+D/w/NAA
pkfrUwh/8NSnEFoGykeKTxR5JSj/12h9Cgbk16cAWNg7Cg==
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
      {RGBColor[
       0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
       Opacity[0.3], LineBox[{32, 67}], LineBox[{33, 68}], LineBox[{35, 74}], 
       LineBox[{37, 75}], LineBox[{41, 82}], LineBox[{44, 89}], 
       LineBox[{49, 98}], LineBox[{51, 104}], LineBox[{52, 105}], 
       LineBox[{57, 114}]}, 
      {RGBColor[
       0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
       Opacity[0.3], LineBox[{1, 7}], LineBox[{2, 9}], LineBox[{5, 71}], 
       LineBox[{10, 78}], LineBox[{11, 79}], LineBox[{13, 85}], 
       LineBox[{14, 86}], LineBox[{16, 92}], LineBox[{17, 93}], 
       LineBox[{18, 94}], LineBox[{19, 95}], LineBox[{21, 101}], 
       LineBox[{24, 108}], LineBox[{25, 109}], LineBox[{26, 110}], 
       LineBox[{27, 111}], LineBox[{29, 117}]}}, {{}, 
      {RGBColor[
       0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
       PointSize[0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 
        130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
        144, 145, 146}]}, 
      {RGBColor[0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
       PointSize[0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175}]}, {}}}], {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Epilog->{
    LineBox[{{1, 0.1}, {25, 0.1}}], 
    LineBox[{{1, -0.1}, {25, -0.1}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{453.54330708661416`, 340.1574803149606},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 29.}, {-0.8593750000000053, 0.7656250000000089}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
    GrayLevel[0]]]], "Output",
 CellChangeTimes->{{3.713776596059927*^9, 3.71377664959963*^9}, {
   3.7137783831941757`*^9, 3.7137784246687803`*^9}, {3.713778465814779*^9, 
   3.7137784715948906`*^9}, 3.7137830857365294`*^9, 
   3.713783144471303*^9},ExpressionUUID->"0dbcd075-7b22-431a-af39-\
cea5310d412c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hawkQ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"100", "*", "votesMean"}], "-", "keyRateExExtraordinary"}], 
    ")"}], "/.", 
   RowBox[{"x_Real", "\[RuleDelayed]", 
    RowBox[{"Which", "[", 
     RowBox[{
      RowBox[{"x", "\[LessEqual]", " ", 
       RowBox[{"-", "0.1"}]}], ",", "\"\<Hawk\>\"", ",", 
      RowBox[{
       RowBox[{"-", "0.1"}], "<", "x", "<", "0.1"}], ",", "\"\<InLine\>\"", 
      ",", 
      RowBox[{"x", "\[GreaterEqual]", "0.12"}], ",", "\"\<Dove\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.713778661028352*^9, 3.713778732181279*^9}, {
   3.713778803978216*^9, 3.713778805714839*^9}, 3.7137831109994583`*^9, {
   3.713783185578041*^9, 3.7137832476904516`*^9}, 3.7137836190445294`*^9, {
   3.7137836829387646`*^9, 
   3.713783686967616*^9}},ExpressionUUID->"8fce6412-30bb-4c25-bf58-\
e79224ff73b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"InLine\"\>", ",", "\<\"InLine\"\>", ",", "\<\"Hawk\"\>", 
   ",", "\<\"InLine\"\>", ",", "\<\"Hawk\"\>", ",", "\<\"Dove\"\>", 
   ",", "\<\"Hawk\"\>", ",", "\<\"InLine\"\>", ",", "\<\"Dove\"\>", 
   ",", "\<\"Dove\"\>", ",", "\<\"Dove\"\>", ",", "\<\"InLine\"\>", 
   ",", "\<\"InLine\"\>", ",", "\<\"InLine\"\>", ",", "\<\"Hawk\"\>", 
   ",", "\<\"Hawk\"\>", ",", "\<\"InLine\"\>", ",", "\<\"InLine\"\>", 
   ",", "\<\"InLine\"\>", ",", "\<\"Dove\"\>", ",", "\<\"Hawk\"\>", 
   ",", "\<\"InLine\"\>", ",", "\<\"InLine\"\>", ",", "\<\"InLine\"\>", 
   ",", "\<\"InLine\"\>", ",", "\<\"Dove\"\>", ",", "\<\"Dove\"\>", 
   ",", "\<\"Hawk\"\>", ",", "\<\"InLine\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.713778714619652*^9, 3.713778732712686*^9}, 
   3.713783111374863*^9, {3.7137832486696653`*^9, 3.7137832608642254`*^9}, 
   3.713783619652937*^9, 
   3.713783687608225*^9},ExpressionUUID->"18bdf6b5-3d1c-4a54-9e29-\
72440e57bb16"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7137786039888024`*^9, 3.713778612144108*^9}, 
   3.7137834172110624`*^9},ExpressionUUID->"8ca3ca28-b0eb-483b-ba3e-\
c0b45f57ff68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "inputExExtraordinary"}]], "Input",
 CellChangeTimes->{{3.7137787465890675`*^9, 
  3.7137787529347496`*^9}},ExpressionUUID->"56197820-71da-40e3-b233-\
b2dead04201b"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{
  3.7137787532945547`*^9},ExpressionUUID->"8bd824e2-4e31-4563-908b-\
5c3ffb4f1d93"]
}, Open  ]],

Cell[BoxData["input"], "Input",ExpressionUUID->"e1512b68-72e5-41cc-baaf-786efd0179d6"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<input.xlsx\>\""}], 
     "}"}], "]"}], ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{"data", ",", "colNames"}], "]"}]}], "]"}]], "Input",ExpressionUUID\
->"ae7b5ae6-677e-41c5-b8de-02863feab6f0"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"prepD", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<input.xlsx\>\""}],
         "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Sheets\>\"", ",", "\"\<Sheet1\>\""}], "}"}]}], "]"}]}], 
   ";"}],
  FontSize->12]], "Input",
 CellChangeTimes->{{3.713776814590386*^9, 
  3.71377684936464*^9}},ExpressionUUID->"fadb3250-231e-4ac7-92d9-\
80b4e640d9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prepDExExtra", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{"prepD", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.713776854831711*^9, 3.7137768737739596`*^9}, {
  3.713776914867295*^9, 3.7137769340029435`*^9}, {3.713776974867875*^9, 
  3.7137769869884343`*^9}, {3.7137770398401227`*^9, 
  3.7137770455567966`*^9}},ExpressionUUID->"2665c078-cb46-4c24-8799-\
da508b249e28"],

Cell[BoxData[
 TemplateBox[{
  "Drop","seqs",
   "\"Sequence specification (+n, -n, {+n}, {-n}, {m, n}, or {m, n, s}) \
expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Drop\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"usdrub3wChange\\\\\\\"\\\", \\\
\",\\\", \\\"\\\\\\\"cpiMomentum\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"cpiAcceleration\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"cpiExpLevel\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"cpiExpAcceleration\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"realKeyRate\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"OutputGap\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"coreQ\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"guidance\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Decision\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2.1334923927671223`\\\", \\\",\\\", \
\\\"0.5115150170487845`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.019154911602153546`\\\"}], \\\",\\\", \\\"13.`\\\", \\\",\\\", \
\\\"0.49777777777777743`\\\", \\\",\\\", \\\"0.5`\\\", \\\",\\\", \
\\\"\\\\\\\"Negative\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"No\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"NoGuidance\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Hold\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"28\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1.7124991751396923`\\\", \\\",\\\", \
\\\"0.19461828744572657`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.039092643038684954`\\\"}], \\\",\\\", \\\"10.3`\\\", \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.6999999999999993`\\\"}], \\\",\\\", \\\"5.25`\\\", \
\\\",\\\", \\\"\\\\\\\"Zero\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Yes\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"NoGuidance\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Cut\
\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\
\"-\\\", \\\"0.5517690139535847`\\\"}], \\\",\\\", \\\"0.31800350261079147`\\\
\", \\\",\\\", \\\"0.1233852151650649`\\\", \\\",\\\", \\\"10.3`\\\", \\\",\\\
\", \\\"0.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"\\\\\\\"Zero\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"No\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"NoGuidance\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Hold\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"3\\\", \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\).\"",2,62,8,20061296912540970407,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.713777042775961*^9, 
  3.7137770465240088`*^9}},ExpressionUUID->"cae3fba8-058b-4cc0-97d7-\
f1f952fd4f98"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.713779081785937*^9, 3.713779116808005*^9}, 
   3.713779383466642*^9, 
   3.7137794223109493`*^9},ExpressionUUID->"dbca12d5-94c5-4a63-87de-\
03be470472ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<inputHawkQ.xlsx\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Insert", "[", 
     RowBox[{
      RowBox[{"inputExExtraordinary", "//", "Transpose"}], ",", "hawkQ", ",", 
      "2"}], "]"}], "//", "Transpose"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7137794244179764`*^9, 
  3.7137794342689075`*^9}},ExpressionUUID->"98be17cb-0ddf-4ada-a743-\
dd494ee63f33"],

Cell[BoxData["\<\"G:\\\\Research\\\\Economy&strategy\\\\iav\\\\macrodata\\\\\
models\\\\core\\\\monetarypolicyCART\\\\inputHawkQ.xlsx\"\>"], "Output",
 CellChangeTimes->{3.7137791210904603`*^9, 3.7137791632918177`*^9, 
  3.713779349608139*^9, 
  3.7137794576984143`*^9},ExpressionUUID->"77eee709-9339-465f-a2ff-\
ebce1777d64c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prepDExExtra", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7137770001292048`*^9, 
  3.713777005239471*^9}},ExpressionUUID->"a455248f-82c7-4d24-aa7c-\
7706254611b9"],

Cell[BoxData["23"], "Output",
 CellChangeTimes->{
  3.7137770056792765`*^9},ExpressionUUID->"c4acae8b-5bde-4f08-89ff-\
5e8cfd2813e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit", "Chapter",
 CellChangeTimes->{{3.7137832790196605`*^9, 
  3.71378327972567*^9}},ExpressionUUID->"c886c68b-ad21-421b-8480-\
3221bb502b52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"in", "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
        "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpAcceleration\>\"", ",", 
        "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", "\"\<guidance\>\""}], 
       "}"}]}], ")"}], "\[Transpose]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7137835344256153`*^9, 
  3.713783546719376*^9}},ExpressionUUID->"97c5a871-2fe5-4d62-b0a2-\
00c1e61a2ea5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputExExtraordinary", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"input", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputExExtraordinary", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"inputExExtraordinary", ",", 
     RowBox[{"{", "9", "}"}]}], "]"}]}], ";"}]}], "Input",ExpressionUUID->\
"e76323b9-afac-4c40-bf0f-517b1c6e79c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputSurprise", "=", "inputExExtraordinary"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputSurprise", "=", "hawkQ"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainSet", "=", 
   RowBox[{"Rule", "@@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"inputSurprise", ",", "outputSurprise"}], "}"}], 
      "\[Transpose]"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713689931902258*^9, 3.7136899389879665`*^9}, {
  3.71368997823289*^9, 3.7136900764447107`*^9}, {3.713779960600025*^9, 
  3.713779999141343*^9}},ExpressionUUID->"2f5667b8-dc3c-49b2-b303-\
0a06fdd957c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "50"}], ",", 
       RowBox[{"\"\<LeafSize\>\"", "\[Rule]", "5"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "=", 
  RowBox[{"Classify", "[", "trainSet", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainSet", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.713690097950861*^9, 3.7136901009901648`*^9}, {
  3.713690958919345*^9, 3.7136909774421177`*^9}, {3.7136924219242935`*^9, 
  3.7136924268079967`*^9}, {3.7137800080836596`*^9, 
  3.713780010244488*^9}},ExpressionUUID->"f6f2dc67-558a-4104-8f4b-\
4c7c6e297fbe"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["29", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.7137800403198843`*^9, 3.7137832890181913`*^9, 3.713783426993789*^9, 
   3.713783554336281*^9, 3.7137836284326525`*^9, 
   3.713785011726815*^9},ExpressionUUID->"cb221519-5cdd-492e-a161-\
da9d231df3b8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["29", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.7137800403198843`*^9, 3.7137832890181913`*^9, 3.713783426993789*^9, 
   3.713783554336281*^9, 3.7137836284326525`*^9, 
   3.7137850118984175`*^9},ExpressionUUID->"4e2607df-37b3-4f92-9b58-\
12ff1f4c1334"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["29", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.7137800403198843`*^9, 3.7137832890181913`*^9, 3.713783426993789*^9, 
   3.713783554336281*^9, 3.7137836284326525`*^9, 
   3.7137850126044264`*^9},ExpressionUUID->"24e86d36-44d8-4187-bc1f-\
e66d4b6fbdb5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\""}], "}"}], 
                    Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Dove\"", "\"Hawk\"", "\"InLine\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["29", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136901117102365`*^9, 3.7136905442170324`*^9, {3.713690948388117*^9, 
   3.7136909798579664`*^9}, {3.7136924335435357`*^9, 3.713692445725994*^9}, 
   3.7137800403198843`*^9, 3.7137832890181913`*^9, 3.713783426993789*^9, 
   3.713783554336281*^9, 3.7137836284326525`*^9, 
   3.713785013041232*^9},ExpressionUUID->"8ae9816c-f882-4179-8a14-\
71fc795d3353"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Chapter",
 CellChangeTimes->{{3.713690133422408*^9, 
  3.713690135222588*^9}},ExpressionUUID->"3dac5ada-5759-45d1-879e-\
068e79108775"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meetDateUpcoming", "=", 
   RowBox[{"{", 
    RowBox[{"2017", ",", "9", ",", "15"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713690658961926*^9, 
  3.7136906781557035`*^9}},ExpressionUUID->"343a68d2-e605-4447-a6b9-\
0919bdb797d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"week3Before", "=", 
  RowBox[{
   RowBox[{"DateObject", "[", "meetDateUpcoming", "]"}], "-", 
   RowBox[{"Quantity", "[", 
    RowBox[{"3", ",", "\"\<Weeks\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spotUSDRUB", "=", "57.5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7136907059754715`*^9, 3.713690747505107*^9}, {
  3.713690825002663*^9, 
  3.7136908324332094`*^9}},ExpressionUUID->"a1373676-dead-45a1-9a2f-\
f76b31fe9c5d"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Fri 25 Aug 2017\""}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2017", ",", "8", ",", "25"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", "4.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.7136907095019417`*^9, 3.7136907477235107`*^9, 
  3.7136908341260424`*^9, 
  3.713780100641075*^9},ExpressionUUID->"739ca414-7e2e-4d7a-a18c-\
c87c9a5c0ba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"usdrubChangeUpcoming", "=", 
  RowBox[{"100", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"spotUSDRUB", "/", 
      RowBox[{
       RowBox[{
       "dyFX", "[", 
        "\"\<Foreign Exchange Rate: Bank of Russia: US Dollar\>\"", "]"}], 
       "[", "week3Before", "]"}]}], "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.7136906486867175`*^9, {3.7136907537878294`*^9, 
   3.7136908353810673`*^9}},ExpressionUUID->"2e8668c8-0a34-41f6-96f5-\
80ebe214c609"],

Cell[BoxData[
 RowBox[{"-", "2.772587618807676`"}]], "Output",
 CellChangeTimes->{
  3.71369071519386*^9, {3.7136908079237237`*^9, 3.7136908356004715`*^9}, 
   3.7136919542497416`*^9, 
   3.7137801057245426`*^9},ExpressionUUID->"2a072257-3767-47c8-9e4a-\
be79a95e2627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"meetingPiMomentumUpcoming", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TimeSeriesMonthShift", "[", 
        RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2017", ",", "9", ",", "15"}], "}"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"meetingPiMomentumUpcoming", "=", 
  RowBox[{"First", "@", "meetingPiMomentumUpcoming"}]}]}], "Input",
 CellChangeTimes->{{3.713684517272787*^9, 3.7136846192826924`*^9}, {
  3.7136876169641385`*^9, 3.713687735231964*^9}, {3.7136904616337337`*^9, 
  3.7136904717697563`*^9}, {3.713690577237089*^9, 
  3.713690602530794*^9}},ExpressionUUID->"2433e2be-921d-49da-a837-\
4deb1cb3bec0"],

Cell[BoxData[
 RowBox[{"{", "0.15258571323408482`", "}"}]], "Output",
 CellChangeTimes->{
  3.7136844363706675`*^9, 3.713687754023843*^9, {3.71369048005112*^9, 
   3.713690489297511*^9}, {3.7136905878050985`*^9, 3.7136906111029644`*^9}, 
   3.7137801076181674`*^9},ExpressionUUID->"fe583b85-247b-4e5d-8a1b-\
126ee29bcf9f"],

Cell[BoxData["0.15258571323408482`"], "Output",
 CellChangeTimes->{
  3.7136844363706675`*^9, 3.713687754023843*^9, {3.71369048005112*^9, 
   3.713690489297511*^9}, {3.7136905878050985`*^9, 3.7136906111029644`*^9}, 
   3.7137801076181674`*^9},ExpressionUUID->"385d5f31-1102-4ea2-b469-\
9ec06f9ac694"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"meetingPiAccelerationUpcoming", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "@", "#"}], ">", "10"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "2"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "1"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}], "-", 
       RowBox[{
        RowBox[{"TimeSeriesMonthShift", "[", 
         RowBox[{"pimmsa3mma", ",", "3"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2017", ",", "9", ",", "15"}], "}"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"meetingPiAccelerationUpcoming", "=", 
  RowBox[{"First", "@", "meetingPiAccelerationUpcoming"}]}]}], "Input",
 CellChangeTimes->{{3.7136878356280026`*^9, 3.7136878604374833`*^9}, {
  3.713690493140587*^9, 3.7136904990673056`*^9}, {3.7136905759626617`*^9, 
  3.713690608620714*^9}},ExpressionUUID->"a2454c4e-866a-4672-b5f8-\
358e9f5451de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.11602287291470342`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713687875112951*^9, {3.7136905898371377`*^9, 3.713690609558732*^9}, 
   3.7137801092133884`*^9},ExpressionUUID->"57dad9ba-b7ed-48a2-9429-\
40454793fec5"],

Cell[BoxData[
 RowBox[{"-", "0.11602287291470342`"}]], "Output",
 CellChangeTimes->{
  3.713687875112951*^9, {3.7136905898371377`*^9, 3.713690609558732*^9}, 
   3.7137801092289886`*^9},ExpressionUUID->"974bfb28-a53e-4b03-b546-\
b7fa7152c003"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpLevelUpcoming", "=", 
  RowBox[{"First", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "@", "#"}], "\[GreaterEqual]", " ", "15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TimeSeriesMonthShift", "[", 
          RowBox[{
           RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
         "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TimeSeriesMonthShift", "[", 
          RowBox[{
           RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
         "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2017", ",", "9", ",", "15"}], "}"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.713688513458779*^9, 3.7136886283022623`*^9}, {
  3.713690279479275*^9, 3.713690320624496*^9}, {3.7136903785836487`*^9, 
  3.713690381876115*^9}},ExpressionUUID->"22366889-a174-4cf1-8210-\
8c99d51818d3"],

Cell[BoxData["9.5`"], "Output",
 CellChangeTimes->{3.71368861658409*^9, 3.7136886849149227`*^9, 
  3.713690321596715*^9, 3.7136903826731315`*^9, 
  3.7137801099309974`*^9},ExpressionUUID->"186b61df-efb0-4b6a-8395-\
605a88c3b5d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meetingPiExpAccelerationUpcoming", "=", 
  RowBox[{"First", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "@", "#"}], "\[GreaterEqual]", "15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "1"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "2"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}], "-", 
         RowBox[{
          RowBox[{"TimeSeriesMonthShift", "[", 
           RowBox[{
            RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "3"}], "]"}], 
          "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "}"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2017", ",", "9", ",", "15"}], "}"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7136886210865407`*^9, 3.713688662112643*^9}, {
  3.7136886965010815`*^9, 3.713688712018633*^9}, {3.713690330458692*^9, 
  3.713690368692052*^9}},ExpressionUUID->"5061141b-99c0-48d8-b8b0-\
8b9cd0011425"],

Cell[BoxData[
 RowBox[{"-", "1.1999999999999993`"}]], "Output",
 CellChangeTimes->{
  3.713688665757007*^9, {3.7136887153079615`*^9, 3.713688720181449*^9}, {
   3.7136903348193803`*^9, 3.713690369489668*^9}, 
   3.7137801114774175`*^9},ExpressionUUID->"b773291e-9d31-4030-b058-\
ed1d35102236"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "usdrubChangeUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiMomentumUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiAccelerationUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiExpAccelerationUpcoming", ",", "\[IndentingNewLine]", 
    "\"\<Zero\>\"", ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", 
    "\[IndentingNewLine]", "\"\<NoGuidance\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7136901402580914`*^9, 3.7136901899130564`*^9}, {
   3.7136902203872824`*^9, 3.7136902467118044`*^9}, {3.713690373166542*^9, 
   3.7136903856691914`*^9}, {3.7136906151598454`*^9, 
   3.7136906186919146`*^9}, {3.71369084162899*^9, 3.7136908471184998`*^9}, 
   3.7136919588112335`*^9, {3.713783465646901*^9, 3.7137834660057054`*^9}, {
   3.713783566439437*^9, 
   3.713783566829442*^9}},ExpressionUUID->"4e983d80-5f97-4f1f-8f95-\
8fda3f57b1d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.772587618807676`"}], ",", "0.15258571323408482`", ",", 
   RowBox[{"-", "0.11602287291470342`"}], ",", 
   RowBox[{"-", "1.1999999999999993`"}], ",", "\<\"Zero\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136908482771263`*^9, 3.7136919593278465`*^9, 3.713780112211627*^9, {
   3.713783440656367*^9, 3.7137834668549194`*^9}, 
   3.7137835672360477`*^9},ExpressionUUID->"d4c82ac4-151a-4d6d-ad41-\
5b25666bac99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", 
  RowBox[{"upcoming", ",", " ", "\"\<Probabilities\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.713690879301944*^9, 3.7136908817379923`*^9}, {
  3.7136909875249186`*^9, 
  3.713690991042388*^9}},ExpressionUUID->"4649c501-63bd-4c75-a798-\
aedde37481bb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Dove\"\>", "\[Rule]", "0.37909498786523166`"}], ",", 
   RowBox[{"\<\"Hawk\"\>", "\[Rule]", "0.17475249166576556`"}], ",", 
   RowBox[{"\<\"InLine\"\>", "\[Rule]", "0.4461525204690029`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.713690882305603*^9, 3.713690991307593*^9, 3.713691961029483*^9, 
   3.713692456743035*^9, 3.713693776409933*^9, 3.713780116367281*^9, 
   3.713783307035225*^9, {3.713783454296548*^9, 3.7137834685291414`*^9}, {
   3.713783560536561*^9, 3.713783575718957*^9}, {3.7137836351349416`*^9, 
   3.713783641333623*^9}, 
   3.7137850191645117`*^9},ExpressionUUID->"931e2a92-d0be-4753-9db0-\
f141344be9d4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Dove\"\>", "\[Rule]", "0.2338801202786762`"}], ",", 
   RowBox[{"\<\"Hawk\"\>", "\[Rule]", "0.21014372057778818`"}], ",", 
   RowBox[{"\<\"InLine\"\>", "\[Rule]", "0.5559761591435357`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.713690882305603*^9, 3.713690991307593*^9, 3.713691961029483*^9, 
   3.713692456743035*^9, 3.713693776409933*^9, 3.713780116367281*^9, 
   3.713783307035225*^9, {3.713783454296548*^9, 3.7137834685291414`*^9}, {
   3.713783560536561*^9, 3.713783575718957*^9}, {3.7137836351349416`*^9, 
   3.713783641333623*^9}, 
   3.7137850192425127`*^9},ExpressionUUID->"268fa7cb-c147-4d2b-9904-\
e3cd4f9b3a9e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Dove\"\>", "\[Rule]", "0.29810336172567986`"}], ",", 
   RowBox[{"\<\"Hawk\"\>", "\[Rule]", "0.30655952862589203`"}], ",", 
   RowBox[{"\<\"InLine\"\>", "\[Rule]", "0.39533710964842805`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.713690882305603*^9, 3.713690991307593*^9, 3.713691961029483*^9, 
   3.713692456743035*^9, 3.713693776409933*^9, 3.713780116367281*^9, 
   3.713783307035225*^9, {3.713783454296548*^9, 3.7137834685291414`*^9}, {
   3.713783560536561*^9, 3.713783575718957*^9}, {3.7137836351349416`*^9, 
   3.713783641333623*^9}, 
   3.7137850193205137`*^9},ExpressionUUID->"e189ccbb-4d5c-4333-af7b-\
fcaeea9bba5e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Dove\"\>", "\[Rule]", "0.29810336172567986`"}], ",", 
   RowBox[{"\<\"Hawk\"\>", "\[Rule]", "0.30655952862589203`"}], ",", 
   RowBox[{"\<\"InLine\"\>", "\[Rule]", "0.39533710964842805`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.713690882305603*^9, 3.713690991307593*^9, 3.713691961029483*^9, 
   3.713692456743035*^9, 3.713693776409933*^9, 3.713780116367281*^9, 
   3.713783307035225*^9, {3.713783454296548*^9, 3.7137834685291414`*^9}, {
   3.713783560536561*^9, 3.713783575718957*^9}, {3.7137836351349416`*^9, 
   3.713783641333623*^9}, 
   3.713785019351714*^9},ExpressionUUID->"df6deae5-14ee-41a5-985e-\
40c583d4eede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cRandomForest", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", "upcoming", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", "upcoming", "]"}]}], "Input",
 CellChangeTimes->{{3.7136908979013166`*^9, 3.713690908607728*^9}, {
  3.7136909951586695`*^9, 
  3.7136910005571756`*^9}},ExpressionUUID->"497ea1f1-fe53-4eca-a382-\
431bc2869737"],

Cell[BoxData["\<\"InLine\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, 3.713780117228292*^9, 
   3.713783314706128*^9, 3.713783472068788*^9, {3.713783570080284*^9, 
   3.713783584744275*^9}, {3.7137836373651714`*^9, 3.7137836394897995`*^9}, {
   3.7137850236487694`*^9, 
   3.713785027451619*^9}},ExpressionUUID->"04f3fe47-c6aa-47d0-b83e-\
84380afe858a"],

Cell[BoxData["\<\"InLine\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, 3.713780117228292*^9, 
   3.713783314706128*^9, 3.713783472068788*^9, {3.713783570080284*^9, 
   3.713783584744275*^9}, {3.7137836373651714`*^9, 3.7137836394897995`*^9}, {
   3.7137850236487694`*^9, 
   3.71378502751402*^9}},ExpressionUUID->"04f4df6a-643d-4c5a-8a3c-\
b30bc47b1ff9"],

Cell[BoxData["\<\"InLine\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, 3.713780117228292*^9, 
   3.713783314706128*^9, 3.713783472068788*^9, {3.713783570080284*^9, 
   3.713783584744275*^9}, {3.7137836373651714`*^9, 3.7137836394897995`*^9}, {
   3.7137850236487694`*^9, 
   3.713785027592021*^9}},ExpressionUUID->"d6666cdc-ba98-4bc6-99f0-\
ea439f070d68"],

Cell[BoxData["\<\"InLine\"\>"], "Output",
 CellChangeTimes->{{3.7136909060256777`*^9, 3.713690909296543*^9}, {
   3.713690998080327*^9, 3.7136910009917865`*^9}, 3.713691400906155*^9, 
   3.7136919647349586`*^9, 3.7136937716006393`*^9, 3.713780117228292*^9, 
   3.713783314706128*^9, 3.713783472068788*^9, {3.713783570080284*^9, 
   3.713783584744275*^9}, {3.7137836373651714`*^9, 3.7137836394897995`*^9}, {
   3.7137850236487694`*^9, 
   3.713785027607621*^9}},ExpressionUUID->"8fe3e44e-eebc-48c8-a5a8-\
220d43085bd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.7136910389851475`*^9, 3.7136910485109367`*^9}, 
   3.7136911105883455`*^9},ExpressionUUID->"f3f5e26f-6aae-4c63-b66a-\
2c0c68bc67ed"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Random forest\"\>"},
             {
              StyleBox["\<\"Number of classes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "9"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "31"},
             {
              StyleBox["\<\"Number of trees\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "50"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Random forest", "Number of classes" -> 3, "Number of features" -> 
   9, "Number of training examples" -> 31, "Number of trees" -> 
   50]]], "Output",
 CellChangeTimes->{3.713691049387554*^9, 
  3.7136911119011726`*^9},ExpressionUUID->"5ecc2382-1e7a-4c40-a487-\
81ae94cb0d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"c", ",", "trainSet", ",", "\"\<Accuracy\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.713691161950368*^9, 
  3.7136911920773687`*^9}},ExpressionUUID->"0c7595f2-3dad-45d5-be47-\
728f970b64db"],

Cell[BoxData["0.8064516129032258`"], "Output",
 CellChangeTimes->{
  3.7136911923581743`*^9},ExpressionUUID->"1610580e-4484-46ac-af5d-\
96d241740ad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"output", ",", 
     RowBox[{"c", "/@", "input"}]}], "}"}], "\[Transpose]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7136914115321636`*^9, 
  3.7136914249696274`*^9}},ExpressionUUID->"580dccb0-2feb-43d1-8107-\
4d8a0e0fab95"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Hike\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Cut\"\>", "\<\"Cut\"\>"},
    {"\<\"Hold\"\>", "\<\"Hold\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.713691426716861*^9, 
  3.713692465131607*^9},ExpressionUUID->"c0a73b8a-c0c8-4dc4-aaca-\
9240727a0ce6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["spotUSDRUB"], "Input",ExpressionUUID->"8ca62d24-9ad4-4be4-b32b-c26c9750f3fb"],

Cell[BoxData["57.5`"], "Output",
 CellChangeTimes->{
  3.713691931126479*^9},ExpressionUUID->"2492abc7-f3af-4a45-b1cd-\
70c3bf9fdc0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "meetingPiAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpLevelUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",ExpressionUUID->"722bc0f1-816c-\
4298-ac98-ae961762bf78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"57.5`", ",", "0.15258571323408482`", ",", 
   RowBox[{"-", "0.11602287291470342`"}], ",", "9.5`", ",", 
   RowBox[{"-", "1.1999999999999993`"}], ",", "5.`", ",", "\<\"Zero\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7137820850168066`*^9},ExpressionUUID->"9665615b-0627-408a-a585-\
c7c96242df12"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"in", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
    "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
    "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
    "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", "\"\<guidance\>\""}], 
   "}"}]}]], "Input",ExpressionUUID->"80a73561-ae4c-40f9-a048-ea17ee2e1666"],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.713689971446212*^9},ExpressionUUID->"ba1d1e9d-366e-4ced-ba1d-\
2bfa84ac05be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"usdrub3wChange\"\>", ",", "\<\"Decision\"\>", 
   ",", "\<\"cpiMomentum\"\>", ",", "\<\"cpiAcceleration\"\>", 
   ",", "\<\"cpiExpLevel\"\>", ",", "\<\"cpiExpAcceleration\"\>", 
   ",", "\<\"realKeyRate\"\>", ",", "\<\"OutputGap\"\>", ",", "\<\"coreQ\"\>",
    ",", "\<\"guidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713689939588026*^9},ExpressionUUID->"b1aac7bd-d36c-4874-8b95-\
4ba89664b263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesMonthShift", "[", 
  RowBox[{
   RowBox[{"piExp", "[", "\"\<median\>\"", "]"}], ",", "3"}], "]"}]], "Input",\
ExpressionUUID->"805a8233-b5cb-4b63-b804-4d35b16bdfbf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwdUXkw3HccXUcSKqEU0TpKGrt22f5+CEvtyudTdDpIokrrqG2cRTpTRyoY
RyURRCc0xGx03IRxNKrIdDJrk5BpsE3d0eg2JSON7xcbNdrGmuimb+bN++/N
OxzivghN1OVwOGItX2pyTb79+PYKNo6vtiuVLpCdmOr7QofgzXnTyw3XBdCd
Np6gNCRo1LiyR/TUGRR/Mg6WpgTzy/fOfWTLgO2ryf4+VgRLNT9G5q+w0Hja
PE3zJsHywNkHz0RuoBsw4iriEfw0pb6JyXeD0g+eag4wBCUOxWsZNm4QafKH
yy1PguZVJ1Q5clcw9F7YXJMQZAfGfl1KcAVVfeDwYADBxtaKjil9V6hMkztp
ggkuS1i/9RoWKjb1tt4II9jpkeDzt4SFvr6h0dlogtsj1LpaxUC/Ku/I/niC
PY/+DfyrioGH/tfbVakE44+tfS0rZSA4ZqDoYgZBcttrIzOfgbrFoY2+HG2f
Nt8qk0wGzJrFqVlFBD9XzNiPfcZA0n159kApwaT/wcDvnj9UVFQStJKcuapq
YaApJO9AgIxgWJFF2VAuC35z7ztkNRDcP/mk8n4tC6/IyiTvtmv99lmM73i/
Db13f1aXfUcwPPQ1w2w7Z2hqXTboGSBonNRVvTTFg0FFuuCUnODja4k54+5c
6HxPZ6l1hKDp9mx6dg0Xhg33NOcoCXKLby7UNvGAV/DbPf4MwR0vn31HA/mQ
Kr1RHL5AMODkZWbejA+TuXuDbB4TzDTVdFsW8eCgXuQ1KSHoEMXGOJvxoENc
mJy3QfC5+stCqTkfpH2vu3s8JygOap6TzHNhs+pGVQqH4rxcd5cO86D7+9Ed
LwOKHxfNHjp/WwD+Po8050wo2tRtid5RCICXdS+205Ji74vCM3ecWGDWHCdO
2VG8Mjh7vEX7t8XEhZkOR4oDFtNPppOFYK+OXvxKSLFm0bdrcNQFshT64Uc8
KOp7txlfuugCXZpeabyY4gPew29zlULQPz2ZJvSnGHbwzpV1lgVxxJZVZhDF
XyoiTkxMM3BrbZVXHUrRSCXsi7vEQrIi4mhIFEXVbtIzO38G1Ds/rZbEUlQX
pcj0jwmhNqurOSqFoj33bMt5cIZvmuIUBukUp5Qhhz485wJJXrYZbtkU3aMa
2zr9+HDSKFj4T6E2T6+xYF0qAO/AggJRCcVlUVX0rr8zeN49PG9WQdGDtR4b
k/OgYKNeNlpDsVzUHxARzYe2Mhu1po5imVGJ+SdCLmzEGB8fbaNYe/UlDoN1
vZ6fWY92D6cLsfUGjiBLOduQ3k9xUYfjw+G8Bf8B4zXGxg==
               "]]},
             Annotation[#, "Charting`Private`Tag$443018#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.4869312*^9, 9.500001758337875},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3486931200, 3718483200}, {9.500001758337875, 
            18.489008046316822`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 2010\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Nov 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["57",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[
             {RGBColor[
              0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804],
               AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwdUXkw3HccXUcSKqEU0TpKGrt22f5+CEvtyudTdDpIokrrqG2cRTpTRyoY
RyURRCc0xGx03IRxNKrIdDJrk5BpsE3d0eg2JSON7xcbNdrGmuimb+bN++/N
OxzivghN1OVwOGItX2pyTb79+PYKNo6vtiuVLpCdmOr7QofgzXnTyw3XBdCd
Np6gNCRo1LiyR/TUGRR/Mg6WpgTzy/fOfWTLgO2ryf4+VgRLNT9G5q+w0Hja
PE3zJsHywNkHz0RuoBsw4iriEfw0pb6JyXeD0g+eag4wBCUOxWsZNm4QafKH
yy1PguZVJ1Q5clcw9F7YXJMQZAfGfl1KcAVVfeDwYADBxtaKjil9V6hMkztp
ggkuS1i/9RoWKjb1tt4II9jpkeDzt4SFvr6h0dlogtsj1LpaxUC/Ku/I/niC
PY/+DfyrioGH/tfbVakE44+tfS0rZSA4ZqDoYgZBcttrIzOfgbrFoY2+HG2f
Nt8qk0wGzJrFqVlFBD9XzNiPfcZA0n159kApwaT/wcDvnj9UVFQStJKcuapq
YaApJO9AgIxgWJFF2VAuC35z7ztkNRDcP/mk8n4tC6/IyiTvtmv99lmM73i/
Db13f1aXfUcwPPQ1w2w7Z2hqXTboGSBonNRVvTTFg0FFuuCUnODja4k54+5c
6HxPZ6l1hKDp9mx6dg0Xhg33NOcoCXKLby7UNvGAV/DbPf4MwR0vn31HA/mQ
Kr1RHL5AMODkZWbejA+TuXuDbB4TzDTVdFsW8eCgXuQ1KSHoEMXGOJvxoENc
mJy3QfC5+stCqTkfpH2vu3s8JygOap6TzHNhs+pGVQqH4rxcd5cO86D7+9Ed
LwOKHxfNHjp/WwD+Po8050wo2tRtid5RCICXdS+205Ji74vCM3ecWGDWHCdO
2VG8Mjh7vEX7t8XEhZkOR4oDFtNPppOFYK+OXvxKSLFm0bdrcNQFshT64Uc8
KOp7txlfuugCXZpeabyY4gPew29zlULQPz2ZJvSnGHbwzpV1lgVxxJZVZhDF
XyoiTkxMM3BrbZVXHUrRSCXsi7vEQrIi4mhIFEXVbtIzO38G1Ds/rZbEUlQX
pcj0jwmhNqurOSqFoj33bMt5cIZvmuIUBukUp5Qhhz485wJJXrYZbtkU3aMa
2zr9+HDSKFj4T6E2T6+xYF0qAO/AggJRCcVlUVX0rr8zeN49PG9WQdGDtR4b
k/OgYKNeNlpDsVzUHxARzYe2Mhu1po5imVGJ+SdCLmzEGB8fbaNYe/UlDoN1
vZ6fWY92D6cLsfUGjiBLOduQ3k9xUYfjw+G8Bf8B4zXGxg==
               "]]},
             Annotation[#, "Charting`Private`Tag$443018#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.4869312*^9, 9.500001758337875},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3486931200, 3718483200}, {9.500001758337875, 
            18.489008046316822`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
            GrayLevel[0]]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Jul 2010\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"01 Nov 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["57",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2419200",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJxdUTsOwjAUC9yCEQH5NC15LRPbOwATMxMSrByFuVyDG8AKx2GnzXNSKZYi
y3aSOq/L8+14mSulZsPaD+v7GVGzsONdBAk/O1YRLV8jiB/9iAA9sewj6Ba6
AWvcr6Er3GOgDc45sEGui30O2qNnBT/AR79FV/SqkdfQW/Tx8FNPEv9A/P7Z
0/0V8rtlHlS8u0GPxB7+9D3xXfaj3Vtojx42zyH9B8nTvNIc1pkl3yBf8R9E
cpm9
    "], CompressedData["
1:eJxdkjtOA2EMhINExS24gd+PI0Si4ggUSFQU4f7CG5KMxRar/eR//Y9n/Prx
/f75dDqdLs/zevu6/Pyj3nR+mQ+1ilYWohu2SBXd0YnYyYDZEsD55sBh5ahV
1XY7et3Qi7RQDVVa1fkzPB6YTGWoZpMqqqO5BK3aynA4SEJoYVZjwOBRyQH0
QxOwnCEyhJlpoWZBc0horYukyRsXKacmLlLjGRIYNf4B2ySBJkxwI8yiVyv7
a3zHCckNIo9UYqGrLHPGSl4yYiQvGaGS8HkSyVwTRZkvGZOR9UJNweZETq9l
7ITQy9jiOQAZZRLL2MnXlhvVs0vAWVFeMib9Xm50Kq+Jeh5MlCRevtCv6/zA
vBbvOBkojE1WYSngLLQtnH09Jv4F+jiObg==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713688572714704*^9, 3.713688597038136*^9}, {
  3.7136886394273744`*^9, 
  3.7136886576922007`*^9}},ExpressionUUID->"50f55d7c-2377-408e-bd3c-\
c3c83e4d3f08"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"dataDirectory", " ", ",", "\"\<.xlsx\>\""}], "}"}], "]"}], 
      ",", "\"\<\>\""}], "]"}]}], ";"}],
  FontSize->12]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.6496418367386556`*^9, 3.6496418591478963`*^9}, 
   3.671512840376979*^9, {3.6715130329649115`*^9, 3.671513045424952*^9}, 
   3.689077271856621*^9, {3.6890773134573603`*^9, 3.689077318527426*^9}, {
   3.6913874310351887`*^9, 3.6913874313432198`*^9}, 3.6914762854514203`*^9, 
   3.6914766302598977`*^9, {3.6914777256924934`*^9, 3.691477986620202*^9}, 
   3.6914782203278465`*^9, {3.691483402954894*^9, 3.6914834575014477`*^9}, {
   3.6914835482385845`*^9, 3.691483571105816*^9}, 3.691496213477739*^9, 
   3.691496294428936*^9, {3.6917492870895433`*^9, 3.691749287947549*^9}, 
   3.691836999013547*^9, 3.691837799934317*^9, 3.6984632190052743`*^9, 
   3.6984635819155617`*^9, 3.6984637643467655`*^9, {3.6993584749450526`*^9, 
   3.6993585072552834`*^9}, {3.6993585578783455`*^9, 3.699358562234781*^9}, 
   3.6993596563691835`*^9, 3.6993600064081836`*^9, {3.7059815694811816`*^9, 
   3.7059816207749786`*^9}, {3.705981732046895*^9, 3.705981737019972*^9}, {
   3.7059904341100903`*^9, 3.705990436378253*^9}, {3.7065011482447195`*^9, 
   3.7065011535019865`*^9}, {3.706501205372652*^9, 3.7065012075410795`*^9}, 
   3.708763295184205*^9, {3.7136125261305914`*^9, 3.71361259067667*^9}, {
   3.7136126410178566`*^9, 3.7136126443291206`*^9}, {3.713688266677103*^9, 
   3.7136882869281282`*^9}, {3.713688349836418*^9, 
   3.7136883689703317`*^9}},ExpressionUUID->"a116befa-4c4e-4909-961b-\
2300b6bbbb9a"],

Cell[BoxData["ClassifierFunction"], "Input",
 CellChangeTimes->{{3.713579325364976*^9, 
  3.713579333612935*^9}},ExpressionUUID->"46306d3f-f7dc-4be5-ad2d-\
28a15b828f34"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prtxt", "[", 
  RowBox[{"[", 
   RowBox[{";;", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136126574893785`*^9, 
  3.7136126609722457`*^9}},ExpressionUUID->"4e385809-19be-40bb-9577-\
1b13178c3d93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Date\"\>", ",", "\<\"14.02.2014\"\>", 
   ",", "\<\"03.03.2014\"\>", ",", "\<\"14.03.2014\"\>", 
   ",", "\<\"24.04.2014\"\>", ",", "\<\"16.06.2014\"\>", 
   ",", "\<\"25.07.2017\"\>", ",", "\<\"12.09.2014\"\>", 
   ",", "\<\"31.10.2014\"\>", ",", "\<\"11.12.2014\"\>", 
   ",", "\<\"16.12.2014\"\>", ",", "\<\"30.01.2015\"\>", 
   ",", "\<\"13.03.2015\"\>", ",", "\<\"30.04.2015\"\>", 
   ",", "\<\"15.06.2015\"\>", ",", "\<\"31.07.2015\"\>", 
   ",", "\<\"11.09.2015\"\>", ",", "\<\"30.10.2015\"\>", 
   ",", "\<\"11.12.2015\"\>", ",", "\<\"29.01.2016\"\>", 
   ",", "\<\"18.03.2016\"\>", ",", "\<\"29.04.2016\"\>", 
   ",", "\<\"10.06.2016\"\>", ",", "\<\"29.07.2016\"\>", 
   ",", "\<\"16.09.2016\"\>", ",", "\<\"28.10.2016\"\>", 
   ",", "\<\"16.12.2016\"\>", ",", "\<\"03.02.2017\"\>", 
   ",", "\<\"24.03.2017\"\>", ",", "\<\"28.04.2017\"\>", 
   ",", "\<\"16.06.2017\"\>", ",", "\<\"28.07.2017\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.713612662285671*^9},ExpressionUUID->"6530172d-4094-45a9-9b3e-\
e0f5e8a7b91b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"inp", "=", 
   RowBox[{"Rule", "@@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prtxt", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
            "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", 
             "12", ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"prtxt", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"3", ";;", 
            RowBox[{"-", "1"}]}], ",", "5"}], "]"}], "]"}]}], "}"}], 
      "\[Transpose]"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7136126975859776`*^9, 3.7136127420202503`*^9}, {
  3.7136127921300287`*^9, 
  3.71361294436961*^9}},ExpressionUUID->"b7e2b467-eddf-4686-93c8-\
8d08095659cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "50"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "3"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "=", 
  RowBox[{"Classify", "[", "inp", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.713612977445265*^9, 3.7136129814001417`*^9}, 
   3.713665056725222*^9, {3.713665089448494*^9, 3.713665106927242*^9}, {
   3.713665145446093*^9, 3.713665159961545*^9}, {3.713665734546624*^9, 
   3.7136657776844664`*^9}, {3.713666454446804*^9, 
   3.7136664745103664`*^9}},ExpressionUUID->"884f6216-d63a-4429-bfb8-\
c6b6cf5c0ecd"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.7136664752918124`*^9},ExpressionUUID->"b6561f94-480b-4abd-a14c-\
a879c198a8e7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.7136664764054766`*^9},ExpressionUUID->"a3442f4a-d070-4554-9b74-\
1a2c9ad430c4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713665094977047*^9, 3.713665161221671*^9}, 
   3.713665545740119*^9, {3.7136657514353533`*^9, 3.7136657781524754`*^9}, 
   3.7136664106498623`*^9, 
   3.713666477040716*^9},ExpressionUUID->"91704762-d0df-4d13-bc6d-\
de1b0b630bb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "c", "]"}]], "Input",ExpressionUUID->"338dbb95-7896-4895-8c60-86f1fb7d10a7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->Larger],
          FrameMargins->{{10, 0}, {-5, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.93119, 0.93119, 0.93119],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         FrameBox[
          TagBox[GridBox[{
             {
              StyleBox["\<\"Method\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "\<\"Random forest\"\>"},
             {
              StyleBox["\<\"Number of classes\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "3"},
             {
              StyleBox["\<\"Number of features\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "9"},
             {
              StyleBox["\<\"Number of training examples\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "30"},
             {
              StyleBox["\<\"Number of trees\"\>",
               StripOnInput->False,
               LineOpacity->0.8,
               FrontFaceOpacity->0.8,
               BackFaceOpacity->0.8,
               Opacity->0.8,
               FontWeight->"SemiBold",
               FontOpacity->0.8], "50"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             FontWeight -> "Light", FontFamily -> "Segoe UI", NumberMarks -> 
              False},
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[2.0999999999999996`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->Left,
         BaseStyle->{Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], 
          Offset[1.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Background->RGBColor[0.9802, 0.9802, 0.9802],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Association[
  "Method" -> "Random forest", "Number of classes" -> 3, "Number of features" -> 
   9, "Number of training examples" -> 30, "Number of trees" -> 
   50]]], "Output",
 CellChangeTimes->{
  3.7136129873372564`*^9, {3.7136650654050903`*^9, 3.713665109368486*^9}, {
   3.7136657558520412`*^9, 
   3.7136657803103175`*^9}},ExpressionUUID->"95776d7c-3b90-4c75-a118-\
a55fb51c2db5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", "inp"}]], "Input",
 CellChangeTimes->{{3.713664900980649*^9, 
  3.7136649125268035`*^9}},ExpressionUUID->"bb1a0840-61ea-4939-b7f7-\
249b9e8c07bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\<\"Yes\"\>", ",", "9.`", ",", "4.2`", ",", "4.`", 
    ",", "\<\"NoGuidance\"\>", ",", "\<\"\"\>", ",", "\<\"Yes\"\>", 
    ",", "\<\"Yes\"\>", ",", "\<\"Zero\"\>"}], "}"}], 
  "\[Rule]", "\<\"Hold\"\>"}]], "Output",
 CellChangeTimes->{3.7136649173522863`*^9, 3.7136651115157003`*^9, 
  3.713665764438608*^9},ExpressionUUID->"710b74ab-aa79-4c3f-9f20-\
f3ff1eb29e8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prtxt", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", 
      "13", ",", "22"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7136652114056883`*^9, 
  3.713665214444992*^9}},ExpressionUUID->"b3cda89d-8f6f-4002-af57-\
110ee06e085e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"No\"\>", ",", "9.`", ",", "4.4`", ",", "4.`", 
   ",", "\<\"NoGuidance\"\>", ",", "\<\"\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"Zero\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.713665112442793*^9, 3.7136652147280207`*^9, 
  3.7136657657374334`*^9},ExpressionUUID->"6f61d273-3be2-4c75-a2ab-\
dee2cd0acf10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "@", 
  RowBox[{"prtxt", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",",
        "13", ",", "22"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7136649774602966`*^9, 
  3.713664986805231*^9}},ExpressionUUID->"7ac36ce4-b816-49ce-b48e-\
26d060fce7bb"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{
  3.7136651751880674`*^9, {3.7136655484063854`*^9, 3.7136655510026445`*^9}, {
   3.7136664294047537`*^9, 
   3.7136664319255*^9}},ExpressionUUID->"9c7ec43a-59bf-46ba-b201-\
6e6899814311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cAuto", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"cLogi", "[", 
  RowBox[{
   RowBox[{"prtxt", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", 
        ",", "13", ",", "22"}], "}"}]}], "]"}], "]"}], ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.7136655828118258`*^9, 3.7136656164381876`*^9}, {
  3.7136664813517666`*^9, 
  3.713666485421002*^9}},ExpressionUUID->"a453a067-c416-4da6-b327-\
b2231bad9c0e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.40417177518224745`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.1426434113643028`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.45318481345344974`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666485920231*^9},ExpressionUUID->"57a91829-6984-4afe-ae60-\
5d3e43b097d3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.3527592129337331`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.2525190033237341`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.3947217837425328`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666485935832*^9},ExpressionUUID->"17675525-4025-4ea0-a9cc-\
8bd1e6257753"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Cut\"\>", "\[Rule]", "0.3527592129337331`"}], ",", 
   RowBox[{"\<\"Hike\"\>", "\[Rule]", "0.2525190033237342`"}], ",", 
   RowBox[{"\<\"Hold\"\>", "\[Rule]", "0.39472178374253275`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7136655989724417`*^9, 3.71366561666121*^9}, {
   3.713665767567669*^9, 3.713665784280794*^9}, 3.7136659149718943`*^9, 
   3.713666435444703*^9, 
   3.713666486029437*^9},ExpressionUUID->"1c7b76ec-88f8-48d7-be01-\
d8d5fc972a08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cAuto", "@", 
  RowBox[{"prtxt", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",",
        "13", ",", "22"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.713665173274876*^9},ExpressionUUID->"2777fb7b-c5f3-455f-ba4e-\
717d433ca096"],

Cell[BoxData["\<\"Hold\"\>"], "Output",
 CellChangeTimes->{{3.713664991829733*^9, 3.713665009441494*^9}, 
   3.7136650679233418`*^9, {3.7136650986294117`*^9, 3.7136651236689157`*^9}, 
   3.7136651735609045`*^9, 
   3.7136655495555*^9},ExpressionUUID->"7e8b144c-65b1-4310-8627-4622122855b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "2"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7136665521425605`*^9, 3.713666556965547*^9}, 
   3.7136667353070555`*^9},ExpressionUUID->"7fcde774-a47a-47d3-b757-\
064f5e0cea7a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7136665574345655`*^9, 
  3.7136667357156715`*^9},ExpressionUUID->"6d318778-e760-4d18-90b5-\
09d651ffeb8b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c1Tree", ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.713666563351594*^9, 3.713666576294695*^9}, {
  3.7136667475189433`*^9, 
  3.7136667789919934`*^9}},ExpressionUUID->"49fc14ba-6f6d-4025-88be-\
0ab896e61563"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<Classes\>\"", ",", "\"\<ClassNumber\>\"", ",", "ClassPriors", ",", 
    "\"\<ExampleNumber\>\"", ",", "\"\<ExtractedFeatureNumber\>\"", ",", 
    "FeatureNames", ",", "\"\<FeatureNumber\>\"", ",", "FeatureTypes", ",", 
    "\"\<FunctionProperties\>\"", ",", "IndeterminateThreshold", ",", 
    "\"\<LeafSize\>\"", ",", "\"\<MaxTrainingMemory\>\"", ",", "Method", ",", 
    "\"\<MethodDescription\>\"", ",", "PerformanceGoal", ",", 
    "\"\<Properties\>\"", ",", "\"\<TrainingClassPriors\>\"", ",", 
    "\"\<TrainingTime\>\"", ",", "\"\<TreeNumber\>\"", ",", 
    "UtilityFunction"}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.7136667989463687`*^9, 3.7136667989463687`*^9}, 
   3.7136668516617594`*^9},ExpressionUUID->"28d03da2-c924-4552-b8ab-\
4325a9be3447"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", 
  RowBox[{"c1Tree", ",", "\"\<FunctionProperties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.713666563351594*^9, 3.713666576294695*^9}, {
  3.7136667475189433`*^9, 
  3.7136668525579834`*^9}},ExpressionUUID->"e62233d7-d9af-44bf-a817-\
bac4ec99ae57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Decision\"\>", ",", "\<\"ExpectedUtilities\"\>", 
   ",", "\<\"LogProbabilities\"\>", ",", "\<\"Probabilities\"\>", 
   ",", "\<\"Properties\"\>", ",", "\<\"TopProbabilities\"\>", 
   ",", "\<\"Votes\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136665710822926`*^9, 3.713666581757306*^9}, {
  3.7136667397506323`*^9, 
  3.713666852776389*^9}},ExpressionUUID->"cde9c4b6-3f1e-4d31-8755-\
0455e4becb52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"2", ",", "7", ",", "8", ",", "9", ",", "4", ",", "5"}], "}"}], 
  ",", 
  RowBox[{"{", 
   RowBox[{"12", ",", 
    RowBox[{"-", "1729382256910270464"}], ",", "3", ",", 
    RowBox[{"-", "2029109754222148610"}], ",", "1", ",", 
    RowBox[{"-", "1729382256910270464"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "3", ",", 
    RowBox[{"-", "1"}], ",", "5", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "3"}]}], "}"}], ",", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4", ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "1"}], ",", "6", ",", 
    RowBox[{"-", "1"}]}], "}"}]}]], "Input",ExpressionUUID->"38485d2d-a16d-\
4a7f-aa0b-bb16c5c48fc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"inp", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "3"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c1Tree", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c1Tree", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", "]"}], "//", 
  "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.713667511834092*^9, 3.713667551758069*^9}, {
  3.7136675817746577`*^9, 
  3.7136676908494196`*^9}},ExpressionUUID->"a91f9070-da72-40f1-a20c-\
a499de9cffac"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "9", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\""}], "}"}], Short[#, 10]& ]], 
                    Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Nominal", "Nominal", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal"}, 
                    10], "Tooltip"]& ], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"Cut\"", "\"Hike\"", "\"Hold\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["30", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.7136676965167427`*^9}},ExpressionUUID->"35f93506-12ff-46e7-b0f1-\
2d46bda9f330"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "6", ",", "5", ",", "8", ",", "1", ",", "3", ",", "9", ",", "2", ",", 
      "3", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1729382256910270464"}], ",", 
      RowBox[{"-", "1729382256910270464"}], ",", "2", ",", 
      RowBox[{"-", "1729382256910270464"}], ",", "832", ",", 
      RowBox[{"-", "5953516662348487683"}], ",", "1048576", ",", "8", ",", 
      RowBox[{"-", "6174427804945253377"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3", ",", "5", ",", "9", ",", "7", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "6", ",", 
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "1"}], ",", "8", ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "3"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.713667696532343*^9}},ExpressionUUID->"68da704b-01b6-4fc0-b25d-\
657bc1df47d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136676661733313`*^9, 
  3.713667696532343*^9}},ExpressionUUID->"94c5637e-ed5d-4af9-b920-\
44d8d9db47aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "\"\<A\>\""}], ",", 
     RowBox[{"2", "\[Rule]", "\"\<A\>\""}], ",", 
     RowBox[{"3.5", "\[Rule]", "\"\<B\>\""}], ",", 
     RowBox[{"4", "\[Rule]", "\"\<B\>\""}], ",", 
     RowBox[{"4.5", "\[Rule]", "\"\<B\>\""}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713670291350775*^9, 
  3.7136702955718565`*^9}},ExpressionUUID->"973d268d-4f0f-41af-93ca-\
83ddae548e1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Tree", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<RandomForest\>\"", ",", 
       RowBox[{"\"\<TreeNumber\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<VariableSampleSize\>\"", "\[Rule]", "1"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c1Tree", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c1Tree", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Trees\>\"", "]"}], "//", 
  "Dimensions"}]}], "Input",
 CellChangeTimes->{{3.7136677546376953`*^9, 
  3.713667759230184*^9}},ExpressionUUID->"4d5c5673-f401-45b9-8380-\
2c3c03e4563e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 3.7136678296873684`*^9}, {
  3.7136702821869965`*^9, 
  3.713670285392059*^9}},ExpressionUUID->"c2fcb8da-c2b5-4961-bdc4-\
cca6816718ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcomingXY", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "XXX", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",", 
    "\[IndentingNewLine]", "YYY", ",", "\[IndentingNewLine]", 
    "meetingPiExpLevelUpcoming", ",", "\[IndentingNewLine]", 
    "meetingPiExpAccelerationUpcoming", ",", "\[IndentingNewLine]", "5.0", 
    ",", "\[IndentingNewLine]", "\"\<Zero\>\"", ",", "\[IndentingNewLine]", 
    "\"\<Yes\>\"", ",", "\[IndentingNewLine]", "\"\<NoGuidance\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.71369205615333*^9, 3.713692056309333*^9}, {
   3.713692133066923*^9, 3.713692141812703*^9}, 
   3.713692648722186*^9},ExpressionUUID->"4adc42dd-59a9-48f6-a9dc-\
0312acaab9ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"XXX", ",", "0.15258571323408482`", ",", "YYY", ",", "9.5`", ",", 
   RowBox[{"-", "1.1999999999999993`"}], ",", "5.`", ",", "\<\"Zero\"\>", 
   ",", "\<\"Yes\"\>", ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 3.7136678296873684`*^9}, {
   3.7136702821869965`*^9, 3.7136702854076595`*^9}, 3.713692057455761*^9, 
   3.7136921720769405`*^9, 
   3.7136929654955206`*^9},ExpressionUUID->"b6e60830-2574-4d92-888f-\
69e89698a6b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"in", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
    "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
    "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
    "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", "\"\<guidance\>\""}], 
   "}"}]}]], "Input",ExpressionUUID->"016fe1a8-0a9d-4717-a538-d8830335a99a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<usdrub3wChange\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<usdrub3wChange\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 
  3.713692254495117*^9}},ExpressionUUID->"034f0aba-6437-4cea-8c56-\
1eeed661167f"],

Cell[BoxData["2.9403248577675676`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 
  3.7136922546979213`*^9}},ExpressionUUID->"bb2f822d-1362-4fc0-8c8d-\
334bc6fec069"],

Cell[BoxData["6.767784936275289`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 
  3.713692254713522*^9}},ExpressionUUID->"6213d1dd-c708-49fb-95c5-\
084331baf987"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136923054137316`*^9, 
  3.713692306122746*^9}},ExpressionUUID->"0c34febc-7856-44e8-ac23-\
46b4d2cd9cb9"],

Cell[BoxData[
 RowBox[{"-", "0.005602073853649224`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9},ExpressionUUID->"f2b5852a-d32b-4637-87ec-\
e8a0cee3f9e7"],

Cell[BoxData["1.1707418557281337`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9},ExpressionUUID->"fd86b751-f263-4e15-8d3f-\
02cec2134664"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"upcomingXY", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", "\"\<Cut\>\""}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"XXX", ",", 
     RowBox[{"2.9403248577675676", "+", 
      RowBox[{"2.", "*", "6.767784936275289"}]}], ",", 
     RowBox[{"2.9403248577675676", "-", 
      RowBox[{"2.", "*", "6.767784936275289"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"YYY", ",", 
     RowBox[{
      RowBox[{"-", "0.005602073853649224"}], "+", 
      RowBox[{"2.", "*", "1.170741855728133"}]}], ",", 
     RowBox[{
      RowBox[{"-", "0.005602073853649224"}], "-", 
      RowBox[{"2.", "*", "1.1707418557281337"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", "z", 
         "]"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Contours", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"22", "/", "1.5"}], ",", 
      RowBox[{"FontName", "\[Rule]", "\"\<Arial\>\""}], ",", "Black"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"VTBTextStyle", "@", "\"\<USDRUB, % 3w chng\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          RowBox[{"-", "2.2"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"VTBTextStyle", "@", "\"\<CPI\\nacceleration\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "6.5"}], ",", "2"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ExportEMF", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"exportDirectory", ",", "\"\<cpi.weeklydecomp\>\""}], "}"}], 
    "]"}], ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.713691848487169*^9, 3.713691898074406*^9}, {
   3.7136921169241924`*^9, 3.713692119086035*^9}, {3.71369214914987*^9, 
   3.713692179489287*^9}, {3.7136922607078395`*^9, 3.713692356584693*^9}, {
   3.7136923920072403`*^9, 3.713692394107484*^9}, 3.7136929691349955`*^9, {
   3.713693009695488*^9, 3.713693010430702*^9}, {3.7141308879260635`*^9, 
   3.7141308891676874`*^9}, {3.714130937508367*^9, 3.7141309528301716`*^9}, {
   3.7141309891730523`*^9, 3.714130990284667*^9}, {3.7141311504555807`*^9, 
   3.7141312071013355`*^9}, {3.714131321204443*^9, 3.71413139083779*^9}, 
   3.7141314409084587`*^9, {3.7141315530853467`*^9, 
   3.714131553537752*^9}},ExpressionUUID->"b2fba9de-35c8-422f-971a-\
9a2083a66ca2"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxlnXdcj2v4xytZhZOsygqJiJAdvl/jmNmbzEgyDsfeO9uJbCWzJHsU4Txf
WcmKkIwjqchIe6p+fq9f7+v5vb7+Oq/367ru67k+9/d57vu6R06diX8Nmmxk
YGDQvZSBwf/+t4PjuIxbzerrbFZ6Jj2/a6T7s/rpVtcH1RH2LZX13T3JSvjc
y+2zRjapJOzZd3Sid1wp4TPBfc5EBX5X4LHxHrWGVE/RwCbPCsreX1daC6dZ
uBplLK8k/L7nvRUlnKoLu13ftXzjkjrCY5736Lh9ZH3hId9y8/e2sRPuY3wq
9FCVJsLWFc52eL6omTB6z3ePenDP0kD0wuiF0QujF0YvjF4YvTB6YfTC6IXR
C6MXRi+MXhi9S6y0LvNi8hT0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6MXRi+M
Xhi9OwNirEevyBS9MHph9MLohdELoxdGL4xeGL0wemH0wuiF0QujF0bv6ZZz
ErT1U0QvjF4YvTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7ZY3lkL67E0Qv
jF4YvTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7zGlfaPPbL0QvjF4YvTB6
YfTC6IXRC6MXRi+MXhi9MHph9MLohdG7MueNxjFtvuiF0QujF0YvjF4YvTB6
YfTC6IXRC6MXRi+MXhi9MHqvjt5vfajcCw16YfTC6IXRC6MXRi+MXhi9MHph
9MLohdELoxdGL4zek5Ws1q9tnyB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdEL
oxdGL4zehbmJBVeSf4heGL0wemH0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6P3
6I+RofMHZopeGL0wemH0wuiF0QujF0YvjF4YvTB6YfTC6IXRC6N300RdpldQ
nuiF0QujF0YvjF4YvTB6YfTC6IXRC6MXRi+MXhi9MHqveHjvfWFkoEUvjF4Y
vTB6YfTC6IXRC6MXRi+MXhi9MHph9MLohdHb5Fj34LizRqIXRi+MXhi9MHph
9MLohdELoxdGL4xeGL0wemH0wtoGparoOtfTeXw8NarfLENZP8DdzUruP2bs
oIVpD9P+79IzGriMNJT+g2mvz/rPZ72GHcaunz/xOp2+YNylnY3u3nnLI9ur
G+m67j6/0fangxbGHvkiZqafsZEWO0y++u15Pu31n0977PrrT+IRX//5xMs2
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
9Q7nyfr7Afr7J/r72YzPrN9g+k9/Pxs7z8eOP/vR2GHs7C9jh7GzX4wdxs7+
L3YYO/u52GHs7M9ih/n92P/k94L5fWD6l/7nfaK/8dffr2L+oT7m+2F+px7F
zveEnfoQO98Tduo17HxP2KmfsPM9YaeeoT/4fugPGH3651u8X7RHP+87duJh
5zwHO+8zdtYrvG/UR/r9iR092GnP+0h75lvqNex8L9iJj5342InP+0x85kvi
Yyc+duJjJz524vM9EJ/5jvjYiY+d+NiJj534fE/EZ74iPnbiYyc+duJjJz7f
I/GZb4iPnfjYiY+d+PrteR/53vheYfYziY+d9vD98sa7TA0qyPc5Z7VJxNx5
ZYXNN7Ye8nq0pXyfuhMt39aNbCT20qtdBx/W2P3mz/cK833CfI8w85l/Ut/e
iyqr96/Tb+yv5m1q9dv9ad3CG34F748pQ+f7FTWdYCXzw/Fzdfd/rG4hzP6q
S4MxPyfvCJL9VZj9VZj5M/5Cp6A7fcI0c299vv+2hulv94+xsz9wbmZ5p4yA
DZqw2MUvtjrE/XZ+GuuYNm+gzk3OP0z2bHEtbB8k+xfH8r53j21zTfO5ba5n
bpilep94ztI6Z5ZV++2+Mv6MNxVcvhemRZyUegwmf75n8pPz1uLnyX3e4ufB
tOd7pb2crxa3l/uxxe1h2vM90l7OU4vby33T4vYw7fneaC/np8Xt5f5mcXuY
9nxPtJfz0uL2ch+yuD1Me+ZP2sv5aHF7mPZw7ufCpJl9rLT9Nt0ZEjTdQAdf
Pmwzs8OKfAV+3PTfFnXrZwl/ujY8u/SDFGHDHXEL3nxIlO/ju0nm1HdNX8r3
kTjDekX5cjFKRsGRSvOa1tF2WFRmYezMaKVH5NEpfvdttNcaV/Qt8eGV4vZH
/XYhvRtq5zsn2i3++Fq53iw7ISq0jnxPW5pv6rf3anVhP0PbpxsKKgkPcjHp
c+RyaV2j5a6m0QV7lM+7NFnrWqQoJ1dEdrN9s1NZbO7ZtU2jJE2NC6eaHRjv
r5zo1DenY5OS2tMes+INo08pDqc3VL56xly7POq9e0HsMaXe8uiEB0bVtS6z
LA45fdumFCw3/3Z3upW2/rvEgleXjinRK/qm3Xz5az3+5OPGgdHnFHPjs1FX
2tfRpn4+PaCFnY9yfe2xBmFbrbWVn7u5WBsEKw45Z7el5dhovXKnbDDbdVQ5
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
pRfHDzA+kKnRboo0GBZwTrGdFKobtjZDE7s34+ymkjrlbKmIcau6FWrGd2y6
L7ztTuXK683O3afnal71X/ri0/wLSvDEhCEPV9rIfsLd7BWXQlLrCUd8tX1x
0aiucOiwLfPCt6us6+24+/YRa+HI948yz1ZS+URAkv2IXjWENy67NGPVlJrC
OyYbnV200VL4/D9tZg6YZqE+b8G6sz23Vhb26TsgZXZQFWHj7LZh1xp+1eR5
u+6p1mm3ZpxrgG7GoGhNl7Ud+imxgZr6q1pOr70vW2N1WVmW7HxR0yHxR0/L
4ama8aMSZvmeXqG50OtUpeVOOZpFgTsft4y/oGG+zhr9vvTCa8GaPA/jA8Mn
qfshVacYBmRGmks98eqCud+XfmbCjyNuj0mzryxcbsXFyQVnqqr2Q/eubA1V
12PlAs+ZTKyjzufsr/C+M19y/hz6bmzllhdri539Ffi554fwwyHq90K9w/fR
/ca89/Nbqetp6h+Y+ZPnMX/CNd7PPe1wq668v1NdO/k6P1Xrx/CK1yediKkr
7zP1Jey8bd27/hE1xT9ht8WNjYnVhY+nV3LunF1T/KlH4bFj64zXVqgq/jlu
lzSLG1UWDrl19nFzp6riT/0Kfy19ot/Z3uV0I25Z7yhyUZTJZ8p6OStldStX
nfn5acp1ZWFg28fhf5bXvbVt361t+GFleHxq0LbGsZrTp9ZtST8Sorgvfjpt
27QPmhXdCqcV3A1RvnTL0tWOua7J+7C5afjRHVL/zuif6N4w/qTSZ4/ZjhWv
DaX+ffPW07jEvJLCI/osCdg1zEC7O3VQzLqv25UaS6omNxxvpH0X7T2x3dqz
yv6PFxzin5ho70f4L55sEqp4Bpid3PK2rLbVt8kLZ/VVlClLr28JLCqvbZb9
bqrTo0NK6T9yHL7XLqcNXdPGr+PdC1Lf6N8XtffptHfhjlvKsh6PHSvrTGT/
0SSvcd2Kfuq/v4D/0DVHG/W96KXeXzkck7th13n1fkvj8/MmPjgn9Srz9/Rg
3a17RyrI+Rf7oXy//q0ONvd4VFH49rioFO1ZM+GruQtbGb8x/e0+Kr833yvn
EdQrMPUKzP4t9434vh75hT71qGko+8Hc/8F+6WEF92uxP2X/l/s4sh828oT9
Yc9ssXM/BntiYudUT/s0sXNfBXvRp+BpMceS5H4o7ytMf3BfFDuMnfuj2GHs
zo1dNxsbG8h+8c+S1jUe9ymhY7+I8wDqB5j6AaY95+EejZ+F1v55SO6jThlZ
ZrThsOOyn8x+WuK5S/bxS8vK+/DtTgddQ616P5XzAPxhxl9N4JDlm5/WlP3k
cgeXl0jpXVP2r6j3/sy0W/5n18NynhZ8dV7ugpfXhGm/e/rbZY/u1hUucJut
W7GmrsSjXiQeTDyY9pXdTsWXLmkr+9nb3tQIM11ZX/bPqDdf+3wOnxBzSurP
254ef9yK1AnTnvuzrC9h1pesx/n98vrU+V7xqqnuzbTW40ddfqgJuflDaZtZ
Rsd+CPsRRjtOfXT3eybnR25DTRv7OT+Q+Qf9bVaOLztyvZWsR7eEfjxavouF
er+o55U49y9W2mfbPLuU+euu5u9zHhq/BEvtZlvD2OPmDzW3ryxasGuvOr+x
P839H/I5uK7Rl5LVPgg/bnr08+cS8bJ/jj/7cU0q/bC6siRW9tOxs58t93OL
9+uGFeSv8Y2Plf291PSSG6Lnx0k+3Pfh+dOnZY9v/+CrsE/lWeNqXkmWfPAn
n/yca9u/OXyVfLCTj9zPLc7H5mN43tO9XyUfJeZZoWnj75IP93ukfxrGTQvR
pAu3Xlbra8PgDMkHf/KZ/Fe3tWZpaZIPdvKR+7nF+SyOj2i7xjZd8rn3/kn7
Qz/SJR/u8/D8tQd6BjzdlyNcI2WtbVcz9bwDf/LpE3dSaeScI/lgJx+5n1uc
z/jhzef6rsyRfE4Paj0/tFeu5MP9HZ7vUeFs3Nd0lY1cv04Y41Ek+eBPPi2G
Vszv5l8g+WAnH7mfW5xP94g9Z0NeF0g+3nd8zj8/Wij5cF+H5wfqTP4oEaBy
1pcTj50mqucx+Mv+eLzTAYeVhnI+I/9eQ3E+cj+3OJ89tVZkuu83lP1njc+q
+dmFhlrOR5nfOB+FZf9tXPlaNzcbyf5j0szxVi4TjMTuYGxrOzFI9Z8/xXnP
myEGwv5hjv+0b6XuZ38bnrtfu0I9L1rfYef41DlGwqUb+H1sfstQzmPJh/NY
mPqz3ILSUUvbGemoP0sbdVxY/raR2Fd/azzbv8BQ7OsnZD2oMkdtf7//oLja
AQZif3y7Rsd/ahiIfdDrJt2y4lR738muSZ4zDHX0H/M//Qej/1WfSwbuN4qk
vvrqMSrX171I7At3JZid/Kn6G7u0SPfpny88ydzw4yizAmmf2mFLntsx9Xyt
YamwdeFbi1R+E725l32hQv+RD/0Ho6/5khMe7y2KpH7fGb5xlEE1VX9tt1T/
FocLxd5wgKdLxS1q+yD7ThvrZ+SL/XLVqE7G7/PEfqNzpvOzaT/Ffmn4+D3p
KwvkfJ76iP6D0Z/2qu+dvq7qfnfJnPQbayrkiX1H3RUv/jmi+tdKehCyOjNT
eLnf/gBtsHoeYhpRX3HurZ5HdvYe3fuMY55wF/fZAxye5Uj/kQ/9B6OvT5ku
Dnf+zRV9nWudXpQYpepvl75pmkUP1d7lXe062c3V9neuRvc13Z8l9sdHp5f4
sjZT7NGPt1W8UjFbtcfnjo6xzZH+o36k/2D0m7h92uhYVj0fqLlu6+qplzLE
fvKsxf55PdOFW8+fvNT9QIrwbvuW021d1POiesOVNS1S1PPbUdaZFXbGZKic
aVKlysJ06T/yof9g9LnuepN+clKG6BsV1L3Tw0Wq/oErbZoVfktX7R5XE95G
q+3fdZ9tnqpJFfunZqXCnzRKEfuP0Q1f+oao9sTZ3tbKwzTpP+pr+g9Gf49E
Q98WY3+I/uk2/bYdvJQsds9Fk24Ev/0q7FeqcJXP6kTh8XMOTLAw/iLtF4ef
92pm/0n6K2FUzYD0wmT1fNy418VMp2/Sf+RD/8Hoy+n2ZVadKsmib07bWKML
tVX9z62WJt2r/13tn+TjQ9blq+2TA6qcOf3gk9gNlmospx1W99PNn61pVfra
Z7EXFYyM6JXwRfqP8yH6D0b/IoNWtoWB8aL/YKdV1TwM4sV+xXtP99UNPwgf
7TyxaqRPtLBNdd8X9/z+k/Yj7tx3zPnxSuk46/HLO46ldOxv+W4qHGvgX0LO
m25llk49drJI9r88r+58cex6dTlfd7wS2GRH1Zrq+XpK0Oepe2qJfVXqbq+l
HVV76NyldqOuq+fzZhmeLwZMrSv2CmZlLl63qyf2K14Fpe4uVe1bXL7u2/q4
vpzPl5vW3LHQWD2vtBtRoOyNshX7nZPrfB7sbiL781UmWvy7d7t6vvRwauMr
i9Y0FTvna9T3f8cHp0yNea9YR2kqttx5XvN2/rB37t9fCX9OyO2hHZcg559j
X96xvdbrV/3u7XTC2eCIZnO8d7emH6y0R8K+ffxHCdMEr3qxfcO/v+qNyI0B
/b9f0dyJm18jz8RC9qvk3/MtXr+42AWHbR1np/VqfNjyov1KzdTwHlXifr2/
lhvmeYf991zqr1n1N4yJXhQt9dY2bUXFqetL4fMuKTltN/2n6Z7fepl/jonU
6wdNuhuYJ5bVBh+K7Dtz2CvhTT+beZRa8Fa4ceryWb67Pgp3vtVv4sB1H6Re
e1+58fZSVaKlXqtqpNm3uN1rtb7c8NJ25pV3Ym90IKxWnvdrTcU9Yw659Vf/
PuHCzcaPV3T9VR/c+Ga1ut8L4bT3lX3Tlqv22LiUjd6WCcJbn77tOdowVvrD
M8ervvXsRNFfxXPosGcvEoQbVP4zfUBukvQH6wX02bW+7DvtfaJwpUkJQSE/
Pgvnvuzz6WmvZOE/AqvHrGv3TfR2nDVRCemUqN5vcJt+KzXyk9gL7dpumuaV
JHZXx6aezQs/SX+QD/rmduu6dt5oVe+9ocPvnJ6j2s+E3zAIf/RDeHRIoPLP
ZXV91ehH034nd6SI/tRW291K/Kly/s8yl8OGpUl/sF5BX375ziaR91OEU21G
Vsx6mio8aWw5hxIrMoT/6pHR4N38dNFbKqha9fmLUkTvYP8aNb27pIo9cf1q
gwF108S+b8uywhYjU6U/yAd9dapsKHheOkX4QU3zWqneqr3T8DtOhdpM4V39
nKrHXVLXd2YTd228/S1T9L86kX24pp/KH/76K+XtuWzpD9ZL6ItbGfDnl3pZ
wtF7FGcze9Xe5+nfHjVjcoWHho5yzY7MEb3fai4f5hWVKXrbWa4ZcdonS+wP
8z47eSzNFvuKoo/t+l7Mkv4gH/SV2ZDc9scEVe95r4UjTZNVe/2IxgssDuQJ
L7l5eNjPCup6Mud5/u3/uueLfqX62HdtcvOEw+NeNM42KZD+YL2Gvvvp5VcZ
L88X/tfEdkMjz5/CzbvFHG/jWCTcocnNgxUbF4re517x2082yRe9dbYked/L
yhf7pRn9F6x9+VPsU/7uPW9K+Z/SH+SDvh95Q+aWva7q3Vvi/c76PVW7accd
F1pkFglPbFlmR9Wp6nr2R73mK5cOMJD14uAeE8sF2qkc3ejgxQ0tDLX0B+tF
9I1wbD/2j+kGws863Z1QN0XlrW/8Uk50NxI2j6z0fVeYut58t+q4W1xXA1lv
ri0K+DTrhIHY+6aMGtnfQl2P+v894pXuooGW/iAf9H0Jfhdd0dRAWHut7ufa
A1V73vCf8/0DjISPDw5x2zvhl57i+oH7M9RX3OelvsFOfQPTnvs2+MP4w/hz
Hwd/WNZXxYw/93Xwh/GH8ec+D/4w/jD++n8/Qz007nLLWx+isuW80G7C+wSz
fpnCh1c+vzD9x0+pn+Tf6y3mJ5++LtxW2+RXPZcfsPxgmDLT9UDi1OlltBGZ
7odbP78mf29DPQRTD9XXnA4t0dlK9neXPe2+89T+2uJf+XOTLOfF6v1Hzq+w
w9iDV74oMzZIrb/KGcReGjLCRuycb0n9ZZlu18ZL/XueMgs2mRtlNJB67NhQ
s1L2WxoKr3fvtmj7jQbSnnoHtrrcrU2VxN//3of6LK5S04YzV6v/vjT3FbCb
zZzt67PSQeo7p/c57V85NRPWBf+35Mk6B/E/Ojba+81AEx313PZ6Y6627GGq
a5ZSyb652Xm53//pq9Hlomd35byfeo/7D5yXtOk6u3ebX99NixZOH89b3Jfx
jvvZfF8wdu5TY4exc18aO4yd+9DYYanniu87Y4exc58ZO4yd+8rYYf7+h/u+
sPRnQc0Wiy5mSr2cbZE1f9HMbOGFR3ucePehobbwberuU9/2aFraDZ414GAD
Yf5+hvNV/l4G5u9vOE/lfWY/vd+ktOWfXlhrazilmN8ID9SsKRN7sEELleX/
p1Fcbzs+ad4u+7WNdudce622zFHNYusdYxzMbMSf8xjWB5xv8DzOTzhv/B+n
AHFc
   "], {{
     {RGBColor[0.237736, 0.340215, 0.575113], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVD1rVFEQvfveuy8mEhtLFRRsbGxsViEoBis7f4K1aCO4TRCjvlVJ4RbZ
ItFuU6mxyIIJxIi7leLXpvVrtwjZIMu6gkg6z/GcgMUw8+bNzD0zc+49dvna
patJCOE6JIWsxxAacLyEHuH7N6QH2Y+fB+CvwF6AnimFcBIyBZmDtOCfta8B
+yFjYZ+ALMP+AanC/oW6bdijqO9TkJWg/0uOGUA/T1S3XJKPMfWScs9Dv86A
iTgznVOFfRx6IersRegBcvqQTciRPISv8B/Old+BrwuZhK+AvhFU467rMIc9
tSEX0ftBYkPNNZw3Dvt+KkxtxxWJ6l9B7qco/B+jeqDNPjaM+QFyb0adeSgX
RmLpGGvf9pOoWT+NOmPT/q1EWNl34TOJmXvbSbSHt5kwv8u0g3+xyP2cKj5m
6rVwv8RBPLfxfxu+2n87pp4P2tWs99vwOfSdRu4ffJ+BbjG3pBmTO+QQ98Dv
mud+FnFjOOccdwEZhz0N/T6KKx+gd53bc/7Ic5kxp4iHfOT+iLvwLqtBPbP3
N9BD6DVj+oa6q7C/m9s7rtm3zR2MEnGMXBtG9fMzaq6L7nnZPC17PsTCmRzN
hamVaaacM7GVzd+WcdaDctgL58x+yCPGNIO+C8f0ovB3o85oOq7uWuyXWHh3
uAv2N/DdYc/M3bujZd9TzntfKh43gXUM+kIuzHuzJNc5Q/KIu8pTxbE39ngr
aufkEDnNOQ09Z+Je8ky+pHoz7kAPzD1ysOa3o+PYefc0ZYz0r/uurWba1673
9MKYV4yFb9Okd0aedc3Vhmf1Kmo+G1Hza/jMiu8N+2X/rHkPtSZS1az43Ztw
fd7Fbd8LvjFbvoP8xxjuYjmKJ8+iuEKbHHkctetH5uCc+/8LTD/BPw==
         "]], PolygonBox[CompressedData["
1:eJwtkrkvRlEQxa/33n2IRKMloUMEQYHEXkoQf4JaKOlE7EtB6UNHYy1IfF9s
QSWx/QO2QkTE2mj9TuYVJzmz3Jk5c6ekb7B3IHDOVYEIzHvnpnC8gNLYua7Q
uRhkgxbsK+L1Wc7tEr+Df4NzeDu+T7inSD/8Hl8R+eO8G6ZuPnYx9iM5aXiT
cuCFseVOgjnsUW+5Q7wZgS+DBewy8pfgt956f4Bq3l7SrwCeDfbhbfhy6JmH
fRLZG71dxF6Fd4cWzwXt5M7imwhMs7SPhdZbGj7grbFpV/0D6h2SU0tsHfsU
vgVS8Ep8G/DZpLdqqnaaN7mB7VC77Iitt3xHxFa8zfYKyondYO8EtmPtWjvV
bi/w/cKPwVpgM2iWmaSWNEn7dDKr+jVjP5GTwf4CNdiN4C+wGc/of+JNy7s0
xKZBWpaxd+Db3vgbqCDeE5o21WiIrUeczJCJrId66Sa+vN2Qbkl/mPKmUVq1
s01vf6i/1E08eLuByWR/6vXjTfsPqCP3OLLZpVd/qZk1u3Z27W1GzaodHWHv
RbYP3UhnaDen29NOnuH/RP9f8w==
         "]]}]}, 
     {RGBColor[0.2778258652667209, 0.44985447074145357`, 0.3286638367750744], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVktIVVEUPXrvuURFhSiU9lEUjXhGRAY10D6DgqKkBg0aBDVoVoNKIsPM
/iZJzyRfFqRCRGk/TbP0qbOK/AwiiPJZk4iy7ygatVZ7iYPD2WefffZZZ++1
9715ew/uOJDunOvDCDDqsbiEcQby49C5GZArvHO7sXkfuueQi6HLwTqGeV7k
3GHoq7A+jL1DkGdBVxmYXIZ5EqM5zbmvmHMx8uSrBOcLISchj+NsD9YTmDNx
/gh01dhbALkCcg3k7MDuvYn1cW82tN0jH2+hewrMM+HnGORNmGPYG3E2F2MM
Qz7qDTOxN+osfWxONxueK9VZ2u/SnT04901vOYX5O9ZDsPvpzZ5vGYBdg7MY
XtFcL/mat7guxb050M3lmzDXSl+L9UVv710Y2V4mdJexzk+39xNHeWA2tKXN
HKxP6V7Op53pKccxrnq77zVis09v+gJdGXRFwTT2IsWCec1VjngvfbQoX9Q/
gJwRWZwZb97Pt9Q4ewffTAyLYNOGWHnaRMYlciqmt9DnbeAowHoc+lasmyC3
Mdbi3jr6wNwq/UNhoe2gMyzUBaHdlR0ZTuqZiw3i0nbc1ydubITuJe5dDflH
aBwlV896yxMxMJYdmNsxHikmLbqP8aJv8or5H8QYg/xOMf0Dn6O6nxjJJ9qO
0x57s7FeCwyxyN7UgXMp+eM51kE3xhDkXtXbp9DyUxhMc7NUfqnnvUnFJS4u
NCnXzPkrb+8Z8cZxcp1774WP2KiPif+MQUIxv6u4LAPeMtX7tsBiytj2A9v6
yHJ+Abo0b/4Db7Egtr+h5alV8WyTTLylkXH1fKA8yyYhHLz7BHydgHwSc1dg
crU3HMTzBP6XwE8K+sWYcyWfDqzeyMs62O9UPd2CPCmcaeJgVmB8v+GtZhPa
ZzwYJ9YQ64rnt4rvjd743qC6I6dKlIupmmQ+WB9zVO93vL2t3Rs/2pVr5jIl
ntyTDW3JiW5xjHOP5C3ibWdo9ZQvjvItlNkrUt58r0AMzgkzsTcp9sQ3JL9T
WDqEpzOwmsoIrWez9qd6dolqIEd9mfXBt+dpb0x8I+9oUyw8rDfa/ZJPyuwz
yyPLedJbjQ2qflZG9tYP3rANqt5zdSdtuc8aZJyeeeNPv2qK+glnvnmeZ+Pq
bfymsa6I7TPmYW92xJKhfsK+Qh9D8hNXjbXId0o1S+5kKgeUC8STevVsfkPY
46ifCM02W72VcpZ4OSB/5EIyNE6xtuq0T/72hsYt1k2ft1piL/mt7xG/S92K
B+O1KjLsv6BvDozL+9WzyWlyIiHON3v7TlD/BvNHfZf5fe4KzfZFaHwiR0ah
H1BPq1L/K1VvWaNvd7nq+qFix3jHlPcW5fOB6vP/d9Bbr2HdX4f8w1uOyYUB
5Zd55n8G+V+puDOOjOf8yPAQ1z+xJh4C
         "]], PolygonBox[CompressedData["
1:eJwtkk9LlFEUh2/zvvcSIS50U1qLwG27CHQzUQSu/Qh9AF1kESEqmmQhDEWS
OgWBEEFOgQom6Ig7saZaCWZo7sRGcly68vnxc3FmnvPnPefcc871+309vYUQ
wk0kR1b5ech/E8Z1eCQL4dG5fjmFMBxDGIL/IL8zi7h8IYQ6fDU5fhb9Glwm
voR/DNsM3CDnLfQq+iTxP7GtwxVsv+AqMq/v0dfgA+JvwF+wvSJ+HNszZBP7
N6Q9ub56GsL+InOtp0gVf8zdSwXZwXeseqqF/z/8FX8/fAnbCnyPfM3EjWBb
RP9AzEu4A/9HeAl5H9zTMrwa3essthV4I7pXvXETbkuur5lcgeewTeN7jf4J
rkR/K9tnOEO6NV9sZfr4l3m26r+Vfrb05oJ7msA3nHlf6r+F/KPn8ZqJZrOX
u3f1XML3JDpWb34M303WleOO4vXGgneyCw9mjr2IrTm5B/WiNy1oH8ho8Mw0
u+3o3RaJ34H/Rs9aOffhQ6QW/Ma68kffluoPwM8z7045l6l1O7m2eijCp7lz
K8eUbjPa/wC9H+5Kzqd5dybvXP1qJkdwg5i94Bs4ib4h3dJ3pIZMRu9eM34D
v43elW74HbyQu5ZqLsE/om9XN1uDzwB6inZr
         "]], 
        PolygonBox[{{1566, 734, 1568, 1218, 1219}, {1414, 115, 843, 1415, 
         1416}, {1229, 1228, 1225, 130, 903}, {1219, 1218, 1409, 639, 948}, {
         989, 988, 900, 734, 1567}}]}]}, 
     {RGBColor[0.37137836320783557`, 0.5271753189415453, 0.2524828593821648], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVDtoVEEUnffezKIWK5LEqElWVETETy+rWCpZjLy4TXb9J6JLXK1MIRpE
QrRIJVgmhSyYQizUSktBRHSTRsSIIPIUJIJilDQL8RzuWVJczrw79965c86d
t+381cErsXPuOiyBPYicq8J6YM/g6AW+9M4dCM4NI7AI/IW4b7AM1oLlYX2w
c9i7hphhYEBeEb5+7mM9BLwE24C9FDEdwJozfwU2gJgR+GPgmsjyuHcRcWPw
XwBuzTlXx95n9LUZ60/wbwF+wPdHrLtylldRbjmyXNY7hvzLWB8Hrqjfvc56
LKnPJ6gzjpibiLkRbD0eLO6gYu8gphP+d+CkibrPYdthdxE3Af9ksHpF5WQ6
ixyxd/JZ0x7r7nN253YvffK19/hdgJ1A3Trqp8BR6UM+08j85HsP9qpY7wYe
DsbnoWD68dxCzjgg14xfdqbletii1plwSX7q+Ta2c9aiTgM4Bazq/ieBc8D3
iNkhnWvSel780F+WrkOqv6wZStUL+Z8GNmOL5Qzmdcdp5fO7gv1XsKOR9ZyJ
2yXVpa+ifepcEpJP+lri9Iy3/s56m5d+zQHvMaG7PIzsbJ67M1jdXZrfI6rF
N8EzqCHXr/Wd6X4FzXYcreqbyU8t3kiPL5irx8BO9BN5e4ext1rUdEVapOKx
RxyRH3I8J56fJrbXIa2+az6n9J3zdk5Dfua+0Jq8Doo75rPOIurNiAvycFp6
n/L2XZam+73VmUT8bGQ57I+zU1ffjyK7V7v3GdWk/gPih3yMiBP23lRv99X/
OmDNW+7fxPiuxqs6s3dyzF5+KPdnYm9mAfg7MU3/ADfhPSwg93ZiWlLTvOa3
V9x2B+OkC9it+I05q8Wat4L9DzLNzD/xxR7pm5cuvPes7s1ZKOnNU8tU88/e
eVZL54+qB76JMb2Le97u9TUxLRvi5j+smaFe
         "]], PolygonBox[CompressedData["
1:eJwtlFtoz2EYx3+//++QU5sdtETEkiQuSRJ3CkvbFBmGTVNONzaHzTGJIpo2
fzlcSNuU3DiN3a8xRtrB34yFxg4yi8KEz7fnvfjU877v8z7v8z6nGVv3FOxO
eJ5XAiEsjpDZSPietxC5FZ7AVw6H4SdyS8J0FiFvDjyvGFLIr+Es8hkohDXQ
DPXYugY/kNOw0YB8HXzkTLiFPAXucD4JGwXYboYfyEm4CO3odcB5dM7BWlgH
K+ARd9ugiPM81qughju1sJG9577pSHdeaPILKEauYq8SlsIyqNVd9yf97Zf+
DL9hNDSf5Nt6mBVZTBSbbzACn6APPkM/HEVnB29NhbvYOwlNzh/5sjk0Xz5i
7wNnE2LPGx+bT/KtSf7CQexUwvfAYqkYKpb34R5UcLYPspFvczYTGtE9zd4J
bHdAJ+srcBnKYDtsgCJoQe8xvIHuyP6sv1/grNrpSPcSJKEESh2SB7gzCBtC
y0UfvGT/C3tD4EMCsiAfX/5Qa+naC60WVAMp9AcDqwXFbAh5ASz37U4G+qOq
R+SdkBdZDagWHiA3wjao4KwN/NiQfBUbw4HFULHcDwfgLzzlvBy2IL9Hp9+3
HM0PTUe6E7GTEduf9LcbMJbzdPbSYsuBcqGYK/ayUc36COvDgelINxdb//h7
Ee/NRa6HOmiAm9DLnXeh1bhqXTlpcT3Y6mI84GKq2Pa7WlOOlCvVfI3rmaSL
iWLzEB65GlGt7IVyCCGIrCZUG7Mjq235KF9HXe0nXe67kDtD63H1uno+5Wrm
jXtDb/W5XhhxvVHjeusQZ4exn4KuwGKq2CpGilW58009oF54xt1sdHOJZ2to
MVKsepDfQj7yroTlULnUjGh3PsrXOZHFWjNLs2tcaLlTj/QGVoOqRc2cHOTj
+hNyN0zm/ZXsRb69Uaj+is13/aGK9bTYensXTEd+Fdhd2ciJreZ9F2PFWj73
uBwr10vYK01YTau2V0dW23pTb2dhIzO2GaBZoBgoFurpU5rVkdXuGM0z5GO8
fzSwO7o7EljtawZrFmuma7brzaWRzQTNBs3ITaHNIM0ixbwtNJuyrZ4qi2ym
a7bXudr9D9mq3+M=
         "]], 
        PolygonBox[{{985, 428, 1042, 1027, 1028}, {1230, 532, 903, 844, 
         845}, {1028, 1027, 1562, 731, 984}, {832, 831, 1414, 644, 1417}, {
         1216, 1215, 1406, 638, 946}, {1558, 730, 1560, 1215, 1216}, {1557, 
         729, 1556, 896, 897}}]}]}, 
     {RGBColor[0.5797936393702607, 0.6477992924766771, 0.2594366117967208], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVktoVVcUve+ecwIFP4O2asRJKLUO8qxJixkkg2So0EkHpaL2m7xqB/7A
SJuEJlCDX0w10QqC2laKFQI1mkoh1YFtFUXwlxc/WDElmvihREcq0rVYCxwc
9r7ns886a6+936v6bPX7q/Isy4YwAsbKQpaNYKIStgZjP+b6MbZjcQ7myzHL
GmF7sNaAsdWW5wcwvwV+fUF2oeeHML8DfiNGXa4zdRjfJ8TF927Y3UFrk4j/
CkYL1i9h7j2MDfAvRJ0ZMp6jBWFsgf8r7CyMZvgT2P8F/Kuw0yuybBgxv4Hf
6/tvYM8ZxKqCPxfrXUHvfb1C7zhvLsaScN+F/QqjA34b7AD2zMYoZeKgyWd2
Ic587BlH7HPYdwT+WdiPovAMY71oPnsyYeE54uHb+MZR7GmDfaugPfV+L/d1
wq/2ed7TDb/WHPcbc0ScL/F9DXH6csXimbtBfF50DtvhzyvoTtquTPt4J+P/
DtwHse9EEpYuYz6M7z2Y/xn21QrxRv56MN6EfzsKV50xbcVcq98zP8q/g72H
Mb/R2BfB7zOPXX4TMbRE5Xgm+YvifRbsc5wvwb8Muy/ofASehxgn4d+HXY/R
Dn8D7KmofM0A3pkV4mck6O6Nxsk7u+0/wLlfrON/gnQyCPsk11nGuoXv2/h+
A/Ee56qZSq+ttDb4vcL6bLLumMdyLk1ybQL2gLmgfkvW8AfAfB5+L+zmJP00
BuWKeWA+Jh2D564m1d5well71EOd65P+f1j/I1cd3GPN5dLUjKj6WRDFNTmv
jeKanL8bdW+77+7wvZXWVpvnTwDfIfivRfHZby3tDeoXzzA/BrvNuvzc9/J+
9plO5/0m3nAce67DPoI95t5BDvvM46ognhqC6miHa4k5L5kT1nKP54vWFuNT
i63W9GguzK3mmpwvgf0uSbs7k3JT4/fwnnrHpN4Zk7Gbo/K8BniWwl8Hf3FQ
PbPGPsFcKUoXa4PyQ41Rg38n+X/BfhyFqwg7NQrbFNhPo97LdzPvIeg+9q8q
65Sapj7ZAxrMz9OgvTxDrlewljC/Luh9o67PQeu8OqpvjDlHzHXZ+f7Q/FCb
1D79Kvc16pM6PRpUA6w56oW9gvz85vjsu6yjFITjRRBX06PqKAZxlFxv1N/+
XHqlPgrGPy2qv/PeLCrvV5x75oS9q9Z9kJzkUbmjlupdE9QYNbLTPFO/zDXr
kfkeSdpfTsJHnF8H9R3eMx70xqL1T6zEzPefTupxfyZxx3qnJqcZ/xPj4n5+
H0qqx59ga6ylZtfHpM++bQ1QC4w94b7BvsXfGtY6a/exf7vJF2NWuw8xDuOO
J/WBe0ncdlrfg0lvP+7fvUeuu3esW+qXvYNnWXMDPn8MdgvW/sXcpqgcEgOx
FK3nbsyVg3pjh3vVA/dY6ow9gXXZm+TvSvrt52/WsqhaIv/L/TvJ/wzsSRe9
59uoWmf/b3IPJgbi/iFJ0z/C/g9TCiXf
         "]], PolygonBox[CompressedData["
1:eJwtlVdsj1EYxr9xzl+sVG3iRmrvImqVuhSbXhCrVFtcWAliRSTiwkisFonE
juBKzRBcWBEuURGRmlUrRSpWyu/xnosn3zvOe867v87zl05dkkRRtAY4UOSj
aC4oAwvB8jSKSqXjOzITRSeR7cNgfRxFhcgGY3QutjODoOejnweKwQIwEFkl
+hL0udBtuOMJ9ouQVWF/hDN9oCuQnYD+yZmR8Bfgn8EXgmlgCpiqs+g7o38A
pjt7ozj4LN+fI+sbm4+n4H/xxgLeLkX2B/ohshHQ59E/CTEq1hJQClZwpozz
nm8+vm7w5mtHUImsypvtZ5CLvgJ+B/Rq9BNSS2IZ9ArIBvg96Lejfwt6cv4l
slXoT4DdnM1BVp1YTJfQjef8uBCzYpeNbMvBUfhekoEfypXyAXoHmXQtQTZo
BVqDtqANqAffQXvQLsik6wa6gu6gR7CRbRZoEXKu3DeAv6AAjAb5YBRYllpt
U74j8HUyskkhBsUyEUwIMul26q3YcrIXegA5OBtbjfpDf+Oer+AOuJuaz/XB
R/l63FuvvAO9eW8WNiUh3zOd+ZwVYlSsj5D1iK1G+0OMijUHdAEJ+sWx1TxW
76k/QB4YGnKsXA8Dw8E6sIG7OmBzlfPT8XETdFdkO6G/gLoQg2LRjGhWOqHf
AZ2Nz1WJ3bHG20xptv7PCPdt0X2R9Ug/+KfeZmEbfBG6RsgyoBxUOKtJQ5g5
zd7mkI/XYCv0B2Q35JtyjH3Ce3HGfJSvC0E5urGcOZjaG3orD74C+g/2v0MN
J4aa5weZdDOczaJ6+LniQJYLfxj+InS1s9xoJjWbNWAg9BFkV9BXOcuNaqRa
lYZZlI/ydRZ3blEuOLMH+rI3W+VcuW+KTRNQDf0C1Do7qzf0Vg3nr8EXwL9R
Lr359l4+cf9u+G2J9aR6c7uz3CmHjaGPeZs97SjtqnvgTGI+yTf1gHpBO62V
fEY/Jracf4Ke7aw3tRPmOJsRzYp6vtiZD/LlFLjlbadot8jnt/D94T9CnwOP
4OuwyYvNh/ua4YztJvVwO+jH3s5qx2nX3QGnE7tDd2mnabdpZ5dx1030Q2I7
czf0fF6Ycc16kbPdpp6c62wmNZv1ms3UZmJYmBnNjmZSs3lIPsOvBuuh23PH
Rey7o3+VWM53eauJanMdvlZvc+eQ1HaYdtn38NYizSlohv3DxO5cqT5EVpDY
P0P/Duetl1UD1aI2td0vm+byzdtbdWBQxmZCs6E7DqQ2U+Whp9RbG5E9Tmxm
Nbtfnc2GaqBanPcWq3pevd/M2W5XjIpVMSt23ZEFvza1flB/1aS2g3LCDtcu
v+2tF1QT1eYfA+zqrw==
         "]], 
        PolygonBox[{{1549, 724, 1548, 892, 893}, {993, 992, 1044, 421, 
         1037}, {893, 892, 832, 359, 1002}, {1160, 484, 1164, 1030, 1031}, {
         1130, 1129, 1012, 103, 1128}}]}]}, 
     {RGBColor[0.7994726411021973, 0.7595906242332253, 0.3006357688162337], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFWGtwldUV/e73nXN/NKTlYTtBKxFLLLnRiQJKIMj4QwSsD0SlCTM6itZa
aHmo/YHaFps6ozAgYGYCUeOjFuL4xipYI1OVJFbGsTx9TjsiCSgBcbQhkQS6
Fmtl8mPPPvd85+yzz95rP84dPW/R7IVpkiQv5JIkA78kJsk8TFSBv4m5XaAa
0EJQO2gU6Mqg8RXg1fkk2YnxYmyejv2/BM0B1WJuN2gIaEpe4yVYcwy8GzQx
kVzuLQI9BVlt4L8A3wq+JycZNdClgLVngC6CnP/i99ngG7DuPXy/Frwc9DrG
l4FX4IwC6FKsW4K5O0D3Yu9MfGvFeAb486DtGF8P3gI+xzr0g/o4j/WLclp/
JuhprHsX/OqgM3jWWPA7U913Buh22Osu/L4pSuYOyx2PuXGgN7gOev0JfBXW
7MPc7/F9GX6/BH5nTt9eBbWCtoGasG4p5q/BvgngD4C2YH4ozm7E+CDm20Fz
Mf4W/BtQDb6nsM8BjNdj/m7wGzOdvxPyrsHef2F+FvjKKPtMw/fZoFVY83iU
LtTpLPrB+rSBFue0txT0eSb9iyCnLCc9V2DNi9j/R9oQ3+eAHuP9MDcX4+cw
fgvjSnyvAz2D3/+MGtfSbzntbeSZmey3H7zL5/L8c7G+FrYbA34daAHGV4BX
2Q/E4CFjlZgtNo7opwP26SL7e459vcs4rDG+ec49ibDLOeJ5j/FMWR+C9uZk
d9qvzBg702fejXFxXj76MpNtCrYP7zrBd/8evJe4xbgK68aCX4i7lINPSnSn
m1ONGQO0TaXtU51J9yPgkzPJuAF7J2WKrZkYz09lE+4/CvqOdwWV5eXfH8N3
01LFyseJ7lzquyz1fXgXYqrYNuTvUbbPMscC46/G43ODzuqhvUFdPrvTeaHI
Nu/x/C7njCG281TaFrzd+h61jC7L2G087vGYuNzr318y9nCXjqh9B7yn02PG
1Ef4tglrdkfJ6fT8pJzOZHxNwfdq0HsYb7YuPOc1c+5jLE5yPO6I+n1DJvs1
2IYlkDEsVVyV2f/32s4cL7c9yR+kLaLO7g6yP+cesI6tvu9ixx9l1GP9cqxf
HYW7UQPYC4pNxuj+KB+fxNy3QTq/mclmbb5brfM0/TDXMUOf1wzESaL8t9hn
tNsuW+y76Y69GcYs8TbauZo5mzFKLE5OlF+nGws3RuXcx4NyJ/PpzET2W2Ib
0gbrQesS1aMa67rVsUhdu50DmQuLEtWK00F/g/x6yHwS/Bt8PwoaSVwxX+YU
by3G/3bvYZwx/kqwZxbmh4JfnUrmEPuDujSYNoI2WEfGdDNlYH15qnz3GvY3
Ybwpys+NXrvBeGK+H43vZ6XKlc22K+27yPWHWCg47lf4/GafXelc0ujfmy23
0/m/A/xr51Lm1Muj8s5jsPlHQXL/gflunL8MlKY64x5jdbtrE2vBB871r2eD
2OW6J6Lu8Cm+fxWU31oy6dNgfet9x4fs06Xev8V34R0eioqZnUH3We777sP8
Ssi8GTIPs+45xojllcYj88Za546eVHHB2JuXKY6/gIx2UDPm3onywYM+Y539
yt8THNPPOBb2GmPM01XG+ttRdf1wkDzW9+cxf3YUttYH4et0Y6lgbBFDE/Oy
dVVefVC5Y+aHxmhDEE6LvIe9GGtAhfcXGYfEJnFZ7HgbOKfVmCIGLorqtx5x
b7XQeGoyPpuMl432AeP1R+6bmm0X2on1ln3YTy13g/e8HIX1/e7FGpybBnIl
ZX8ehNE3Mtl0vbHaF+SzrZnyMfNtC+YvzBSjo6PyAvPDE0G5Y75r4U3utW6N
qv3ML7PAc9ibuhYyz+TckxLrxHyTORvdXvs05/W004lUPiGdTFVHez2mjzZj
bR3GP4Pv/u1YYEwQb8NT9XK/c11mfaa+C5zTKCNxbZ7hu3B+hfsu9l+0wSbn
Io7HZLJJneWzPySmSzwekSnuuL8/lf7MacRev8eMJa7fZUweT4Wrox7T1lXu
+adE9VX099gojIxy31ZCv7ifuzivuLgjk17DrM/HzifMK5TdZ/n0If1CnzA+
OE9dqP/wTHmhxJyYZOz22J7jcdYn4Aej/MJ7EesX5GWnD6Pu0psqNv4clcfu
dzx9nw5+5/gHiXTusd48f5jz0j5jlZil7ccZk+TNHl/ntwPfELONe75FGIeM
R8YmayJrGWvo+/j+dU71eE3UnX6ely691o1vlmnuNyj7iHMuZR92XM20TGJn
bpDcTeC/cbwwbnj+LMfp7UF96vwgex+3zXku7UI7rAnKpaudHw45R7DWd7ne
b4vKbeflpcdB1+YzfF+edSqXOAeyj2Q9pc8aM/2+jRg3dvgmOOQawVqxxvji
+6A0E95o70vzqkX343e93y98x7wShZEKfF+J/R2Qsypo73jXXOKUeKJeT0X5
tjwv2eXW89VMNW0M5ssy+bvamFhuPBCP9cYk71njPuC4/cY4esl9L3vhtqD8
uS3If3WOi79Ah/swrjM2OebZ1LPguj/OsUbdODcyG4y/UtvopPv1JKp/Za7Y
G9Uvsm88FlSTaIcj4P/JpEdtEOb3Oaboy1M2iOqNeMe/RuGS34cE1UhivjUq
bzFvMnf1ReXiqeC9UXWpAH5BUH82DvzZIN9tDHqLVzun3RL0zuJ/Bh3u1Q+w
ZkbhsTgqd/a55+yOsvtPwH8dlHOYeyr9bj8f/FdB7zL+x8Acw1zDfM6aRDt2
BPme/nwYcoZHxepErP0q0xvtD5lqLHMg78b3MN917UFvacbxbcyR0bnc/chU
9x6My7sc79+5xz7VayeSS5kVHhe8n3JmR+mcc278rWsR33NX+T8H/vdArBOD
T0e9k/mG/CKop2Tc/T0KP2McJ+yTqN//gv474PtzR9CbnG/IT2i3TP3SiaB3
C98vXRjvicpzlThzvP+LmQC+wLWL70vGC/HGs5rta8brar9H1kb1gqxNnwXJ
osy2OJjriflz7F/6eb7fv1W2B+suazdljHBtGMjXrHfsk5jH1gXVvf50sG53
u1frd85jveC+Ed7L9cfc/7M34vjRoDO4jlgZ6v7/NNdB6kwfdEZhmfXnKsdC
n99tZdlg3S6zLyY7RhgrlzvP8r8u5sgW58kG96jzXAcq/P8V47jU+fBl8Cd5
v0x4JW75H8MJzydB2GKOOhWTmeRQLvM/6+5If6/1mn73YOzFGOO0He3Os7l/
oA8pWA77WsppBP8/5heM/g==
         "]], PolygonBox[CompressedData["
1:eJwtlXtol1Ucxt/f3nNWZEuUskXXnzkTG3TRsmRKNy8/q7WWRg4KWrVMS7v+
kX/kHUzZ1uawGrW0CykWOUvDnJKi0xxBc6kp0UDNrbREMgVt5ufh+f3xvDzP
+Z7zfc/5Xs7JVs+qnFmQJMl8EEAXn2IG6uBL0yQ5gy5D70a/i26PSdIGX8XY
TngL9rOZJBnP2IvYf0VnsX2IrkP/jR6B3oRuQlewZgZ6NLocvgJ7H+unoF/C
vp6xL+EtzNkAb8Z+CvswxqZj/x09HNsX6Ab0B+gz2EehZ6CHsWYq9mvQQ+Fl
oBp9M3o0PAHj0Aegzcx/j/UnWX8V+gX0BvAj+g3QDR+JfQu8CBTDbyxMkgWs
fw39G/Z3GOuF/wXuR3dqj/D3QQ/8m+iztOD/a/gQ5r+S8ZoG+JPRsVMMnoLf
y5pj8HYwCfsExRDeASajH0D3x183yLKX+9DHse0C5cF70F52g0r01OC9ykcT
fBH2AtbOBfP53+fBWj7lOxcdS+V0Evwm7DfA52FfiL6Lf54u8Jo1wTFSrA6h
hyo20XPlfzy2LHOux/4DeFT/BwvBErAUFDH/ksQ5uAx+R3SuldM74Z+AJnzV
M/YxPBudK9XEYHi/4P+fAMvhudRcOaxCL4teuwQfTfCx0bWnmrgHXgOeQL+O
ngbfEV3bqsHt0TlX7veB5+FXgkvhP4PnlMvUfC+oQR9BPw7vBNXBY7KphkbA
X03taz+Ylo+BYrEYvA1exr4HWxd4Fv10sK82cAt8EOiX8Zxngudo7mZwG7yO
Pc9J3MP10T7l+yJwsXonuhfUI6XwT6NrUzH+DF4Jcol7dDK8Ijh3qjHV2vbg
WlH+V8HXRve6erIV/lH03aE7YAV8T3Tv6w7pgg+K7s0KdDH8cPTdop48At8a
3du6M7bBG6NzN1f9Dl8UXVuqyfXs5/JoX0XYB8I3M3Y3tsXKAfpf9lib8dgp
+PFg20hwDH4QvAUfDg4ontG1oBhUw88z1ohtLOiD78j3r2LQDp8enMsqcDp1
zWt/6pFR9MNh7AuUO/WIaif4LKrZIvg55p8F/4E+8D9YiW01+Em9n/puVE2d
gO9nTx3odfj/Bf5P6n+rhk/CHwvuffWceu8K5SjjmpiYukfVqwPBLmyPBN8d
1wnwKcF3jeKr3n8w+C66FlwNXxfcWxvBWt197OEgvtvw9we8k7E3sZVo//Cd
qvmMY6bY3Rpcy6ph1fLtwbWrnlJv6RHS+deop9jv4ELfdVqvu3NIofemM5UU
OmaKXZf6MPUarW0Gf8LbUudaOfie/fVE71UxPArvHxxr/fM8c0uDz6Yz6i1Q
Dlbn7/Oj8I2pz6Yz1UbHULHUm/Attu9S15Ji0IJ9DLosn2PlenZqX/Kpf++L
zqXe1L3wiaoxvR2gPjjmir3GcvCHFNOM3wi9FVtS16Zq/FB0DpVLzXkYPiA4
Hjpfq96m/P/1RtVi25S6NtUDX7G+N3XstEZrZ6Fn5s+gs1wA5koULw==
         "]], 
        PolygonBox[{{980, 979, 1001, 410, 1040}, {1032, 1031, 1174, 495, 
         841}, {1064, 441, 1112, 1110, 1111}, {1122, 465, 1121, 878, 879}, {
         1111, 1110, 1172, 494, 839}, {1166, 485, 977, 1156, 1157}}]}]}, 
     {RGBColor[0.8731853982714127, 0.715740370740345, 0.3252068410322601], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV1lsVVUUve+eex7UgMEPpliqLdDWNIYaaak1gKUtUmSyhdQYNQb5QcYy
qBDRBEElWBAwscECdQKERIoRleIACA5/ICYO8QcEY6LBxEgkNK2u5VqGj9O9
zz777bPHdW6L5y9rXpomSTImlyQBdDj+DMMqhfAM6ALI/wGdmyXJcpzfC35s
PknO43wMaDvkw6BzCfKt4B+HzjTQZqwl4OshfxB8G/gm8EXgj0B/NuhYrI/A
14P24XwEVhlWoXVqQW/B+gD8RNCRWO+DnwBaAfosVif0S7D/EPw9oLOwFkM2
BXe9jZWHfF5MkncgD/B5JfiN4C9AviWTf/TzZfB14BeBnwF+kv1/AvRu21xB
Haxl4Aci9rJU+WKuRqXK22uJ9uTpG+lwyx/B3Stw9jDo0kx3rQyyS/urwE+3
nL6sc86fAj8hr3unBvlE31aDb7AOdRkz7cwBPyenuwaAXoOswPktxX4tVjv4
TtC9WDdg7cNvC0AXwrcXnJ/1zBloNXQbsUZD5y7YPAp+m3M+BnQy6A6s7yGv
At2E1QO+ljnG+pp8qt9+Bb4SdC/WAdsswarBfj9srYPsVCY/6M/+oPqxjnuD
4plrf+j3Y4n2leA3YB0EX257vPcH9hD4H5kf0NtwVpdKhzz9+X9P/T+C8nIZ
dD3kq8A/kygXzMkh5t59yH682fx9oC05/ZZ+DXS9noSdDPxS9hL4DtrAasUq
trwhqA4d/i1jbHGc41LlhznvDpq153HXYfYV+Jsy2erKaU/d0dZnvkc7FzW2
w7pQ94D1WYtRQffQFmW/Yn8a+1lYjdgPQv4bQD8LmlPy7KUjztFGnH8Ovhny
xVHxdTnGXvas9Z/2vHPuB+Q1j5zLNe4lzvGdsFPP/MHOYMabqidmGhOIH8NT
yV+C/H7jQ3Gm3LW6J1odH/km14i1mp8pzxedvwXW2ez6EhtO4GwG+Ab4kIA2
5YRL/VjTzbMfZ+fUh7dG6RzH704GyR9w/za7jllOM0n9tqi6sy+mRenzd5y1
GZ63MudqHugvxmHi8SnOA/ir7oV59n95FM/zHOhM2xkfZZMxvWscXgP+eNQM
fgy+zbkl7m7GfiTk58AXsSeCsI1rSBBu8A0g5rRmklGHtThojK3JC5srjc/F
rlEL6FDboT5ryBpTVuW3YxL2hUE9ecBYWmh+nHnOOPvuvOeTvx8UNKcVqXCA
d9cYS4m1POdd7CWeVxkrSlL5WuH+Zm8XRuHWZGMX8azWmMZZZe32webEVHo8
o+1BjuUL5gX0NOiGqDqWOVc8Zw5XOyd836amwk/el7i/WDvGVmr8WWsf+VvW
Z63P2HPsvcooLP5vjpD/8an8ZpxDMs37t0FvAeerwG8B7dF+jTGQePhQVN9y
pv/KhN1X+O4ZvzhD9anw9Dv7uSmVPdb0Rc9sexR/1FhbbuzdGqW/JUo+xe/C
ZL8hzPliyHux3813Pwp3uiB7NSjvf7uX6Hu7Z7PMbxzxpjWVbJdjjlGz+2iq
+eCe8t04v91z/oZnp9q2DkHeCf1jkG8L6q1LmTBthN/UnUH1S6JmvNG1azGW
c/aro+6tisoXc8A4+5zH/kw4PM5v6xLY7CeGZqof+469yjkbEq5/a5ByvqYF
z0GmuuV9L/uiz7FcwN090P8UuhfBHwP/s/ucPHPPOtS5puR7XJcO4yrj6QvC
9t6gPPc7F8SeAmNRv98vvmOMib4zhjmWMUdnjONnM816pb8Heo2TzOVpz9GX
mWqX82xcNb7ljMHBNjm71+zPbsS2nTHA9p85+cq6NZqydsS37X5H+I3APb/T
Zvr+as/djlSzdwF+lDNvoFdy8onxd0Xp7DHWJv4t61Vk+6WuFXOxx+8o+7rW
GMP8vOk3oC4qJ4V+l+9IlR/2Br//+F3xHHQWOrYOYmeQTzvB/5bpN79nmuse
z9RA4/+mTN+upc55SdS8FEfhJn2kr+uj5muj3+GhjuUk5PvAn4h6l4a57q3+
Fi3PlGd+P/S633k/e74bZ3ns38v0fdKdXv9WqXG/Fbh/abPCbwhnnLkvs895
15x6xO9dqXwvcc4YM//faHPch6N0ukEXBfVQp/PQ6bpPZ07BN0Vh5+FU9TkX
xX8TVZNS9zTrxHq9FfSmMCec11eC8Pcy7L8e1A/EGPYV7bO3zkbF/on/Pyiz
DzdG5W1w1Hy3uxZFfoOpsyXo3foJ9v8FdVBonA==
         "]], PolygonBox[CompressedData["
1:eJwtlVlslVUUhf97zzkXTdDwIsTEqG1w5AUTylCCU0ttqwhUcSBClKgJ2FIq
oGLEAUFtKlXEBMWWlqklOLQ1ouIUNaK+KWDi+EIpxjhAolaJ2Oq3sv6Hde/a
Z+8z7bP2/suWNDcsL2ZZ1gYiOMrPxQzshd8asqwBPFjIsrMZa4MfA+Ox7wQ/
wt8Bz+E7F3zD3MPRsRfiPwQ/hb8b3gdmwb9gbDz+CeBL+BBjL+DrAQfgfzFW
CR/Afzhl2evYJXgL51kIP05MB/4bwEz4LcTMhZfAbuwfiCknfhL29/DJ+Ovg
GdiO/1Dy2q3Yi7Gng3r4MFgGXwT2E95PzMHkM+ls2vME/D6wHP8w/opSlr0n
P3wy+Jn9KrBriP0dLIW/yljEt4I5N8L/A1fge5exoeQcK9da40Psn7An4N8L
xhH7L7gaXxUYgf8BZsArwZ/wY2CS9id+CH6S+QsKfqN++MHoXD/NHvOxvwpe
W28yAq9jz6X452DPwK7Avr3onCg31djXwQPYqXxx54C/mfWmlTxHc0+Ce+Dv
B+dOZ9RZVybHK2ct8FfyfLxN/EPwLsY2F60xae0DaaroO+vuemO99Shogr/E
WKHgM05l7h2MfZ55ziB2JfY8/KdAI7xT+xV8x/pkDUqL0lxz8Jvp7S4Dv0h7
YJ/uwprT4UfARUXXxCB8NnPW4nsKe2OyxqX1VuxnsPcH+6RxaX0b9j/EVxMz
Fn97cuwq7FrdjZg34QXGehQffXadWWd/EYwy/2b85cztiM61cqBcbI3WrmIU
209MJ7GPMHYT6++OXlt7rIbvUpFjN/J3PbwnuHYawG3M3RX81qqpWuwdwbUj
DUzB7sYeyVxT52M/Ea21QfAkvDW6VmW3wY8ma70de4m0qTfE38FYn3zBXDlW
ru8P1pY0MwZ99UZrR/bL8C3Kj86OfSbz50XfRfebH10DqgXlYEDajX5Lvekc
+Jrg86mnDGCfkbzWAdUTfCJ7HoGvA/uI/ZuYWUX3JPWmWrCM+W9g16meg3uh
anYAviF57sPErIMPR9eqNCqt7tCcXF/18F+jtaeeo95zVrQ2dIYLOMtx7Cnq
NYz9Bn8guJeohlRLC6JrSbZ6jXqeep9qqpv9d+bvrfu3RGtMemhiuEF3y/Wn
HM6MfiO9le68Bb4QrC+4x2yCP578PtpzfbLGpDX13Hb4lazxVsHrXx7dY9Vr
dYfn4dOic6ccVsA/ia6ncfg/hVdz57F5je3B/g6cV7RmpB19Y/St0di30T1N
vU3foG2c57PotTRftXoaY1UF12AndmOy1k8HvdjnJNemNN2FfTfYjF3DGlv1
bYru5dKctFeV51s5uAq+PX9P3akJ/mz03ZWDTfBFrH9v0T1Jvam8ZJ++H1Ph
lxJzCagB14DVwfP1Rqrd7ujeNwZ0wfcEn109fgVrX5vnU2eQtkajvxVfs8Zd
xD6G/Wi+h/aam/c3aUK9YFXw28uWVjYEa1dvoLfQN05n1ZnXRJ9BZ9GdFrN/
lpwrfdP0bVsZrG2dR7kpS+5d+ibq29gX3RtUg69F52A4/z6Ulaxxab2XsY/V
L/N49ZiN8I+SfdKktPk/3poWKA==
         "]], 
        PolygonBox[{{1201, 518, 1200, 1152, 1153}, {1095, 1094, 1064, 112, 
         1092}}]}]}, 
     {RGBColor[0.7948751752015297, 0.4583075740732274, 0.28778419340897915`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkskuRFEQQC/vvTb+gfkLzPM8NQs2ErOQ2JCgG23obkJs+Apam+fhC4xr
YiciRHwEds5N1aJyzqtXt6pu3ssbDXYFEo0xjYRDhF1jPhKMWYR+nzFf+Ap+
7YpHKDrDP/EwPom/4hMwrh4iv4u/4XP4Bv6Nr8N94h2fJ7+qPe2cK55j+C88
Jm7wMt5HdJ9SatI9YzpZdov389rH9pvSuXb+j/b5gzO6g91lTWfZe8zp2RAc
pOcMPQdgqStzy+Ep5+/wGvwEv8Ur8RbiEW+DF4TH2UtY4UpNFXx25L4p7Dyt
OwThpSNnW/FqV/rXwkbiAW+GqT7p+UTthSP5JvJ1xD3eAJOoeaFm0X4LR/L1
5H2a9+CyfiP7rZbUo7CZe45R0wqH9O4H9CjBR/AdfBqP4kf4BB7Bp2CM5248
Ez90JD+Jb+IdeDKe5ImnwH3bC+/Dz/ElfNbO9MRDMJfowbd5H9S5AZhPDOOF
MO6IF+C7juzfghfrzkWw15NZ/TBHe2Z78t/Y/2eBc208j5P3wzT9l1Jhhif3
yoLtWrNH/T9O12H/
         "]], PolygonBox[CompressedData["
1:eJwtk81K1GEYxd/x/b9DRHegiF6BIiaGMpFO4saNYEpEQRsDZRxNpxlF2nUD
XUB3EN7BNCqYqVmuLD+jnVsXfoDg73BmceA5/+f7PO+/8+3ceKklhNAHMnCX
QtjhQxlMYtdiCP9yIST4VwJ24QfYv0E+H8KHaFvfHsBfkjOPvaei8FVyzsnf
BEXsHeJ/4TuFV+FXxG/BX4Mu7Cxv/wqYhxeIvyC2Dh4T/y06/gXoSO6hXjUw
A78Em9gToFU28fvYy9oJXoWf5TyTZqtEz6Ke6h3zjv/Ctyt89eh6Y+BR8o7a
dQP/M/Lf4z/E/gNK8J/RWkmzj/C96F7quQL/BP7nXH8N33W0rZ6atYceb7C3
wS32UOZe6intF5K10bzS8nlmbdVDvZ5Io+Y83+F9mbWThp+xS8laqJ92nUq+
tW6+TnxbsnbaWbs/JWed3BPwA96dfCvdQLeYTdZeN9jQfMQfEdsAA9hF/NPN
fRr4l8Bxs14F/01zf2myH91DPsUs4h/MXEs1t6Nn1KzvwGhyTdWWZr3JO2t3
3WSW3JHkWOXobbcnvx3Nr7enGdRPOxYy31D50rA/c0/1/gvK8MVoW9+068Pk
tyG99PZ0M82jnYeTNZE2+idewe8BHW2E7Q==
         "]], PolygonBox[CompressedData["
1:eJwtkUlKQ0EQhlvLjkZPEPGRaNCFoiARBCGgBslGN4IBERTcOBGfEkSSSEBd
eArnMXHIERwv4E5EFPEifkX34qPq/VVd1f2/zsVwer3RGBOAhUKTMV8NxmwR
45CAED7RNokdEECO5hm4EnQGzJFHI8b80XdAfQ/2PZrXwdLXSs8svRvkl+Jm
6Kx26jEYhkdmVKkNQQpaqE/S30yMgIUj9Cm0NvJxGIMLtGW0LPkqrMANWgkt
JB+AfjhDW0BL6V6IwQlaDi1u3fv0nSPwxF1q4nxQP9LwjHaLFqgHnDkWN0Nn
DcI82qm4XbqzwplfzuwSe6EPSvCDtkPshh7Yhm+0IrELkl7XegZeqT0w1+Lh
u/pBrKLX/EydnYU3+ur05dldpO9anBfqyQQsoZ2L80y9i3p/D8V5qx4n/R1G
4YV5d+L26L4C9TL992hrfH9Qz/v/p//xH0YbOig=
         "]]}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlUtvlGUUx5/O+77DxUXbmSkkGKRDoRuTtjNTSUy4tANoImhLSzDaubQl
ZQHCGCUp0UQXfgQ/hXj7Ei5QUBZ8g7pjwQISG01M+P85vwldnJzznPfcb299
c7Byp5RS+k2QCTqCy4IPBfN+6+M7wtvC9wSbon+WYHUkpft5Sr+KnhD9tuhb
RUqr+p7KKT0Sf0P8tvgPRa+L/qIIOzP+JrE39T4s/EJ4U98b2HoB/6BwVg6f
d0TPCLrSbwj/mYXOxTx8W+8b4f+KiLcpfERwVfJHhXcF0+K/JVwWXBL/QBGx
OuZPRf8vuCD6vSJiaRLPLPQM0CD+ZcGCYFGwzvsKYF5bMJAfF/gCNT0jOCtY
EpxD/yN4fm+gvyLoI2e7PeT87mLL732Kdb97lUWcjs/1Mj1H/If0/qAUNb1O
PpZpomMZx++e9vHt2M/jd3wkfPpbZSR406p1TfRXwm9QT9d1Kg+Z7Txydu62
c19+xsQ/Kv7vonuiT2NjY4//dWL4KQs7tvdAdEf0u6J/yULH/n8QPSr6iOgf
s4hzUvRnecg/oG+N7PXM1fB1VzJ90X+I/3ke8TiutSJ6dq0I/33yvZdHbA/x
06Mmzsm+vDflcuTyiLi6gjXxv85jVj2zHrkJxyHYpQ+e8W/z6M1fWeRgH1/m
kZtt3RK+WcQO3i4iPsf5SRG5bbObLXbEu3KM+fcevC+4IbpdRH/dF899G/7F
IngD+O6TcxsIf8xeeD9m2aNd9myrFHdilRuxwtxsMfO+H11uyHl0vKP+fgOZ
g8r/iejv8uiVa+VeuTeu/znqV4Pve1XxXLI/y+zFIruzzPyu8B4T7CDv2p8U
nBBMCua8K4Jj4BnnUgoZ701d0ECuht6U4JngKXYPo2P5f/g2ws6Zty9FzTrY
fY7M3+DnyHuGRpmZZ9ga+nhK3kOdHe7FEnegSlzHyXeSnByXZ2CaHBbQmwWf
JWfjM9gtUSv3w305oP4MmD3PoO++d7UoRz6r2G/QA/to0gO/W8xEm/iayFZ4
1/FXJ+4pdJrUe553h1k7SbzOe3hTjf3f2uLezFOrHerh711q/DiLXfs3i5kf
zuwksuPEUKXnx4m1ykyU6ekieThOzxW/k1c6OW/rZLwr1Dbbk3OFHGvY8B31
3Ownpha5+K5UuV1z3G3nkOHDdtyfbfbXt6rCLfV9GuVGeee22Efv1jj3zfds
jJvWJqcWtZ4gb8/RKv+R4c64ZvbpvXQdvXuOsZ/23McU+Tgv1+37PG7jqTz2
cwMd97OHnmUv4WsJez3qe4iYLtPPNepboxZNejaVXs+34/Ud6jCrCyn2oUF9
T5DrHDkN976OrRb2LDfcH8u+BM4zsNE=
         "]], PolygonBox[CompressedData["
1:eJwtkctKQlEUhpe59/HSoKs4iIwmTbOiIAiESh00syCsvHSCJpZHKvBQoM/T
1TfJQQ8TzfoW6wx++P61b+tfez2MGv0ZESkhh7a8SIvCBrwJr6IzfBG/AufQ
CT6Lz8BVdIvfxR/BfRTCMbUIbqIIPqZ2Dld4pJMSWUQfaZF9/BU8j97we/gW
PIde8Qf4NryA3vEP3NGFl9An/pD1a3gZfeG/0Q38w5v5QOSC/adiPVxqv+wP
WS+gCXtr7CknZ8as/SWsGX7hXGB3aW2Kz3ubhc5gFn529rbe+QL7wHrTngL4
0VnvmvkJHjrLrhliOHKWXTMO4J6z7DqTO7jk7S/0D9bgbW+z1j/agWveZqt/
UIfvvc1eM/fgkbOs5STrP+QKKc8=
         "]]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwNzk1KQlEcxuF/mDesHRj2QdAkMCoJgiBQtHmDpJo11PJGBYmBDlxCq9C+
tlFWtpgGkhD0DB5+5z1cuGf1PD1qzUREnVImYi4bkSNhgXl+WKRAnmWWmLDJ
FkV22GZKhSplDqnxR50TjjnjlEgimnpJg5QWGfcTb/rlm5zdn/UmHds955pz
Vzd4dVfVL73XDuu82GX91MT3WYb2s33tPx/atu9Y48k+0JHe6g0rPNr7+q5X
mlJgaO/pm15okzwDe1cf+AcGcSXM
         "]]},
       "0.42500000000000004`"],
      Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz8lKglEYgOETarroBgShAdwIQVBiFImSYOsgaOGqnWCWQxPkwhZ1FZVm
NkA0XEFlXVTLnn/x8nC+D87hzO8dbDenQgg1FWMh5OMhFJTWvobqmDe5qjVl
1NJIXbs217WhWR1pHGl3zKJKWtCZ8tPmdnG2Eu7Xs3nS+cQ8xbLzprI614tO
7XqsqKqc+vqI7rV75ZsudKVLvZv/6VeH3nlinY9s8Ic1PnCHY+5ywi3es8wR
K/zmCu+4yCGX+MU5DpjmLTP85AxvmOB19D8u8x88PCle
         "]]},
       "0.40800000000000003`"],
      Annotation[#, 0.40800000000000003`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz7sugwEYx+FXHO7ABUi4ExKrJghJJW3CWPfQpJO0IpFIDBhtZTA4BqFG
1S51WBQLanHoovT5hidv/7+v+ZJvKLuYyvVExDTzvRF/fREdfjmxm/0RGffb
/uKTY/tGT7vv9huvHNmn+oz7ZDd55NAu65PunX1LgwN7Q59I3mdXuWbfLupj
7pV9SYULthkdiCh4lvefAnt+D2sjDHo+bpf0ZWp2nSUtxaa2xb32QEmbYkfb
5Vl7YUWb5Uw7p6V9sKrNUdPq/Ght1rRs8t3JO/jXwl3XFugCcY09zA==
         "]], LineBox[CompressedData["
1:eJwV0EsrRHEcx+G/XLIZsVbqSA0vwBhk4dIw7gYpxWJ24zZvQWGhyW3lfkli
IYX3YG/hJSArNnYSz1k8fTuf31mcTpQv5lbKQggFdipCGCBLPUNcMkh3eQjD
doQGxrhilB63cTtBxCTX5Oh127V7NNFYFUKKiD63G+2WtOc2MtpaZQjrJPVp
7pii323GNpOhhVXueWQ2/nbvVNtNSmywzRZvbu8888cDdfqHrbUv9pcfuiiS
11/tE1980skyF27nzPvWOTq0Jc600/i/aVnatUVOtGNSWitpbYEj7TD+N1oU
37QCB9o+NVqCb/4BEkIw/A==
         "]]},
       "0.391`"],
      Annotation[#, 0.391, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVz0krhWEYBuDXvEAkHbZKZhmOIlN+gCT5ARzHkIVpJWVnIStT9qY/YPoD
prU42FpwHDupUyRcFlf3893P+71fX0VsdmgmI4SwSHtWCCU5IZRSTDkR0lRR
QyUN1PFJJ9100Ecv3wwwSD/DDPFLjDgjTDFBZm4I7779wTVpprPtWTD32E+a
y2kjygTzdt124+YyWmkhzpxdl92YOUIzTYwy8/8eX3xzS4pC55flGwmCsz+y
SC7JJDeseF5jlTx2yOfp/w5ZQLW7NvzbJutss0Wtfk/us8shB9Trj+UJR5xx
SqP+Ql5yzjVXNOkT8p47HnmgRf8ikzyT4pWo/g/TYTz4
         "]], 
        LineBox[{951, 1224, 1574, 991, 950, 1068, 1112, 1110, 1172, 1113, 990,
          1571, 951}]},
       "0.374`"],
      Annotation[#, 0.374, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzTsohXEcx+H/4VAkksuZJUliJEnMJLkMyv0WFiZJblmUokROlF1Wg8Ri
UlIG5ZokBklKokjJY3j6nt/n7bxvXu9o00gkhDBDWWIImUkhZJFBjBw+KaCQ
fIop4osKKimnmip+qKeBOppp5Jce+uhikAEiySG8+fY7R3wyHA3hw6bbCAlc
u6P2ysb8J5dD94572nsubY42Z7PsgWeT+gSZ7lk9w+7q49oYae4pvYYF94Xt
9LyDWr/bbDtnfqfYRZJZI5V7Pdvu2RX7YEvtvC2xXXTz6D619TbuO+ucuy9Z
0lrY0ra5+38vy1ore9o+T9ozq1o7x9oJb9o7ca2bG+2Wb+2HDa2fF+2VBKJs
akP8AbNpQPg=
         "]]},
       "0.35700000000000004`"],
      Annotation[#, 0.35700000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVyzFLQmEYhuFXjrUEEdlQDYm/pD9QSw4NDoENbbZEhImIQzUEQSAF7dGu
ErU0uIjhFoGJtEWUEG7h1NVw8fDe5zu54v5WKRURm+wlETckMxEpxnyxq10z
TUf8MtQG7GgNJtoPPa1LQbvkU/vgQbtnW7vgXRtxp92S18551V640hpsaKf0
tWfOtBPWtWPmZiMO3Ie0fZ93V/UFe6SVedQX3TV9yVa0Kk/6sruur9hVkv+3
NLWM/bZj3qj5p2U7+pq3WUbuP9lVLOg=
         "]]},
       "0.34`"],
      Annotation[#, 0.34, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzEsug2EUBuAjVZtAwkykERETBnVpjCQ0XYIFtEtoGhKUDbhtwKUTEqSt
hhmp6tx9AVStoE8HT95z3vP/3/hGIZcfiIgcs0MR3WTEP7/80WFG/yW/eeeT
D6b1L7JNkxbPTOnvZIMqdWqk9BeywinnnDGpP5YnHHDEIRP6fVnuS3hzMGJJ
t2u+NafNO+YVeWV/pMkT2/5Zdbs0X7PomwXWdDf2Ghn7Muu6uv2eefscWd2e
N0bMoyTdXnU/bDKsK7qXeHAbs2/p3+gB3kEx9w==
         "]]},
       "0.323`"],
      Annotation[#, 0.323, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox[
      StyleBox[
      "\"USDRUB, % 3w chng\"", FontFamily -> "Arial", FontSize -> 
       14.666666666666666`, 
       GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False], 
      TraditionalForm], {10, -2.2}], 
    InsetBox[
     FormBox[
      StyleBox[
      "\"CPI\\nacceleration\"", FontFamily -> "Arial", FontSize -> 
       14.666666666666666`, 
       GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False], 
      TraditionalForm], {-6.5, 2}]},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
    GrayLevel[0]],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "TransparentPolygonMesh" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{-10.59524501478301, 
   16.475894730318146`}, {-2.3470857853099165`, 2.335881637602617}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713692190780515*^9, {3.713692343619028*^9, 3.7136923670251217`*^9}, 
   3.713692400302082*^9, 3.713692482706703*^9, 3.713692976548405*^9, 
   3.7141309072267666`*^9, 3.714131203924494*^9, 3.714131335064639*^9, {
   3.714131380489646*^9, 3.7141313983262873`*^9}, 
   3.7141314476365533`*^9},ExpressionUUID->"7fd36a55-88c7-452c-a1e2-\
3eca93d810a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"upcomingXY", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "YYY", ",", "\[IndentingNewLine]", 
    "meetingPiExpLevelUpcoming", ",", "\[IndentingNewLine]", "XXX", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7136926833541584`*^9, {3.713692813579934*^9, 
   3.713692824038142*^9}},ExpressionUUID->"5c5e0d34-dfb7-446a-8fe8-\
f1fd56deb411"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57.5`", ",", "0.15258571323408482`", ",", "YYY", ",", "9.5`", ",", "XXX", 
   ",", "5.`", ",", "\<\"Zero\"\>", ",", "\<\"Yes\"\>", 
   ",", "\<\"NoGuidance\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7136928248055573`*^9, 
  3.7136928266211925`*^9}},ExpressionUUID->"8ee40fc8-f70f-419a-b49e-\
f601fd8a90b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiExpAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136927472292514`*^9, 
  3.7136927479810658`*^9}},ExpressionUUID->"e52b1950-9453-41b7-9867-\
25db8ff9a37c"],

Cell[BoxData[
 RowBox[{"-", "0.005602073853649224`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.713692748831483*^9},ExpressionUUID->"5270f7b4-00ab-416d-9349-\
90f27cf17e79"],

Cell[BoxData["1.1707418557281337`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.713692748831483*^9},ExpressionUUID->"d305ee53-45ca-4416-abff-\
607877cf5bb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiAcceleration\>\"", "]"}], "//", 
  "Mean"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"in", "[", "\"\<cpiAcceleration\>\"", "]"}], "//", 
  "StandardDeviation"}]}], "Input",
 CellChangeTimes->{{3.7136922295456195`*^9, 3.713692254495117*^9}, {
  3.7136923054137316`*^9, 3.713692306122746*^9}, {3.713692731819933*^9, 
  3.7136927421043396`*^9}},ExpressionUUID->"c91b2828-33ef-4e5f-8c62-\
1a9d880fd508"],

Cell[BoxData[
 RowBox[{"-", "0.00601168368233244`"}]], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7136927518945436`*^9},ExpressionUUID->"ed6c10ac-3cb0-4e25-8699-\
e1813a496dd3"],

Cell[BoxData["0.19666393636540952`"], "Output",
 CellChangeTimes->{{3.7136922351261315`*^9, 3.7136922546979213`*^9}, 
   3.7136923064523525`*^9, 
   3.7136927518945436`*^9},ExpressionUUID->"9d212a02-524e-4193-8111-\
c63ab862e0ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"upcomingXY", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", "\"\<Cut\>\""}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"XXX", ",", 
     RowBox[{"2.", "*", "1.1707418557281337`"}], ",", 
     RowBox[{
      RowBox[{"-", "2."}], "*", "1.1707418557281337`"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"YYY", ",", 
     RowBox[{"2.", "*", "0.19666393636540952`"}], ",", 
     RowBox[{
      RowBox[{"-", "2."}], "*", "0.19666393636540952`"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"z", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}], "[", "z", 
         "]"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Contours", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{"Point", "/@"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7136927592180915`*^9, 3.71369279953904*^9}, {
  3.7136929284822464`*^9, 3.7136929292174606`*^9}, {3.7136940016115046`*^9, 
  3.7136940175244217`*^9}},ExpressionUUID->"a06e9840-822d-467e-a2ed-\
b1b8c58d8e30"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
yd8hn+/PXGcv6cN9fnRyDZX+21HlUn1bOL0l/GjgueddJkv/RkDu7VE+66Q9
9/59jT2uSbEisYnH94t/hSpN620+2OWfBMLeQf9Mbz/zGe3nRs2qtkxb+4Tw
gDn5/E32zxqbfP4mvM7y7V+7nPxov0wpMq/biXv3aL/cNIwoeeBOFPHr/bHr
7P4IMhK+Edz0br3ER4T3uMaffXPDQPjN6OJJt+4mK1cje+263jNUuV1+n2+w
/Wuid4uPveT9QfpnXCr0efbp2UvCjU6trWK0+0z8OOSww/FJWdIejR/zadU/
A1MJO019mOP/7iPhtcqlhwUbS/4ufc9t54DR0n4dWedplu8vuT/ExeDOG8K+
Ee5ZuOzqet2lv7v6k6pDpn6T9mvj1Stdutn9Jlzgn0271w6V2Nrlcs7XLOk/
mp94puHdXtLeDQ4qOqbc0SzxqHNUSPmaerrPQP6MTs/LVYrNonjztCKHnloG
ZRO+9LNpU028rwiZHrV5+PS7YkeJxZ7V/44gfQT6DTDsH8TX6tZuumHl5Uyq
3zD5aKuTlzdmkz1ytE+XaQMG5igHHXNKHBseQfVVod8jngEMew76+eHF28Yc
Gii/TwX7DnTYd8Cw72AvuqUN7BfSIJKeP/0kudGuVD+KN2G+oK9Df6b7uGb9
qNWQwPS/p8v8uh5br7fbsOgW0eF/r1LwoG9P6yxx+eijpktPPSZcItmmjWUj
A8V3EJ+Hfx36CvzpiH+PT9r1bvY/st4b/Hl7Khx5nn0xmvRp+OPhf0d7YPhb
wxzanmzTMZzkIfwbkHfwX8A/Bdze12Ls36Pk96I4Rnv4OzhGe/h/OOb+sOpT
9aOmFwigeh+gA+N5+IMGlLifXqexm3A49/KQr2WuUubbyCuXm8vvSYEOfxG1
/9qo5RLtL9LPO6bXVook/lQWbwuY0ayMB9X7QXv4l4D9XQI79Psh9fmD7Xrf
L3u6gBWeh/8a8cjKtS+nvx5a0Af+z53z/qk3NLIA4cehK488XG9BeOKWkOmT
syWG/xv99Q566Xjrr9/kT21g06XIlkG/CN9utvPtsrM/CIcdaL3H4XgeYejr
Y/0vWO6t4Er6+vRWHX92a+FCdMTjQQc+fStHX+Rkthh8NLvGw67hypvjw7Rb
y+WIulnl+z6xDyN/YnnPue9aWwYRrq089g+8G6SUeljk092Zr8j+MDSqZJdp
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
25v4y/jWyB1Xy23zp/ibhe/JTv1LuSkvnXb1ezYiSzQ5f/jM9tquhPcl3pr5
/rILfa8G8+tuWj+az+mm9SOM76Oh/crl8TYWd+OJ3jlihTGnYSJhfM8C81XC
drE4flvel6q7M25O93iJ8b0LtM/5MG/j2B3yfk7BvDqRf5z67/2qAYb+rqE1
Bc1Hu+urct9GCmVCS4fCDpUfkX8S+VuQl9HjJtuvuSrrmSG/Cfr9hseLiyvh
X4j+LbHNzbU5uSQ/7W9USD9+Ooe+j4z8DdChDx8Z/Hp+6KB40l//itdWnJ8t
scP5vE9xx6W+nXZ8xJhGunjC0PfRX4shNXzbukTT80nxUXPCpsQQ7ubQoU/3
PKkP77Hbe3N3xRjC0MeRH4T6z53dpxXe6JFB+TXVFy440+1BOmHEc9D+3J6M
I4HeaUS3zbD0sXqUQhjvszKh5IN2D42ifZG/sidbxoulJfZubeAQQfm9qCdd
zjk+yvJkCt3fL2xouun7xzTCiK+g/eLHIxrXu5JO9Pfj1q2zj8ggDP3XynLg
k4pxjwl7pW5sXKOGrEe2zO4Px/BTj0nfGWp1c+S5BbL9ilLuuxIdAwinfUwN
f/HOj56/cuLkPyfmSPqwmoNser/3Emuvbvu4tU+WqPSg4KT9L9ypvWub0hme
i7xI38H5A/0FGOuDeOzQZ/ZjjleQ9cgK9e84sOEMWY8M/nZL/av0sQ8cyN9u
VaHitdXPz1I89EvfbK+HnS8R/cmSiDiboo4kP/B9CWD43yE/Lo5PmhldwoNw
rzoPziza5kH69r4VdxqnugrCqL8F/QB0nP/m7z/R+Q+M839IodZ7f/jE0/lv
a3RYkV4+geiL7ta+tMhZ0sem3HBfO03qw93ebevlOSOW9F+OUQ8M+hHyr967
j/B72lTWBzvza9qtjiWl/gB9Ce3n2D359cNK1l/x8bDNaNpermei3y37iK4p
pI919xrh1XHwZ8KjR/XcXXC1rAdWOOJQNf1vWQ+sR9Alv1rGTMKbLBrGBPYu
SP2vG91z++09EmN+NmT2XDNpViTNz8ymjzWzK0v9akLfv6e8XynpSyv4Dnz2
MFIx9ki1LPAqR3m+86Im49ZF0f5KrcABhXKVbqlb3/W1cxBOFmNfNN+UQ+/j
kW9v+Aiez4l4IPLPQcf3pqg+ya953dbby3pbz8dm1s7tIDHiS9Cf8P7Q//D+
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
o3B5yEbjYLsC2S//B22cmC0=
   "], {{
     {RGBColor[0.237736, 0.340215, 0.575113], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmFtwVtUVx08+JfnOOfluCbfckw/eKjC10A5k1AqWy7QyU0uo2gpyE5/a
h/alxEHrmw8VgV6gFNH0yZliiE6dcbSl9qqt2GpFGEVEucYKGBKq04vj/5f1
z7QPe/Y++7L2uv7X2qdv47dv+1YhSZK9DUlyjfpaY5L8VO1X+ujMkmSn5h5T
69F4l/rH1eoa71Y/pNam8SPqD6jdUkmSN0VsWZ4k6zX/pOZ+pPF00Vt3bZIc
19p7xSR5V+023Xe6GN+Ma77zmPa80pQkr+v71/qeWYj9rdrzhuZ2iOajaptE
fwR+RH/ltCTJ1Q5q/2+5T2dOaX04TZITOrtO3y0at6p9VXT+LT6PidbSSsjU
Yzl7sxgj492cRy/Q07kzxZBnQyHGM9Rv1J5DmtuvPZ+Uk2SFeFhbCn6Ra732
jOjs2WKce0H8tTSF3g5mwcsLOtusMzWdLanvK8SeDq09mYVu/qA9azX+hc59
oRR3ow90/pZoX9AdNX3PbRYNrZ3U3loh5tBVm8YzGsKO27X3frVXxcvbjTE+
0Ri2wUbYtazv57X+BnOidVBzO8XDN83DvGqSrBK/z2nPsNou7d+pdrQQcjyr
uddta2x8t8b7tN5vPziUxhrzi9Pg/y6N39HcqWLch87OWeddWpvVEHZ5Snsv
aX6zdXtB442F8NnW//Mhemy7V3NVy7NUNippfHM5ZNzr+aPqD18T/ranMfYg
243i9Sa1tbp7tWR/WPT+VQmZWcfv0RE08J/PSi/PyHafs372mM60UvjmE6XQ
1W61B5I4B2/w+5Vy8P9l9UeaYh/6nK5xWzH8AR3v8ln0Nt92Z99Ox8Zr18Zd
7FlRDvrL1S8sxh7micd9tsWQ+Gy1zeAV2ZHpFdm7V/3pLO6Yl4YvdavvUVuj
uT9rTyd21p5/in6v5uvYIg/7XNH8kMb3ajwBfuRh8w+z8GN8CZ/6cR42HNP4
UY3v0Xg8i/u5r1v90+onirF2sRjza8wXetgvWg9OC5vdoPZzy4TNwI153jNX
5+vmk36O2oDo/LIp+Nyq1peGLODLH8XPbDAoiznWoPFaHv0ZzY8XgxZ0sMGw
fYNYbmuIeCemWx3XT2XhU4tLQXOSp0Lsr/sMfj1q38bn/6HxpkL4WacxF5qc
gT6xTByj064s9hDvK6uBp6uqETeXHTufEVZc1fx3Nf9+MeiDd7PT+GaMburm
D17g6Wvm7bzH4ExHFngEf5wFb9A9NgAHOkSjPQ1f6UxtV2PFkO3E/R/43mFj
EpiAHMgD1j3hOPpvOfxtSmePOA+h+2ItSR6S/fdLvvYs5g94nW98+Aey3dOS
fUE1+G73HvSDb+FX4GWXdYjOLnl+SRoYCn5+yfmOvNdtv5xleh2+q70QuoIe
fnmj8QT5thv3wGtwe6A57uw2PyNZ+NSr4ndFJWy8shLyQQtfQp8fFiMPgeXs
gTf8+Qbfldbi3nNZ5A7oww+5cTSNHHLRMmJD6CEPuHuyGLgMJn+s/qNixAln
h80/9xA38PNyc2DQEfVXtGfMMTvSFDKTi0+ZJlgw6hx9l/P8euc21k/6e9Q5
Aj6hwb3rnF/IJZNnmgIr4eG+SowHK+HjrJF7wV14AwPPZqFH/AXao5YFeu/4
3pZC3An+LTK2g/HrrRd8fziLOHgpD/1vt+8i09uuPapp7EeH6AMsQycfOO42
23c2Oc9xlnupD8D+h2zrQ1n44BGwJwv7kBPPOzapMcDmbsdYl+MMmtQsZ51P
ufN93zdhfrYUYh6sgZ9z3r/R/rvBNQRzZ/yNfCfMJ/PkY/Zf8HiDczo6xdb4
DnGLr9znWoK65pLvhR/0g//Bz7h78JB83uo65Wop8vJ5dJBGDOD/g1lg/EAW
NMYcF2A/OWCqFmq3LLONSXxvsd+js8E06kNyR18WZ8AB9Njr+pD69Hva9/fG
0CU02Mf8Udeu0Bj03T3Gkin8Jr7BLWpL8gt1bt20qVveNK5Tj5Hft6XBD/2g
x/TbTJ/GGAzEPtCb4TbTMTVL6zN9Hzrrsp9wjjs4i4+DHVMYRdxiJ/CS8Trn
4jHbhv6K9VxzzBAv+PvkuBDxUjMP1FnIhlzUH+hpd/K/Wgr9LHBOLzmPwBvy
Ur+QW3e4djrm/c+5VoXGfypxx5ossHqx43ptc+DiRB76PW4eNkzpqSFoQZP1
bmMldjpm/e53HsGP4OHmPPLbN0oRR1eNdfR8g903VcJHNtfCnyesN2ou6ryj
zp/tzqED9uE54vfrpXjb3G7646aJbha4nqk7TogRciPvIPCtsRTj/jxqDOKO
eobYY9zn/iPP394cOYJccVlnluvsGtHYlgX/yHGvY3ir+4999ouWcWst3llv
2fbwOc816gXbgjH9EtuXvt/j71QDp5eL3upq5DLyHj6AvtBVpRTjcinyDr4K
P/TPuIbrN33sjRw11yF3lKIuv7MUOL3EvnF9Nfyduow65bzjudu1B75B3Lzr
uKImGnf9QcyDEWADmDwnC1uA2dSj8Ii/I9eQ8aTX+8Hpi861860f9MB6n/EC
3Dtun5zUq9+wtTTyCjllifHwDtnw1nLU96vLrmWdl+/X92LNj+WBD+AOslC/
Ut/9LY+YhSa2+2setuWdzdvh88WIPfQAjvAuXVSMtQccmwu9h/d3i+mcdh3/
ch7+uMj7qafBod/n8X4Ah1/U+HIWGLMjj/cDuehnebwHiK3H8pATeckDvCuw
+cKq7WPeJjHVMmJTalDyNG8MctQev+tnGA//lEftybt/fjWw7rpqvOd51w+U
7Bem83AeduAdT52LbvGxn+SxTl0Abe4g54IRrC/NQ8fYDz1Rj6zwvwvyT6ff
O0v9j2KZ+rY0chX8PViOd/T31e/Lox44ZP3BW7vrjenG4g7/CwCz7qlFztpS
Cz8l3+CTW1wrtLmGb3PNULc/P+48VPc/IDCU2Lq1Gny1OY8S/+AAmPG7POTm
P9Bf8sgP/C/hH0yL+dudh634z7GyHP+AVqk/nIdf8+9hmd/qt5Qjz862jPzf
gcZv8vBN4hrfI6f0O/8eyAMvR1wrzXVs0uZYdvq5lpEzh52PehynxCD1Y4tr
SN6u1DI/FO1PAfCYYPA=
         "]], PolygonBox[CompressedData["
1:eJwllEts1VUQxsdb7i235/7v/d+0BokQqS2o8UGCLVjqg1IpLdgqpQV0YQwB
IhsxwQ2PRGFDWIgRfPCwPnBrVWLiUqzim6IgCjEhMSFiTEyqJCRE1PD78i0m
me/MnDlzZr6Z1vVbhp8pRMRmZBrycD1ifjki47C9EtFfi7hQingP286miEXY
Z2C/CfuXCf9qRBX7z+Al6I/icxA8UIx4PIu4A/+r0yOexn4U/1vBF8HDN0Qc
ALeD/wCvBr8O/o8Y4w0Ry7n/P/oQ0kK889xfgb6dfJobI64gd5Lfat47i/0U
uD+P6Mj91sfgTvSemu0/IkvQB4hRRz+HzzL0Ee4f572fONuGfjv5XCGfUfJ5
K/lMNsVQrEFinm5wTYbQ/+FsH7U5B76GvgNpaXSOyrWM7Mc2Cf6LeBk1qfO3
PmQq+Uy2ZnANWy/4l4Jz+pe7o5lrcYbmnOS/g+RztOgYFWz3ke9M+vEBOXzF
3YXgG8Hvgz8HD+SuzSfEe4H/7uHObu7uJd5vxLoN/8v8dxNvvon/Y5wdKrmn
vfg/kbmXC/F5lvfn4v8n+gb8D+N/d25uHOONe9BXcf9wyTXu5/5KpLnkM9mG
kSMl93QQ2xvJsaaIOY/Ybyfnoh6oFwfB6wvmiLjSw52sZI6Ja4eS/66clNsY
+MPwn/S3V5NrcQncBn4F/FTBHBQXJ8Cr6HUzNesEfwpuwV4Hd4DfAR8Lc1hc
fgn8JPYL4Dngl8Hj2H8Ft4J7a+bCGGc7yK+tYl0zpdlaRz37i+Z4MTMHxcWc
O8vR51PDjxr9xhT3LyEPTnPP1Ltu3ktFx1gL7kLWkP9D+CxG/73Juu6sqzgn
5aY/7+duNTPXxCFxabJibh3g/aaaa6Raqeav4d/H2USDObms5hqpVqrRZ9jX
cn/mdHN+J/axirmlM9n6qv6bOCVujfP+u0XPzBB4tOJd003MFcTeiGwre940
293gW8Bz8DnFe/fmnm39eQH6SOZZOou9J5mj4moHMpFbpHciW7AtJt7ssjny
XXKP1Wv18Dj4fnBr2T3/HvwAuA3cTvwzyRwVV0d4/0hyzVQ7zbhm/bncu0k1
25r7T/qbdsaainNQLuphidw31L2b9OdNdXNK3BIn9yXPrGa3G5/d6JPJb6sm
qs2J5F2smdfsn07eXcpZuWsnazdrZpai35V7VsWxF/H9InkXa6drt38NnlXw
TtFu+SZ5N98M7gL/De4quYfqpc5k051vk3e0drVm/hH0H5Jrp5qqtieTe6ke
qBdLk3unmM/jv6vqv2pHaFdcB3yAyFs=
         "]]}]}, 
     {RGBColor[0.2658528665694387, 0.42588279541742435`, 0.378908018447751], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgm4ndO5x7+z9z7D/r49nYhUtW5qyGgs4hIJUkM1iLElQw0RcTXuVfOQ
UELRUi0yVHIiiZyEDKLJOUjV3CuRiYgEh1LtFVdL1dTIgPT/O//Xw/Ps71lr
r28N73rXO/zfd307j7zgpP/JJUnyZj5J9EuyYpKkeuar/nR9kvy2kCRd9Wwp
J8mf9L+9miR9G5PkpIYkWVSXJGfp+bWex9R/tiZarfodeuao/pzKCXrGadw3
NccOenLNSdJdC52fJcnAitbSPMPV9mYtSa7X+wmlJLlb80/T86uY+7aY/xit
/ab6D6m6jXdd9ZyiMf009h+icZbWXRljJjUlycnqv6PWO1drvSw6PlGfdu3v
M737ifo+LjpqKv+cJsl5qu+p+t9VX6Pxl+s5Tc8rat9D7X9L/Z/27npmNro/
/9dpzhf19FJbq9pWqe03QcPEJvNrtGgcqed2tR8gWkaq7TzRNlb1bmrfXs/e
ojOv9n1UHqInU/1QlfdozhUad6ue6eo3VU+mepPWXKv5G/R+T/GhXu2Xipdd
RGuznrL6lNTnFfVJ1Wes2l7RnIeLh0fqeU31o1SOU/sbqh+t+lsq/0/Pq+L5
ONG3RHsapPJX4kM/lXto/uvUbwe1X6+yX8199leZ0zxPqk9V6+4uegqi56qq
y0/UZ5bmvEJ9ntf8A9TeR3vbpv1/oLE/Vn216u/qjN7V/1M05gHNMblgWWDv
cys+0++rva/qieq7q6zTHs/X/sbomaR3N2jMR2rfS/Ms5pxUDtR6a9X/EJU/
0TrD1Oc90XqL3q/XszIxbz5u9B7aNM8U9dmmeUarfpTq0zXPG1rjNfVdpWeM
2oeoPVGfjXqe1bwbRP8q9blIzdfpGV+1bCPj9Tmf21S1j9X/z7XWOJUDCuZR
D73frPEXav2OzOe/RPUX1T5c73+nemveZ3RL0Fyv8beqXqiZxof1/qCc5Wix
6s/lzKdFqq/O+WyhnT3ka57niMy0nCr6U+jQGRVzlh/ksnvOeo1ebpfzWSDr
38pZzl/VnDfp/wTN+VnV9cM15zdy1kX0tF1r9ZUcPqjyR1qnqHlfEk19Qr+h
CRuxa852Y2ne+4Lfp4XOzVafPvq/k+qtql9cs1xdorJDNExM3E4/6pP0tCE/
Klv0PKR+56vfep3VE6rvJ3oeV3mBznGE+j2l+k+jPkznMEK2aZT6H5OazrOC
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
tjW1bIKPsDenh8/9N3NAvdM=
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[
      0.31717882309348977`, 0.49325857650857363`, 0.2653211110653636], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgnUVMWVx/tb+vv669fvdbc5o7hnxlGURUHJ4LjhURjFDdkTI3FlFRA3
RBQElKiggPIhEIzLjBtqlCSKKAIq7hsqouzguOOSiKNsEeb/8389J+d0napX
r17VrVt3+d9b/a/nX9xjeG0ul5tSl8vpl+vXmMudrXK1OhfX5HKjVA5TWduU
y61Raav2KtUrVdqo3VrjZqneT2WLvvtBZT9NNKCUy+1dyOXuruRym/K5XLU+
lytr7GCN66DyrtaarXd7aMwc1Rv0vEzlbZVD9f551e+otFe7ncpStd/XmitU
Wuv5Uc25TvOtUv8Gtado/vla9zj1LQqaf56LeQbGPMzL2h2in9Iu6GkrmreJ
/itFz0at07/G+x1Q43me05hBWS53YEMuNyQzvW1jnV769hz1L1H/GPX9KvbZ
IdobY532sdbG2Cvrf6rv3lK9Luf9wVee/1rO5U4RPY+r/kh7nKo9zq4171mX
9TmTQ4OG8WpfIn6uFB8W1PhcfqlSpzlqVZr1bZPqgsoMtZ/Uu9vj7O5T37+p
7KlvH9Qefqm1TtKeemvOuep7VeM7i4aCykN6Hqp1fhTdb6pcpHGt9fyE+Haq
aL1Y7e/Uzqt8pvc91Xdm5jNbmKpd9tl1TnK59Tnvlb08VbH8vaT3r6l9jOZ5
XfVSPf9G/cOqudwzej5c/Ysq5if840xf1PN/qv+leN9X9PdR+UTrPqV130i9
Tpvg2wdNlqcL9FzVfmaovlBldpw3PKmof3qNx+ym9sway8SJapdUlql9uua+
QOu8qefNmu9blRFaf1LZ/JysuovepSrvMH9R8yJj6p+gsqfa16k+R3W9eLVD
tP1dNF+r9reqX9F8vTXfvHrL9cA4025a90L1vaV5r9HYDqrrVa5S+3B0WeUR
zdtZ8z6sepCeHxDPW9ZaJjeG7KF/4zTXf2iuRo2bqu9PEg/v1ndj0Vl991ed
7w3q/4foma72OLW/U7tG4yerXau6tcblVR6Dj3p3gPr7Z5ZL1toQ57w+5Hx1
k+0IPN+g+ong/7om2xr4/KHq+cHzRzTXq6LzM53jF6r/RWvdWWu+jgqedJU8
7a51u2eW7QGhs3tozOiwZZTRYR+wRWNCRw+N8cjSguAz7XGioZ3KMPEpL57U
aP7t6r9Ye27U8wjVu9S3UzRtCzneEPucpbNONeaKsvUAPV+r/sF6rlH/ENXr
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
         "]], PolygonBox[CompressedData["
1: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
gjGasJruhO6G5vQO/IWR75pipGLlFOWXrH3IlzC2sLbavk585jp7+bypojGB
sEFnaC3jvS0Mm/EZ6CwO5V2bXEfbawXXmKo1tV8/6t9a4tq+NnOolpjEK8Ze
lLjGVa2rNfdG/iH0WNpD7eVc9E0yrrlVe+uflv5taQ5r0C1L/K9N/4Te0FgF
z0U1tmptYWZhZ9X4Gwr+R6d/dVnO7yr4GrFjo3Ja9dg1kmqlxtBE5aKcc4ti
nmJfs5xzRX/knxlvSuxaUjF+Kvy02LFAMekpxefQvlRzqfa6MvbY9aCR8L2Y
Y6rYa5yn+Mv4NbPGqMKqM2L/G1LMmxm75lK+roY8KPY/P/37EyZ/LbJP+dY/
xznIX4S2Ff7Rv8c+se+u/mH9wtjFrOmxrGOAYsGtobGG2qSbxRorZV1jVsu7
RhGWFqZWbS/MLOx8JvS87lvsvVHOUe5RTlKs7oT8X+SPY//70BqX6N9BZJ3W
p1qkZuS3oTest7wjcq5QjHw3Z0wvbH+q5qx/YXljWf1T07+1vpHnIgwkLDQ1
sa3WoLW0S1w7CkMIS4xI/O9MmORu1V+Ja2Odic5GNbFqY9WUFeD/B/Ze9m8=

         "]], 
        PolygonBox[{{2871, 2870, 3409, 1348, 3410}, {3495, 1437, 3494, 3327, 
         3328}}]}]}, 
     {RGBColor[0.49119505154474363`, 0.5976687059991909, 0.2498845287353681], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnuUVdV9x88M9965j3PPPRODJtrVBQamMSsJTUwipk1XNBEU0qAQbJZG
IiiCyAzyGkBEBJWHDY8abU2tNnUtK4IQzWoaREwDSkBAgayEZCUYkS55ycOk
Uh4zg/1++P5c9o8ze999fnvv3/49v799pu+YScM7mpMkOa0/vdR2VZKkW8/j
hSSZonaynqeKSbK9lCQ9alfo+c96kmwR/U/Uvi+6qzXxRf0eV06S94Jmjp7X
9VxScJ/2k3q6RXdMv69qSpKf1b3PkTxJ9mnsqJ5n9L6WJcl8rVlRe0BjB/VM
FP1O0e/X+9fr5nF3i+d/ruR9O8T/7a1J0qbfa6tJ8mYtSe7TOqnWmdvL41M1
f5XmrNQzQc9RrdOmtddp7nm9vB97zRNdf7UvaHy05vfV3JvVfkJPl2j6qh2q
sZHql7XOZNFvEe1vEu/FPlP0LCl7bqfW2i5+t+l5o2i57Sxadk1qd+m5Rv2D
Wvcu0R9QO6no/mz41O856h9RO7no/t0aX6B113zAp9Y+oj3/sdk0vO/Sms9r
zqfU/0aaJI+oP0hzH1Z7r97NFe1der6kscv0DBbdkxq/VP1NzeaZ8RW9bA99
1B+nvS7TuTap/0+iuVN7DdS809Cofzl6Vn+8aDpK1ksf/T4m2n8Wr+/XLYNu
tVMz7/OZmvVyv+jfEs0bGp+m/p6QAzI4pTVGxXkzPX3F23OhuxFF048V3fcr
1iP6/LJ42KzxR7XHhWr/rGQb7K91u0XzhZr5xHb5vU/vn9Dza829WW1XwWf7
j8w6+5NkuEl8/xr9pdY/tH8hPrZqfLfGd2n85+r/Sv0dqe30o6L7neiOa3yY
2tUN+Y/43KY9Pl+ynXyv7HdDND5ec8cVbBcXhG38vtm2NSV8Dx+8tGa5dDTZ
brE7fGizZLKHVu9+m1i/2O2K0MNGtWs1XpSfvKL+q+q3i+Zn2nO4nsdE21L8
0BZoJ4lmXWZ7/V+d60nxO1rPt3W+RRrbqXnXFSy/3iWvOxp5F2wT2NGXwpae
07z1mvcL/b4BO9H79oLnMBfeR+psJ9Xu0lk7JK/D6n8Tn9ZeD4p2gH73iP9F
ah+v257nhU0vz6zvkWqv0Zy3NfZa3XsjB2SHri4Ke1ge8Y0zXpuZh2Fqv5vZ
5kepXd9sPdwmmi/UvdcbWvuFguPVLYnjID49Vv2BRdPAV1E6LegZ1Mt+f374
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

         "]], PolygonBox[CompressedData["
1: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
OsMOZEP128U+4x9i5yDlItVE1cYH4DdOOcbKkE9yzgWy8easezL1Zjrju4Ua
qlr6CBgCrs7Zd9Tjq9c/VohF+ax8ty78a1Pu2dW760w624fonMF4IDoap/2m
OAXvrazPohykXNQydC5uCzrDXw2Wp9wzqXfSnepu++BfWznPFb71Ttln6uRs
c9leNjujvIH89eivD+6HXgo6pd3zqvedByrSjlHF6oLYvePXGT+oXoTxT9KO
0bOhc75yv3q2GvVP+MhGxQLjLqF7QvWGqmldE9cY1Zo5jMPEbzq97VRDhkfO
2crdynHKdT/O++1yATwM3S92ryAbyBZvRn67qaaptg0p3I16evX2qhGqFcr5
yv2zwYRi5zTlto2JexG9MTdA94/d6+hOBkAPzfttdgkMg24feu/PgdqJ3zx6
+8xmXKJeAJnKjHvAbdDHVR/SzrnKvcoRyhX6dkLxqDNlXONV61WjVKtUw1TL
ngxdS+XDx9nvF1nf9VT0zc05RylXqSaqNqqHVC+pOzqgXi7v3KM3ot6KpXon
Z9zjqtetCL33mSCduKapto1X/6feNTY9gvXGoPtI4l5cPdjRxD2qetVpzK+V
+M2jt49y8FL22xX9gwOvWUc5NW/ZP8N/N3JOVW5VzH8W+c2tt/eNoKlihznH
i2zTryR+c+jt0V9+DX6Xcy+t8/0Wuibn2qMeezn0D/TeKfIbO6f3gmp4kX00
n/hNuamQr1U7lXOVe3fLR7LOYcplA5g3MPQbRW8VxVADxp+E7l30Zh8e20ay
lWrETvU7qs8p54B6Ob/hGhZqjGpNp5zXUg93NPSZ+hdqomqjcrBysXqEG+F3
DN2L6U3fTb1y6LOrxjRiPCrv2KsBj+XtI/IV+diFrGNesb8X+TlZ95DqJRXz
86G/jfzNKedE5caRefu+bDZCvWjs/ybUE/4wdk5SblLNah36Ta23td74euur
Z1HvopibGdmGsqVqimrLnsj/pWjNm5HdGTk3Kocplz2Sd+zrDgdDX5f4bPIJ
+YZ6ZPXKymFLYr/RJxd6PvV+uyLXftV41XrlMOUy1eyTsWNYsawer13oGFAs
qEe9h3F55F5d/8E0UT8c2Xa6U93t/wFPBJGm
         "]], 
        PolygonBox[{{3286, 1095, 3176, 3470, 3471}, {3370, 3369, 2916, 790, 
         3282}}]}]}, 
     {RGBColor[0.721171824901331, 0.720895247793581, 0.2843395183362966], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXmQVcUVxu8MDPPeu/e9d8cN1KhYJYmC5R9GCaasGHdEMGoimoh7xYCo
mEVc2QSGAUUZXEHZd40rBYrAAA5CogKDYrlUXDEqWgpEwKgJ5Pv5Hcr80dP9
+p4+ffr0Wb4+c/iVg86/vjZJkgH60059YyFJTi0myeqaJHk3S5Iv2ifJU5Uk
+VWHJJlclyS5fr+s+Wki/jRNko4Vj08tJcl9eZLsr/WPqN+vnCTvab5WtO9q
3Kq176sfqe+zxXuW2sei66ffn6jfVk2SKaI/WXy6aq+j1Cbp9xB9T9WWS74X
tGagWp3aReL3G9EcIXlq9fshyT5W7VzNzda3l7R2jda9SNP3ZyXnOxxQ8jyo
1qh1j1R9PnhMEc0G0a5Xa9X4NNFco/5z5Jd8W7S2qvEHcZb31A9Uv13ze8S2
m3R2qPgM15qOOsMC9fVqbVrbSXTnpT4zZ58k+oJobmrvuXGi+Uh8iuL/B40P
0fwpGnfXHj/V2uvUX42ORLOf5qfWeMy+zxWsF3TC3XFv7F0V/77S2e4a62NS
nfV5q/RwnHR0i/q71RZrfm3ZOkbXyIFe19RZL6+I5mr9fkn9XWoLNf+C6B9Q
u0vjZ6XDNs33F836ihvjOZI3i7uD51nST0+19pLnK31v1LhF8r0q+mv0e17u
79Cdon03xTzfJ6qdqvE9FcuBPLNE/6F00U20fdRv19w2tY+1Vz9926HxpZJt
ocY/lgxPqB+l9l/pbKj6+WqHa/5R9pVM02qsz6kxbtJ4H53xH+K3W3d3uWjf
qNd37fd4rIXH19pnVwfbx1DJ1ktre6hv0Pcc29Z8XZ11Pl3jy7XmW42vlGx7
xG+32meaH5DbljpmlhWZn0Jm8TpR9CMrtuWVccfDcq8fon55Zr/sob4VX1Gr
kW5/n1mXV6gfrDPM15kukl1U1Mol2+eSgm1oj8bXi2aeaC7UtyWSb7zWPqc+
y3yOi7XXX0TTW7TzRfOtZGqUbN+pHyaaQaLfJZpbNL5W4w0a/1rj4/A19YnW
PZhYt8iAjWKfV4Scc9QfIJ1v1l71Go8pmc9O8TlO88dKj49p/4Uar9b5bta+
Z2i8QTR/E/1Wydqq+Z+IZl1u+8ROiQ11sfdUzqX5BzV/kNp2zY3XPmtld33U
bhavozv4zvCXAyreq6t4jlY7W3zmiX4Osmt+lPitEp9niAmiXSYeP1PbpbXr
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
5Rnq/weUchN/
         "]], PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[{{3435, 3434, 2987, 1330, 3436}, {4183, 2008, 3068, 3464, 
         3465}, {3465, 3464, 3069, 1368, 3466}, {2729, 333, 3368, 3370, 
         3371}, {2743, 1471, 3542, 3303, 3304}, {3437, 1331, 2988, 3434, 
         3435}, {3472, 3471, 3469, 788, 3285}}]}]}, 
     {RGBColor[0.8561409047915522, 0.7428592816972356, 0.31903992332908304`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgmQldWVx7/3env9tu+1KBrFZNhER2VpaUAHlIZuFlHBxEQFFR0TURFB
UDNEIyhgZDNIIqbGiQsuqCOuEYJoICrOmMVkRMQNkFVkpzFVSc2Uzv/H/1BW
va/u+e53l3PPfs59Hf914ndvzCZJsqgqSfRLOjQkSXcBdxeSZExtklxWkySn
VSdJNz0d9HyYUV8lSTbU6bvacTWGd2rOFRp/pd5P17hLKl6zR5ok16lvs8bs
1vsOtZ/rmaq9ntT79oB31vnb/ujbEf1H3t8WkuVckvxQa/XS+ldWvOZYtVfV
J8lS7d1e48dVvP7RxSTJ5Lx3SeN3qe8LPT9J3O6KvWj3BHxA7T49bYKf0LM3
xu+O8cB83x/whIrhb2mvdjnT4gztNSmfJCfpew+1GzXmIn3bpPYjPSMFf6z2
hrzxPSXvvb6IM+4NHFj/Aa17icZv1fiPwbPWNO2gffYJnqK9Tkh9/ivFt5Ea
c4GeVq1zutrT9KwWvwZmDX9Xax6nR0smmpKcqb6z4IfGPJoafkRtfc7f5mne
n/X+uPZqp/YJPSO0f1/h87AWOE9j5mhMRf1j9H4FslPnvdl3os7WVft0V/sX
jfmh+t9V+76ecYLXql2h9oxYpzHgDZr7oL71Fvzvqc+9V0+b1lql9/N07t+l
Hts7xg/J+uwXacxr4KkxK9Vuqzc+s/X9oXrv8T2N2ZgxzNxH6027uRozqs4w
NLynyjgvFdyvzjSBVm0hG/+l/j56mvRciFzp2z61Qzmz9v4tfFA7RecfqL6z
1O7TmAOCh+nZKh37hdYaLHqeo0dLJn/S+P6Cb9O4T/V9k9pd6m/VM158+Y3o
0Bs5F87X6Fmh9+ujbY7+VwX3ErxNc/eoHQJO6h+ip4v6Bun9ZY0ZrPYYaK7+
y9S/riS6SrYeLUuuay1n26us05vVHtSYc3SmD9Tu1NxmwR8Hfn/T+G/X2A78
Ru3xejYKPr5sPd+rs3QoW9ZrdcYX9L1VPPqkyjaGsXu01syy7UyzZH+x2iXq
v03rt2RNC87zf/p2pdqbNHZ8xfp7rPpeqfW5ztC3SXV+B75D8BuCx0JDnXV1
rfnxlto39VyB/Und31PthHr3j1T/DYJXCR4leKJwwFhCv5vz/t4/77X5zvpf
afxLem9KrCfoy4sFr8lajF0VvBoVdnd3reXhR/XmLzqDnOwOme9UMd8e0167
U+PWlJr28KFFz4iKedhbdPhjvc+OnJyUWsa6pubbjsR8vzS1Tl2i9nbhd4rG
dK6YPtfHmX+gb7vUzte+J9QYnlxt3n4h+CbB308Nz8kb3z2B886MdQZ9mRf6
8332FjwidBD+wceJah/XWg9o3cfUTtb75+qfoXZG3jB9K7VWZz3L9X6VcP2O
xl8k3C+vWPa+VzC9TxT8ZdZy3Ttke63WvV/9LWoL1e5fmnHbFGMmlTy3g9pG
va/RPu/rGa11s1q3u/qXau6zet5W/4KK7f59am8XfrdoTie1jQXbhpc0fqHW
btYzO+c15qh9NuN+4Dz00Zxm0W1u2bo2qNb6tkhjDum5R/TqqHHLEuO0WPud
qLmPqX2cswt+ouL15saa6BRrolfThO8/aowfe4PLzIzPD42g52uC+9f7XD/T
+Gka30PtXXoWCJ6udnrFPvVOtT8Lv34ztCqapguKpvGsoPMYvQ9U+6jaTzXn
WvVPKTmeAD/0fZjeb+ZsecvTGPUPE+1a1D9A8Oei5XrNvUbwTSXLx4Qa2+Dt
4Qvh9a0l93fQXps1Z76+vVm0zWsNu4etA0aO4MmgeuP9XLXP/mDQYEDAh+0X
e2U9ljn5oF9zyM8lmnuWxsxDf0r+/mjea5wd68BL9OdQ1vTgG/R+JnXMMFnz
nkSete6SimOcllqfr2fBccELJePOGboE34CXhw1vH/3Yuml1tmkHUsPdCtaP
Nq15s/YfnTp+WCA8L0/d/4uwY3fE3Ol1hrFpR4dtwcZcpfF/17j789Y/4Fu0
5qHUfNxZtC3rR3yR2P/hB08QDs+gB1rzGb1v1dgmwVui7RPwI/V+x48TX2Ar
Bmn8+XV+B2Zs3xj/UGr416ljpT7hxw/FXuhO36JjwBnC/73UseK31R4lnF7S
2HWCZ1c5Jnkhax1n3rrEvL2vyvz9NLV97pzaxhPjYecPQtsa0+rYsuF/Ljgu
OBj9reF/4fuhGvdj++ZUHNfOVTu/1t/ob1e27Fwu3H+leQ/gt2qsy/hoaE1M
vqbG/nJzyfAb4ktNzGWNCXo/VuudmneMRixHnPEt4bdM+H1GjJQ6ZjhZ7YIq
+0785tEa87LGfKj+bonXIX7cW7R+oWd9EtPh8He9v6LxGzR+pMb0FF51DY6H
+oZMtAbNmNc1fBNxEPFLY2K/iH8FBgd82R/q7deHxDzWeqfe6+D78EljdfYR
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
9gXzaU/Y1P8HxP9/lA==
         "]], PolygonBox[CompressedData["
1:eJwtmHmUVcURxi+zPt67790LwrAMoOAARmUTgaMnQRhRIoKgxwSQZViM7Its
RomAMKCArLIZkwAOi5gYNtmMICqgRhYFkUWBsAgEjAjEE3OSE/P7/OaPOq/q
VnVVdXd19devbr8RjwzPCoKgaYUgyOF3ZjoIpuYGwUJocxgE+5PosoPgFmh8
KgiqZ4LgOrpZedhHQbAdegL5QQa/DX+K8bXgd/PtNPyncRDclwiC9tAE/L2X
tK4r49fiay/61ujaQOPQV4Eu5AfBeegJdHvxCRuswH4f/FzGfwNfCx+F+K9Q
iZwZm0V+9Rh7FH0n8dCT5Bvg43UmOB0nWfA9oBPwAxgfYn8C+Ub4seQ8DXkw
1BH+n9B6dINCz+069Efk3uRwMds+esbOUblehKpi2598flUxCOoTum8l56hc
r5DzPHK7AZsrjP8a+yGM3cy3Maz9Dmym47sfdBn9afR90NdFXkf+A5A/g68W
euwlaBD6Gvivydg3oZn46kPMvsQvIH4J/D3o70bXjfybok8y/iv81+bbSHS1
oTrw35HfAvQz2ZO28D35FmBbO/Jc3uDbjfBDifkNsb+FaoauEdXKIfzvh29P
zBbETyG3RG7GHnxA/iuJWQvfLxHjWp5jKnZ19JvRz9ec8f8vxmSh603Mttje
zLc3sR/CHl8j9g3Yb8R+DvbH0NXQeuY7J+XWBP0e9KvQ1yReC2zeZ/wuqBX8
NChNboOI8Tz8B+RwGtti9LOxb0nMedleM61dE2wWIW/FZ2P4pXxbjG4FPgqJ
fYZ4L6HvjtyO+FtC696BdsB/jP3oHNfsY4yviv1Ict0NtcW+DP2rUBmxV2S8
xlpr7WEh/O3kMx3/r/FtOPyhyLWgb9JNYcyFwGeuFP5lfM0lv8nIu9AXEG9T
lud0krGVkDcgz0L+HLly5FrR+aoCvypybTyIfiV8TfwVIm+BZuOvPfL90IfM
7aPQe6S9mqiawP5DcjhP7LHU9J6Ma1S1ehkqwL439dGjos/0rUnHVGx9i+F3
QgNzfQbf0d6FzrUZ9qOwv0D+P8t1jahWviivT9XIl/Cfls9Ha3gQvmHKuU2A
riBfgjoHronL8HXSPv//QV6E//eQT2b7DLxI/h349kzgGhvGXC4wpg3yTvQX
4TOh+4HquRf6s5FzfQv9uchrpLX6cY+hyqHPt2L2xb4k9llXPcboppFvY/RN
oH3EPgY9BN8Aehpd69i9bDzr+1P4WuoJxGsAjcT2Y3IeoPXE3w/YDyJmuxz3
9BnwLaATjL0TH68w9reR+ebQy5HPvM5+D3xswddi7M9g3wr9H9C3Lt9vrf/3
oXuKest67J+EvxcqQX8NfTXGX2XMpHx/k66AnAvUO/FZBf4z6AHO9gXkSfg7
rh6f7TNehfyPRD7rqtnKyIdi3yVXkR+RTIwhxO5PvIT6b+S91Bqrlx5QDSKX
oM9Gf2vKuV2FCtDthx7Isc0n8D0i92r1yDnIJZF7o/ZYvb8w416mHtMUX0Up
r4Vqspi1+iv6n+d4D/bCz8q4t/RBn0P8Xcj9kdchT2U9lvOtDfbtqf9HORtV
y8+Dango+noZn6V/Y18EPz/23dQcepixtaBhue5J6k0/MGYGuXVnjc5huzo0
35E134Tvt6Au8PdhswT7RciNkXcSYyByL+xfgW9NPh3J587Qe6Wert5eCXvc
/Vhzw4i1LelaXIJ+MPqp+Jio3kp+h9GVpr23dxNjOWMP6kzleM8+g+/HmA15
vjN1d/4+cq21hH4Xec+0d+Ow+Rv2c0PfLcXYd8F+CzadsC1mPovSXmOtdW/s
t2O/BrkXCXfGZqvwSeS7Rj2xGnt3JnLv1h1UA3k89vdiXwwdYP0uM4fR2N8M
jUY/mW9ZCd8hrUKvodbyfr4dRPdsaF6YR9jnYcZ8m2WfnyC/oJ6RYx/yNRb7
exLGQMJCmoPmom/7kJ+DKpTHexZ+R8Zza4S8Df6U6kNnD/ld3WUZr9Uo5D3I
ExijDcuBSoWFoHoJY5rX4Idh0531+oL5tYRfx7eGCfffP8MXk19+wphsgOpJ
eCnhPdRerkSuk/AZ0lk6Cz2V5ztPd18Z+toJnwmdjdzI2LEPaf0X3/N0pydc
z7Pg98fGglozrd1M5AxyM/TPw2/NuDfdjrwRvhM+Ksoe+Qz8uoyxZUPkk6F9
yndlbObAP8S3JPw/sOke2ad8p/k2PfacNfefIG+MXQOqBfXAp4WH8L8625jm
DvI7jr4z+jGM6Ym/PyEXJYyJU9i/ENu38ONXoddcay+bN+C3p90LtP7N4TfE
jq07MML+FPKjCePTPvg/i9wNeaZAO/Fnx56besJ57L+L3CuEKa/DL88YWyrn
ZfAfpX2XC/MI+/xP+AJfCXxMU26h+Ubs9wLG70obW+pO1N2Yj4+due4RufAF
wiuMfxz7A5ExmrDaJta3KHKOylVn8GLsHJWramxtbBvZChMJG00NPVfN/8vY
PVq9Wm+O21K+w3WX6065JeUzoLPQCx9vw1dk/OO5rpkZjH+f+T2XY0wkbLRK
NaueD98B2gT/GGOvYnOWsS/G3ivVRJew/E7JdU2fyfhO0N3QDnl+OWYrK/cp
37pDdZdug9aSX0PkBdnGiA0i9zT1Nu3h4tBvEL1FdAbmEnsp+rvyXdOq7fUp
Y7E7yGd15B6uXq6etznyGdBZ0Bw2Z9wT1RuT7M9sxs9g/n/P8xtBb4WFyN/n
GX8I++jO0d1ThP3S0GdGZ0c1odooS1qnO3tS5BpXrQvD94I/Hfrs6Yy/Sv5T
yLcR+Y6Cjqe8plpb9YgVsTGNsI1sSlO+M3R3qKaGkf/R2FhKMUr1/oxcW7ug
NrH3THt3BDoKdYt8lr+GukbugeqFmvMv1OtDY2Fh0sOhz6TOps7ssdhjNPY4
/vPQNUkaS+lO0t1UmDL21x6ex3ZExr2rJd9Gwhfh45j6BfrfYDsq5btiJ9+6
4uvXKWO3o+q3yOeIcS3HPXQVY59J+W39Lt+6Jd0jVH/q0WvQj0z5LXtE+4++
e+xc9SbpFjsH5aI3wBT0I7Cvm+03sN7CzSNjVWHeMcgtY9emMIKwQr3I2E1v
TL01hQGEBYQZhR2FIYUldcecJNZdkd9SwoDCguoR6hXCEAvhl0W+61XDquW/
ZHw2NWfNfXDst4AwtbB1WeSzpjO7Av5I0rXeFOqM/edJ88IUwhYDY7+19YbW
W1o9U71Td9jQtDGLsIswVQn6NZH7v87Y6/DzMj67iqdeUS3y20o9TL1MmFLY
sgPrf5hYS0JjGd0ZujuGx377XiNmdeSbyt9reoOMINfJoccK0wrbqoerl6mH
n0QelXYuwpPp0DWiWtGeDU/Zp3wL043DtjTpt7Uwo7DjlNBnQzV8RHgj5drT
fzT1Y9eYaq0IeQy6WciX8vyG01tuD+N3h37D6S2nmlJt6c0xFfuxKY8V5hH2
EYYQlpCPX6r+01479UD9l/AU9vWz/UbRW2VM2m8Z4e9Koe8s9XP1nL6R3zjS
C9NMil3zqn35GJfym1lvZ/XseaExifZXbxa9XYSBhIWEaSbCN077vx+dwabw
t0V+e+mNNjppzCfsJ8y7Db449ttbb4xl2C9PulfqPyT9l/R/ykx0wQ==
         "]], 
        PolygonBox[{{3544, 3543, 2743, 372, 3400}, {3394, 1341, 3396, 3269, 
         3270}}]}]}, 
     {RGBColor[0.8246611724379616, 0.5573803799620947, 0.30772878298746703`], 
      Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNWGlslUUUnbb2LX3fe98rFhFaUMAoYKG4kki1FP2hgthS0dYoYKGGTcBS
XP+5gEYF46+6xACFEsCIJqZAABU1KCq4iwuCIrhHjUjBhcRzek4jPyb3fvfd
uTNzl3Nn3uDmBZPnF4YQHisIoQj0zmQIizFGgN+cCGETxiXgZ6VD6AI/Fvwe
8Lv9TZ4650I+A/wL4PsHyXYlJZ+d1vxtkCWiEA5ioRti0c+hcxV0bgfdiN+H
B31T92rKS0IYBjoadEZpCDNhpxn0EObfhTnfgj6McSb4LuisxLxm8KdgzvWg
UzCuwwF3Q2cG+HdjyyyfjFEPvhH6UwolbwL/DfTuAH96JoSvQQ9gtMJHDaCT
MeoLTc13pPW9HPyatNZ4HPyWtOZ3F4oeNH/Y+x8A+z+Cvwd8BfhfwN8LfiD4
n83/BFpBmfewHWe8O6m4fBeLL4f+uHwIJYwPz5oK4W3ozcP3iQLN59wfvNb3
oEsxBoFfAnqG7S8qEB1k/X2g+zGOFsoO/VALegXWeovnwbr/4vtL8DWgN+el
n4s0l/J/IN+U1jft1BQrXjGCdEtePukD/Z2gbzr3SN8yv8ty5hJj+5rjuwo2
xzp240Ev91pzQedhDA2i/D4LfN8gvgz0U5x5NvjSjPK2Oa38m5WUfAh03odO
C/cJnXX+jfIPIb8V/Aeg870W7c9JSofr8txdafnkEeR5e7F0HsyG8CdknyJQ
v0HWiTEH8t9B12LMBf80YvdMSno1WeX/xdAvwu+XYTwLe6MT+mZ8G7FOU1o+
6cjq913w59Ii7XMjfL4Q8hbol0C+IqE5xfQt+G7v47Kk/NldoDPd5rOUY7Qx
V0FXY16ta6QsJb8zzykbb/+vhV/GgX/RuVFrOe1Tfgz8+ljxWgdak9RvXHes
eepUg15q+epYfAfoO7HyIAf7S4pU188VCrdYs8O938Xmn8Q+R8E5Rwoka3Ne
rU8ovqeC3w+breBPg81FSeER5+6DfAHzGLQvfnsJ65wF/vNY/jk1o7yh/jDj
WKt5xp1zOac2L0obzOWdzueKIJ4+/gT7W4gB02GM+UPgx4HejtHtWiZ/I/ih
GeVN35xqtsL1y/pibTEPzofOcXwPhM7ojGJdnpOt4wXC2Pvyqv+HsPCQjPKy
LKf1X/F+/gzyH7F5IXLxOZy5Aj/0x9gAfgD9BPnz4M+MNZfnORyUc8y9BVnt
fYf3z7i0O8+rnXvLjZmb08KaayPlwt4S1QRr45jzhJS1f3asXnUOaGWJ+s9H
4EsjYVhbVvZol9hLu/wmjrGPvYtRGYTPW7zuZ1n58WrQgUE6Faacc657EuPM
GqVsj+Wb3BfZHwfH6olDQFdkhQPj8/ptt9dtipWfkyKdq9o5z5xmDRO3Xk8q
z5nv12DuxIRizJiwjzIuvT21Mda+uf9OxDEbqf5as8IC5iWxqAW+nJmSHdIi
Y0tRSvjPnLoNZ+zAWqWwuQj8VvZ68G3gd4C/IFYeNRQKE2rNM7/YS3t6Kkad
ey3jNSElvsa6U3rnJoUX5K/0/hkH4kqtceavAunUuKedcC6xD/f0ctvlesxZ
5led1+Vd4+WEfEW63fwi26KdqoT6JrGY95btvv+wboiVxGfi1VbjVF1KucS8
OjsjH/4d6b7D+Zw7MqG5xFj2BPZC9kHWAvdPn9EO/UD+Nczfg5i8EamP8Lz/
uBZZV8SGrcZS7mGHMYE4sSKn/FiZUx7TPmuAthtsf1Ss81fF8lmdfTYiVnwr
QXMYq5hjoPMQ6zXg+8aqOdYg/clYHHe8eCaejfvlXYi9mTHhXYg9g7nA/r/J
Oq0lOuPrkXKauY4letZZ6m/iLDHzj7xwhXnL/OWaXJvxXWoZa+Rfy7kf1hn1
Ob8CvjiG7/MQn9Ngcy1s9fMdiXVEfGQvYI9nf6+P1NuewLp14GPwj+Z1J+X9
l5hJWbXxaoxxGsv02KNd9uXzY9XIhbFyinKudUYs/BwY6z7CHss7SWNeOdqU
V49iT2CfKvbdpcz4QzyqdN8gJhFz6IPeO86EoH1Wc06s+u0Tq0+xhw/3PYi6
nLMP603G3h6MlKujnOeLc/puyylHWEtHHP9258BezL0G/P2Rcnyk57KORvv+
eWdO33fkVB8z7Z/VOeEN7yyUtVhen9J+iBsNKX2zvoijPAMxtxezOJ/1x/ph
btP/LcY05nyd7dTZznXOJ+bFUPjkY+MzcXpkkG8HYUTuzeX2dbV9SmzvMiY8
AKVJsPkZ7C2JtNevwJdldC/8Ajbfc74x74gl24w5jFG3c4lrjvQ6r8R6t7wa
K9a9d4Q230cYv22x3iHbY9UJ45jwPaHbttf4XtUZK3ZHXC8Nrp9u12+N5Z0w
kLF97ifrfGZfYk/hfJ6j0++7dvdi9m76o/KknKv0eY7bNs84MSXcJ+7xjcY7
KO9dfTK6N++NNX+C9Rf67nDI+znkuDAemZPiE3mvjG2d8+QWvxP5XhwBnLkR
/NRSYWRtwf9+594YC9ZmlXN1GvSmQ396qfxabN9yv1PT2nPWe+L6PPss4/xR
KF+U0H2eutOsv806PN8622EtExeJj+xrzI3ZfiPTzzen5WviEu1wXrlxg/jR
z/fUA+CfSukuxVjwDsGYtUeSPeW7L983fOcwdsz3GX7vcI1myzeaZw4024dV
JcJu7rXJcTjsWEwxvvN3+qfYGPVoQndI+oE976j5ZX5rEB8G5CSvyghvfrf8
beMx+y/PTHvER34fs07/jP6nOBgrl/j24fp5Yx0xj+e6Ka1cqfX+6WfK6Fu+
kz8pkc/4JmO/Yt8inv8K352Az/IZvek73Mt4N1tlnXrzjSflKOuFOd7l/s59
NXpvO/3mYP7yrs07Fu9XGxxj9h2eb5nxk+9Inp9npx2es+fNmxDPvGJerDfP
WAxL6YxTvSZ9twF4NBTy2TjTfN+NeUfOeC+MdYv74DzX9ZPGedYssZ13Kp5r
onn67ybnJ3nmK/3ZbBltjol0Tr4tXsxrb3Mi7Xmq85l+ol1i0CTbP+r/Vbjn
5b4zTvC6/wEpEEKG
         "]], PolygonBox[CompressedData["
1:eJwtllts1FUQxg+t3a3b3T3bAkJpQWwBi6YtGLFQlWKr0QdQ26IBEhBQjBBo
abnFZxU04iU+EWOQa6tihBpvCYIGEpGoeKUFKVjq5Q31QQpqTPx9+fZhkpnz
zZkzZ87M9//fsLKzraMghPACcg2SiSHsToSwB8mib86GUI/eWxRCXyaE71kr
x+8Qaz+glyJ70ZdcG8LS0hB+KQmhDrsW2cTellwIJ5IhnER+BpuVCmEK+3cQ
bxfxzrG/E+z5QvaBVbI2MiqEVeDr0YfAN4FvQcrZvzHr2D3gBzMW6X8gVeCn
8CdM6MXna/SFrI1wwWH2ryCXsny+y8n3EfIdBf4SeHVxCAfAJ4K/Df4Y+Arw
m1P21Z516NXg7xU450H01WnvbcM+jL2YGGfRh7lPIu2aqXZ/ItWc1Q8+H//7
kafBR+s84j3Knq/QD+XvM4LMwH88a29x9gGkHL2BHKZzv834X8Q+jTyBvgYp
w38P9h3okfgPKj5r67DXImfA6rEvF/kMnXWetS6wDcg4sJnIlSLn/C74+BKf
pTfQW9yGzFIeyGykMl8v1Ui1molUkd9q/PvBjpPDKRrrduJdJNZE3u8q+nz2
vI5+q2oanONZxceuwe7GvhCds3LvQMaw/7oSY8pZuZeW+CzVQLXYSM7d9M8k
7G3YFeBPoh9RT6pe4JF8JrP2nOqR8lvrDuvRy9LulSFkGW+1NTpWIfV8Kuea
qDa6wy3EfgO8WbmBt7L3g5RjN4Hfl/GZOvsoUod+jhit+LYjW/H/G7mKTCHW
VCQiq5J+c719NzH+5T4tWsN+Frle78Xa+5x1PudY6nH1+hLswaT3ZIh7Jude
uwzeXuI76W6qUSn4BuIvBGvDZxCsKnq29QZdxL8R+yPsRuw52Lt5swUJ11C1
1Jow1fg3fCcj74AfJOak6Dvpbs34tiC/os9ImFO2ECuH/V++P+aBfxk9C8dV
Q/LpyPPBndj7ot9Ab6EaNJB/lv0rk+YscVc/+fyF/2v4JJnf4WjuuIkcZ4ON
xd6f8Mxp9paVmrs03zns5aXuZfVDBfaltPNTT6u3m3PmLnHAXeidGXOVclSu
PVm//U7mfx/6QPRsqsfV68pJuV3B/wFiT4iebcWvTXmmNFtzkEbkx+jeF2eK
O3+KnlVxgLggRnP1aOwa7CPY7eCt5NdFPuOiuVCc3ZFyD6gXLuCzlPw/BX84
6R5QL7yScy+/jF2Abw94U9L3EzcnyP/VYtf4NPG258w14lBxaTbt2OpB9WJt
ng9Uw9/BmrDnptzz6v2jxH8o6Rw+iT5TZ9cQs4/9i6K5tI79i6PfUG/5Of53
g1dkzZUvcsdENAeLi1WDj9Gn47+t0G++NuUaqVaasW/An0m79zWTms0G5HDS
d96vfgNfUGzOFndf0jcsYQ6dwNl92POS3qO94jRxm2ZkF/pUYnyY8AxNi85R
uYpjK7P+JurbKB/5DqTcG4rZG/2GekvlMED8NWnXRjVT7eqjuUXfnEU5f0P1
LdUMdqJ/C/540jVQLTSDmsXPiHMibU7W7Ol91OuaQdni7GPY/yCFRZ5Zze4Q
cizpmfuC2PfgP7fIPtPA3ozmKnGiuHG4xG+lfwD9CzTme1s9oF4Yk/W3ezvx
C1kfm/W3Uv8Q+pc4mfYs6Yx7M+YUcYvu9B36jrR7Qz2p3twbzRX6Bupb+D+O
7xmM
         "]], 
        PolygonBox[{{2842, 1912, 4068, 3880, 3881}, {3889, 3888, 3891, 1729, 
         3890}, {2845, 1915, 4075, 3893, 3894}, {3268, 1230, 2674, 2610, 
         2611}, {3884, 1723, 2675, 2618, 2619}, {2611, 2610, 4067, 1912, 
         4069}, {3881, 3880, 3883, 1723, 3882}, {3271, 3270, 3399, 1342, 
         3397}, {2844, 1914, 4072, 3888, 3889}, {2621, 2620, 4074, 1915, 
         4076}, {2619, 2618, 4071, 1914, 4073}, {3892, 1729, 2676, 2620, 
         2621}}]}]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], Opacity[0.6], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1U7tqVFEU3bm3y5m5ZxwUYogkoygqJpPEEMQwGUHskilsHUH8AKfx8QOm
sbATRecPAgmpJKmSQbCwscgHSB5FQOy1ci3XEu7mrLPPOWuv/bitp4OHz4qI
eAIrYR3YOmwN9jNHvIezMy4jXoKvC/wB+C7wCvA74FvAFWwTZHWst+F/C/+X
WsQ+fJ+AH4FzD/gx1h5sA74t7JvAy1lnl5LOVmFd2Cx43uDeJM7PsmKt2LeD
+63QyljzofVzIfyxVOw+8MWsWBNYb2TdmUSsMkvb+SriNOs9tV8fl74M3xDr
gXXfsU7qpY8x+q4Zz4l/1aSP2m86FmP2XVfe3S1UT+bKc+bFfC8nad6uQ09S
7D/ge4D9CP6vwCdJcS9UyomxWIfXpepfWsu660y97Bd95Bgar1kv+7KYpWmB
+Y5FDGDHIT7WgT1qwI5g50I6yHUfun7XxM+5eFFJGzW+qhSLeZBveUzvv2dx
ssbcF+ZkDaiBdZhwv3JSL2dCOfJu0/d5rx06P7RmfP90DxxrVNN83Kurzl3f
b5mjae55c3Hu5ozrnucqyd9zTRt+M22Olvdta1r1TP6Pc+y6Ndz3nu81nU9p
rrZjU/vQucyZj//ltaSacxa2PPvkWHDvppL0dfxmxjGp8UrSvO7g7besWfmR
pIt9KTwzB/5feI/4ZaU9Z5Jzwrkkfl6p99RzNUn7tGNyFkb+X5jLoXu/6X+d
+XL291wL9ob1aoDnLxH9e2I=
         "]], 
        PolygonBox[{{2845, 698, 919, 4076}, {3898, 920, 698, 3896}, {3892, 
         919, 697, 3890}, {2844, 697, 917, 4073}, {2853, 706, 920, 3321}, {
         3322, 924, 706, 2854}, {3700, 704, 922, 3701}, {3605, 922, 705, 
         2851}, {2831, 686, 901, 4048}, {2842, 695, 910, 4069}, {3866, 906, 
         686, 3865}, {3855, 901, 683, 3854}, {3268, 910, 689, 3266}, {2830, 
         683, 900, 4043}, {2832, 689, 906, 3310}, {3604, 923, 704, 2850}, {
         3702, 705, 924, 3703}, {3884, 917, 695, 3882}}]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{3040, 4043, 2830, 3853, 3854, 3855, 2600, 4048, 2831, 3864, 
         3865, 3866, 2605, 3310, 2832, 3392, 3266, 3268, 2611, 4069, 2842, 
         3881, 3882, 3884, 2619, 4073, 2844, 3889, 3890, 3892, 2621, 4076, 
         2845, 3894, 3896, 3898, 2623, 3321, 2853, 3395, 3271, 3397, 2854, 
         3322, 3045, 3703, 3702, 3505, 2851, 3605, 3044, 3701, 3700, 3503, 
         2850, 3604, 3843}]},
       "0.432`"],
      Annotation[#, 0.432, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{2602, 4446, 3856, 3860, 3858, 4447, 4448, 3867, 3871, 3869, 
         4449, 4451, 4450, 2607, 2672, 3868, 2603, 2669, 3857, 4445}], 
        LineBox[CompressedData["
1:eJwV0DkvRGEYhuGPggRjKyyhGQkaW2WpSKjtiSEhoaOYscUPsBcqldq+VFOo
rL+AwprYR+J3uE5x5z7vc573fOec+FRqMJkVQljCeV4Im0UhLBeH0FYQwgqv
mzewGAuhRDYhK+VJHs4P4SPqmN94jd95QffWzg2uMSNPy7P1t3nAfCw/wSnm
9WOyMfcKeZyHdF951fzMK/zCc7pXdi5xgWn5mTxLf4v7zbvyPewjqZ9CnnyW
q3EoP0CbftrekesX396nk1viPNdrek+cY96R92JUL4ER5ESz/QSazU1oRJXn
/XGH3XquQy1+5d26Ge7hdvcz8krzN1fwT/RO8i8uj/4tl/Ent8o7vVMLz6FG
FscjHtAgS6I82sE97tDlrH8+VT4Z
         "]], LineBox[CompressedData["
1:eJwVzj0vQ2EYBuDHYvD91QUVogOR0BYR0hBdSMdOnc2iCf6EX6FCzGLoH5BI
JO1A0qqPRUgI6WIyujpcuZ/nPud9z5nZKxcPuiKiRLs3YnwgYkle9Uek5YS9
ezBiUmbs1/qsTNpPqXBGQ3/ivWpPxK65RYFLzy44N9/1RezIW5mXKff8mTed
WXd2jVV++CanP2bZnOaLTzZ0RyyY5/jgnazukBt3vrm7LTP2pmfD9oYckY9y
Rf8kR+0tOSafO9/XV/xbfihim4Q+pf81z8pXXlj0Xplp8xQP3DOv2yfRuZs6
Nbac/wc/3i9X
         "]]},
       "0.41600000000000004`"],
      Annotation[#, 0.41600000000000004`, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzssqxGEYgPF3lJTTYA4UGzOslCRZabYWLCQ1oklZKjPOxrGpYZZyB5IF
LsHSBbCxYXIHcw/ym8XT83++t/f7/uPbldVyIiKKaPZE1DE6GHHDH90RDR7T
t/ys9zil9/lbV3hIl7moDzitD7mljzmjj/hFV3lYn/GPPuWsPuF1fc4j+oI/
9eRAxJXvPF/yBL86n+qL+OqNmOFpbJjldMLuo3ne2Z1e0fc8i3ks6jleck8a
WVwnI2p4spfTD+Zr7Xt4E1tY1iVO9Ud0ogtNb+zyjtmb3V//sGC/gD/3dXDg
3d4/HG8okA==
         "]], LineBox[CompressedData["
1:eJwV02loz3EcwPGvUO4jzE2kiIfi+ZBCHlAo15hiMzYUJdcwxzbD5r6ZW9iy
trmmMPdsjLV4sJm5niFJSnh9H7z3/n7O3//367tByRlT01uEEPr5M6ZDCIu6
hNCdF3IPTuFunMY9OZUTeDFPbBfCUu4tXsJ9OJ178aqOdvIJ7stju4ZQzneQ
j5bi++YPqVdyK3GBfB12y9Xz404hPMRaDMYQDMTPziH8wBc95Wbr9U/AWbXT
KHR+rDaeH/A4/tw+hF/Oifq/mR0q/srD+DuPle9pdrg4gUdwot/Uy7mVemv8
Mb9cnIFl2GxmRTSykKje6FlNuKdWJFeMBvm/4q2+zSTnvXbtw36k6E1FDrIx
Q08ul+mrRpa5Sju2cIX8SCxBGpZiNEbhiF2HcQhFfvtoe/6Z+cDn7SmVL0N5
fK7+5/Ir5at4VXwWTzH3gteIa3g1H9B73MwxHMUBuWa1oPcLXxRfl7+Bmzio
v1Z+nfxLXs+veKr+Ot4kfs2Z8d30njJzEicwWe49mlCo5zSeevcqPMM/Oxq4
EXfNTjOT4x17O+fG7xS/O3ao5yLE+8HXUYIylKJZ/ozdZ1EtfoEatJR/x03x
3tkz3f48e/s47+Qn/Cie1fPivdBfwXdwA7dxCx/kz8Xvjlrxa7xCm/h+8fnx
feyZaf9ue/s65/Ms8S61Avw2m89tzeTEO4FtyMZ2fJS/yJdwAVdwGe3l3/Bb
zLZvDvbY3d8z9nKSeC5mq89Ch/j/Fp+FPOzCTnySL+JiXEUJrqGzfAM3Yp49
8+NdtneA/ft5gTgZ89ST0EV/Jm+MdwIb4p1AFv4DeResRg==
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0nloz2EcwPFncp/b3Knx4x/kyNkcE2LOEM2VCPljJv5wz7HkGtEkSe6j
jQwxlBQmyZWcKckROcYOx8wxw+v7x/v3fj7X8zzf7+8bm7Vg/Py4EEIrP+Pq
hZAYH0IC4hNCiIlLG4WwHnl1Q6gnP1yuDg/julzAfTgZjcy0EZfoX4dcM7Xl
U+Vq8lCuxad5RsMQpuNUgxBaiydbJ/FP9YnW25CGSdhun9v6HtQ3j2bRWr4p
P1b7LndRXME1UI6bat+4Defouc73xdXQxPqu/sb8SO2L3DnxV47DZ1xTK+PW
vEVPId8T/43ekfUt/QnRPdTW8kMu5gL5Mxitdw1+eJ5Nai3UsrlCnCW/EkXW
H/EW7/EOr+R/mv+FH6jEbyyTz8R3PRvt09x+G7hcvFR+EY5hkv8gj1/ipLt2
EZ/iE5hrJp978nMewCm4gssottd5cxM5DX/0ZMtX8XF3eG39BvG46uxX/AID
zRxVXyw3EKVmy1CCQ+pdzC9U78zLOROp0feAIrkMd5yHwVimdtZMJ/mW1h/4
jv1vY7t8B3Gl9TseJF7ivME4rDdZ/hL6RO8WT9Tf81ffYjmS9LRDDCtwHTfw
RE+O3q2Ybd8kcaW77bHvcnPpejLQG32jc7Aa+fqmuPNJzsZmVJnbZ66/vY5E
71I9l2diDsaIZ/MnDMEIcWr0nWIL/pk/YL67+d3i8ep7eQJ2q+3FDuzCTuxH
e70do29QT1fujCmeIyYO5g/ar230fOKx4hzuhl5IFffgkfZpjKZY5ZmzcNhc
LDojOj/ah6diOkaJp3Gi91AdNfHUGfM4Xe2C2Wfu0M98CqrsF8f/uNDcfz8X
oTQ=
         "]]},
       "0.384`"],
      Annotation[#, 0.384, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV1ElsjWEUxvFXxNTZCgtBYojERmgES8RYQ02NIamrpS1ac5FIkSDGjbGq
XQiRmAlKVYKiRUwbhGJnqHlhTIvfu/jf53vOec753nvvd2+PREl2casQQqaX
wqQQ1qM2NYQrmJgWwgTMVyvDhPQQsjAxwzV+JIdQqV+FchxEBWbLrsVo2Rp7
Xqo14rt8Pv8CjViHnTI7sB1DUkLYaO9sud6ue6E7X2/XNv2tcZ/r3mobZD7q
J9Mbdtfhm32nZRpl1rheIrcUe/X2Yx9myX+mX/ABn/ARq+UfmWui73FK7SSS
5K/R6/ga6/Y/l1vlusTuxdiltwe7MVP+PW3CG7zDW5TKPzT3jr7FCbXj6CCf
RjNQ0DGEdDoHuUhgbjyr/En37Ufz5TfRPNqX9kGlM+zBvngWVKAc2T6fCkyy
t5z2l61yhr962/huGIFR+sNoExLI4vNoLg5jKn+IDjV/0Hyz+S38ZpxAjv4x
utZZB2EwMlEU3xNWOfsBc3/MdY33cPbt8btHAd+T/sU/NKMFRzBSvp3ZatcX
cQEDzHa3sz0t42vNP+Gfxhpuyf9yr116v2k9fxuX7bqEZzK9MND8eZnM+KzF
WZkWu7LVBqll0cE00KPxfHrD7SvFWL5Jr9q+DzTJ+79pfhGtoz9lZsnsjr8j
mUVma+hV1KJZP1W2WL21+XM0jW9RrzRzhp/Bn6Wv9VOcLzk+K3jFF9NL8Xul
o/n7Zia7noKp/OP4LOMBxvDZ6pflU9x7bPwNOuM8zMc0vogWogDj+FS5mngm
msUvUF8Y3x+m84tpCYoxnk+XuyKfEf8X+CXqS7EMOXwX9U7ojDtqd9GANnoJ
tblYzq/Afp9BrnPXqd3EDdzGLbSVz6P5WClbinL5hHxD3B3/K3APd+OzI/8f
Tw2yQw==
         "]]},
       "0.368`"],
      Annotation[#, 0.368, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzrkyg1EYgOHDSGPPBWBS2RJugERjBiV6YiwhQWGswZAb4B7sWkpbjc7u
ClDaChqP4p33vN/5v/lPbGi6d6oohJDDaGkItdVcFkINj3Edv5mPO0ejIWT4
WB9wQh/yt97nuN7jEX3HKX3Pr/qRO/QDH+kdbta7/KW3uUlv8bC+4aS+5Rf9
WeE9ld6Gd+cPxDDnffHyEGY5wfOctZNDsf0Lu5POabS6b8GKvWvzHudnpHCu
C+ZnnNSD/+/hRiybX5l3Oz+hHad63fyE2/SA7xu40z/rOe/u0l1Ed+nNqhA2
MOG7Gb3qLo1F713CApaRx49vfrHmPoMSswj67PejYJbFH9TvO0g=
         "]], LineBox[CompressedData["
1:eJwV01dsj1EYx/HTkaDDuLTjwlZqRBodXNhtKO1NawVFghASiSszqHGhKIIY
iQhtY7VorSIhJBKJkViNEdxom1ZptSR83otvv8/vnOc87+j7H7Bk7dw1MSGE
FH9WJoQwt1sIc5CLyYkhxHUPIR/t6jn8m/N4RXIIL/ECQW9qUgib1Onc1DWE
ZtTJt8zsrb8PemGh8wX25qEQT+wfdP6r3lb5F16aEWMtFj/lT84dsvaRt1nb
jq04G92vtRz1TMxCNlqstbnOZy517pgZB7mFf+Cwug7fXPOxGcv5gHMlOG9/
mr0L/JpTzdhv1hF7R/Fd7wJ785FkvQcncxEvQ60zt+RSfbc5jT+4xl312B4h
3OEKeQv3krdyo7yZe8qbeJ58g0fL1Vwn3+Qxcg2Xy3u5v7yPG+Q93E/ezYVy
JY+Sq/idfJ1T5WtcJu/ivnIx18vDPOdwDMZQDEGB9YHufxDWe65GXsd7PGeL
c7uj98k5eovsVXg/5WhQ5+urtf9F/V79yKyT6of8Tk7SVyNXow1X5Mv4HX0H
eOXsdXNXR9+COhZxKLH3QN99BHmV/Wv6qpBlLRNtaI9moRVXMcH+G/fa7nyl
XIUO9R+cRbJZFXzRvETvpcN9Hov2OUm+ZP27GWeib199ipfzac7WM19PRvRd
cyanYyKykGM/0aw8NLqHGJ4Q/Z54fPT+OI3/mXdOfR6xiMPC6HvDIlTZ/2de
Jf/lqebGW5+FeueP8wnkYjZ26NmJBBRjF+L1feGveKrnOYq8iyNmbVC/sf4W
z9T3PNtd1CJdTwY26psS/Q+j3wk3R9+Kuin6bngwhmMYpttP4ZEYgVSMwgzr
Y3gsRiPDPY3jRPM7uW6mvJizuDOXoQsmykt5EidwOf4DVW6pEQ==
         "]]},
       "0.352`"],
      Annotation[#, 0.352, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwl08dOVFEcgPHjQiM4gL6BCLbYooIIaGSGoeqgIgygBAy2nZjoRiSxbFyp
sVdsOxfWF1AUG0XRBzCKbQkobmzxd+Piy3e+/9xzZubemdyOzvrdk0IIw5iS
FULptBCauBmTcQt/skP4i7R1IwZjIQwhMyeEDIzZk2OejVRmCDHOwqh5A8d5
Cyf4oHPG+bauc+1P+38hgXIcMGtEnvOTM0LI53fRjGt1mifsT023H1X2VKPb
NWkUObeVF3ltMRbimOuX8Kj5CeuZzjkefQbdy4X6Mb/Xj7hAP+Q2fZJz9Ske
02d4lj7Nd/RTLtLP+IPu4xX6Cbfrs5ynz/G4vsD5+jzf1S+5WPfziH7BK/Vz
3qov8mx9ib/pKzxHX+Z7eohL9Sv+qAe5RA9wh+7hufoqf9fXeZ6+xvf1G16t
3/InPcyr9Gvepm/wfH2TJ3SB+1iIpViOZXhgXuy+l6DF8/nBX82arTPs/WJ9
1OwzT9U95k3ojp43urBA73PWXlTqCiSj34T3/c0N9u5H3LoMu5zTpddYb7fe
iR3YZFbtjBoc8ls7gsOoN09xHWqxDmuxMbqea1CBKlRig3k5J1GGBOJYb97i
u2zGHp+51/t0xv7/d/4BWnlsVQ==
         "]]},
       "0.336`"],
      Annotation[#, 0.336, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "TransparentPolygonMesh" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{-2.3414837114562674`, 
   2.3414837114562674`}, {-0.39332787273081904`, 0.39332787273081904`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7136928513744144`*^9, 
  3.7136929524772577`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JBYv4Tk4zLAIR871/nrNU32eH4Ww1rmHUOVk2wguPJvVtTbYydAeoazkV6gV
zIZN5GJkhac865KiNfTu5XSie/bz999/7fTg0X2Oj5rc18mZnaajpz4nx0SZ
Fa60bCe4N7oFiphd0tis62XaeUskbeLBPAoaUPhwiryQCXR6G3Mv4Sk/TER5
vF7vrxr2pgEfZL2DMsg2NecOs9L1xZH9QA5tUTPPIfxjPwGO0ezIZz3j1Kd/
nzLlaWwbxUEZ2mGMj5lssWvyvPHPfMvEyVbYe+Lsz+rorzY+O2LEY7wzLxwp
TILXtVMizQHplxMm9EEDYyF6BLMaXqyWgBBoybiOl9AabNi3d2bs2F44Swk7
JQw2PCK1R3h41eYvoV2yKzHOM/qy7M5t7GdouFlzKlt2BXwlrzJGW8iWNG+n
FudAs1iGB22llccdUD7exhc6TnnHwYMzsUHTYdG1pz2hpuFx0bLCkZOeRWNh
U2G5Z3RTtD26SWM/Y8EHnp0MddQ8HfrmPuGSZzl4IbDoYi4LjuZm3GaIr+Rm
T4z84ALiMawj52Xk7aHvWJaPbYe4sBdCzgbG5sioZyxBlx8KgJFoqmcnQ6co
F+TYOTmGTvSgne+x4UxodakRH7yad3JsEvHJmRB02pkrs47WdmSxOaz35D29
bP9s3zpj4zuViNrZXg5vJ/+IYu/suLbK8N3gpQX1sq8mDV7DL/0siFmULvwG
pl4aCS/9ioycDKDJeY4ZurgqLGagGu1Lp6qLz79SkXMj4Q0cfKTJOT5eaw9j
mDbJAXJUS61u1DP+fL+HME/3gr0GABdGVbBbBV5fLREQUXy3pR9uCE8lHuBy
cqgWVZrAJ3hcybE+zFUOJw3SuTDG3PNmlrxtaeXZWOOswG3u7Ek+cIagDZbZ
HNobWHHYweeO9kFgJDglgTbgNxiwrVq2dN7v7/WB0eWoiI8lsI2ed2A+G0ba
ygZjSQcJM505WXUs5Nco5N+pkB951FwJ+bIrFY0BR9JbOb+54AdS3rHZ5qwc
GAwvrL3DH07FO/auDC1P+rTgUBMyYHmfFq+TNyEtctirpW1NT0vCNgpE+7f7
WRToC+KS6KMUq9tGgWD8Np8WUfGQszxtg5iyZQIUtFcomJbAjIW0TGBrbNze
Y2jBYNP7JYPp6bUkjJZIjb1NoSXylNVGpOV2nxZoMh3GlkBjvX33+CVqhPF0
iE8vJgiuBzFJooZK2YUK9kEAdI6O6xxA1ONME8Lmkt+TiN1gMbqSSlMRJzHB
F0v6yabL6akQVhOTMK2HNdBqTps3j3vEaIYKZQNZ/0w0bzhARn67RuMNgUcp
b3T2sEQWFffYBLMY9tyfmZzJVl2NIjmK1e8TzB/J64w1C1dxp4ykXLMSNNSq
YKeAqCGoz4U2QJiRS0N+tE0pI3htOXu4/jQgv1d6vYk2PxXN56knoJbh5Ilo
e+U1To2fdMCgg3LzVg+g6a0IexXjmE+aiUygQmUol6FjFOWBlGqa+KGMPni0
RFjGqtFSpmv9E9ISFfFWu2XSRLwVaCzoaRSNjaAFAZ0XeRpYYB+EoYWmbSSe
qXbvuUzBq7XHjCpr56UK3lsVvG81Ad5bFLwzm0DONyt4Z6XXtUDc2FrB+ysF
7+z0eAPJ1Qi89m+shOCNsjRxsd2sYHsrvVUpi/cWBW8CbfLCUDon3UVGR5Q+
HhP5rWFMVzAOtAl4LCb+9gr+BKajiKNs7HFRQAg9YxJh7GbgFxYS2M0GA0/7
MDohApN+Xq7bECEpXjqfIqXxDrSETUBPJbXUhvEHznDRjGmClvDUED/DCInb
zAeQt1WQa5ZNV0Orp+ua30NB2U5B+cswfuN191DN767gv1rBf2M6Yx6t+V0V
Iq5RiPh5OstetH/HvYHmd1XmKg0RgbNIDBG0g0nm+BIQEar53RX8Vyv4b1Tw
J2gJXfN7KMjbKch/qSBPbf17KsjbKshvVpBXw/pr+Nso+G9V8DeF9Zcjx2zr
j6UhOEIr3ngmWvMjUGNyS46QU21+goFMqOZr3vfyatp8cyBjAHZ9RG8wP6ZF
5ffwD/c5NylEao7J/CoEfSvTub9QCDemhcqtMdO53RVYmzgMFhUGWyiwi2KW
y0X01owinKsUWAsF1s4XojDp0tSQaR5a523BQoQow4fflAjYnDlmCxiXKd+w
/hYxYVfFLHcBG6kmzKpB1CjfMmbbJISVbUMe8ufsNmRyGjZfCwVWUPpMJmZz
aOTEbfI032qw4gVUjSiHcyFVozZoN6mbxtWLvKIX2X8avaDdZ09ZUKfZ/wEd
DWyD\
\>"],ExpressionUUID->"1c9a3720-5c20-4742-b962-0f80f14f5c4a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"upcoming", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "spotUSDRUB", ",", "\[IndentingNewLine]", "meetingPiMomentumUpcoming", ",",
     "\[IndentingNewLine]", "meetingPiAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpLevelUpcoming", ",", 
    "\[IndentingNewLine]", "meetingPiExpAccelerationUpcoming", ",", 
    "\[IndentingNewLine]", "5.0", ",", "\[IndentingNewLine]", "\"\<Zero\>\"", 
    ",", "\[IndentingNewLine]", "\"\<Yes\>\"", ",", "\[IndentingNewLine]", 
    "\"\<NoGuidance\>\""}], "}"}]}]], "Input",ExpressionUUID->"524ff43f-d801-\
4a52-b01f-8eb780a2cbfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"-", "2"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.713670058446885*^9, 
  3.7136700787348804`*^9}},ExpressionUUID->"487c560b-310d-47c0-ba52-\
9aa5c51ffb3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.71366776057481*^9, 
  3.7136678297029686`*^9}},ExpressionUUID->"844f9497-c88e-4678-97a6-\
451a18a6bf56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\"\<usdrub3wChange\>\"", ",", "\"\<cpiMomentum\>\"", ",", 
  "\"\<cpiAcceleration\>\"", ",", "\"\<cpiExpLevel\>\"", ",", 
  "\"\<cpiExpAcceleration\>\"", ",", "\"\<realKeyRate\>\"", ",", 
  "\"\<OutputGap\>\"", ",", "\"\<coreQ\>\"", ",", 
  "\"\<guidance\>\""}]], "Input",ExpressionUUID->"342bfdb9-f232-41a8-92fb-\
5d1d6e8d48a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Tree", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.713667838475739*^9, 
  3.713667839695563*^9}},ExpressionUUID->"fefb6a19-d9d1-47f2-9611-\
1028da3a7442"],

Cell[BoxData["\<\"A\"\>"], "Output",
 CellChangeTimes->{
  3.713667840399576*^9},ExpressionUUID->"254449c8-470b-4a40-8b6e-\
3c7ce3c922d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"c1Logi", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", "\"\<LogisticRegression\>\"", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1Logi", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Models\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7136678601883626`*^9, 
  3.7136678849830427`*^9}},ExpressionUUID->"8e97c912-f0d8-4fb2-b023-\
45913132b2ee"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Numerical\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{",", "\",\"", "\"A\"", "\"B\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7136678869400806`*^9},ExpressionUUID->"59ffd8e8-5902-42fc-8bb3-\
70fb5ee0fdf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Theta\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"3.2702480824470244`", ",", 
       RowBox[{"-", "31.719313602318884`"}]}], "}"}]}], ",", 
    RowBox[{"\<\"L1Regularization\"\>", "\[Rule]", "0"}], ",", 
    RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", "1.`*^-10"}], ",", 
    RowBox[{"\<\"FeatureNumber\"\>", "\[Rule]", "1"}], ",", 
    RowBox[{"\<\"Method\"\>", "\[Rule]", "\<\"LogisticRegression\"\>"}], ",", 
    RowBox[{"\<\"Processor\"\>", "\[Rule]", 
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{"\[ThinSpace]","\" \"",TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"DimensionReduceNumericalVector\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{
                RowBox[{
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], "\[Rule]", 
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]]}]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Imputed\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Reducer\"", "\[Rule]", 
                    TagBox["Normal", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Version\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11.1`", ",", "1"}], "}"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"ID\"", "\[Rule]", 
                    TagBox["3939872915197901623", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Panel[
                Grid[{{"f1", "NumericalVector"}}]] -> Panel[
                Grid[{{"f1", "NumericalVector"}}]], 
              
              Column[{"Invertibility" -> Short["Perfect", 5], "Missing" -> 
                Short["Imputed", 5], "Reducer" -> Short[Normal, 5], "Version" -> 
                Short[{11.1, 1}, 5], "ID" -> 
                Short[3939872915197901623, 5]}]}], "Tooltip"]& ],StyleBox[
          "\"\[RightArrow]\"", 
           Directive[
            GrayLevel[0.4], 15], StripOnInput -> False],TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"PrependOne\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{
                RowBox[{
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]], "\[Rule]", 
                  PanelBox[
                   TagBox[
                    
                    GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]]}]}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Version\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"11.1`", ",", "1"}], "}"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"ID\"", "\[Rule]", 
                    TagBox["5346351525268736226", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Panel[
                Grid[{{"f1", "NumericalVector"}}]] -> Panel[
                Grid[{{"f1", "NumericalVector"}}]], 
              
              Column[{"Invertibility" -> Short["Perfect", 5], "Missing" -> 
                Short["Allowed", 5], "Version" -> Short[{11.1, 1}, 5], "ID" -> 
                Short[5346351525268736226, 5]}]}], "Tooltip"]& ],StyleBox[
          "\"\[RightArrow]\"", 
           Directive[
            GrayLevel[0.4], 15], StripOnInput -> False],TagBox[
           TooltipBox[
            FrameBox[
             StyleBox[
             "\"FirstValues\"", {
              FontFamily -> "Helvetica Neue", FontWeight -> "Light", 
               FontColor -> GrayLevel[0.]}, StripOnInput -> False], 
             RoundingRadius -> 2, FrameStyle -> {
               Thickness[0.5], 
               Opacity[1.], 
               GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
             Background -> Opacity[1., 
               RGBColor[{0.98, 0.98, 0.9702}]], StripOnInput -> False], 
            TagBox[
             GridBox[{{""}, {
                TagBox[
                 GridBox[{{
                    RowBox[{"\"Info\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Weight\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"Type\"", "\[Rule]", "\"NumericalVector\""}]}], 
                    "\[RightAssociation]"}], Short[#, 5]& ]}]}, {
                    RowBox[{"\"Key\"", "\[Rule]", 
                    TagBox["\"f1\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                    RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"]], Annotation[#, 
            Column[{Null, 
              Column[{"Info" -> Short[
                  Association["Weight" -> 1, "Type" -> "NumericalVector"], 5],
                 "Key" -> Short["f1", 5], "Invertibility" -> 
                Short["Perfect", 5], "Missing" -> Short["Allowed", 5]}]}], 
            "Tooltip"]& ]},
         "RowWithSeparators"],
        Background->Opacity[0., 
          RGBColor[{1., 1., 0.99}]],
        FrameMargins->3 + Rational[1, 25] 2167^Rational[1, 2],
        FrameStyle->None,
        RoundingRadius->2,
        StripOnInput->False],
       TagBox[
        GridBox[{{
           RowBox[{
             PanelBox[
              TagBox[
               
               GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"]], "\[Rule]", 
             PanelBox[
              TagBox[
               
               GridBox[{{"\"f1\"", "\"NumericalVector\""}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Grid"]]}]}, {
           TagBox[
            GridBox[{{
               RowBox[{"\"Invertibility\"", "\[Rule]", 
                 TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
               RowBox[{"\"Missing\"", "\[Rule]", 
                 TagBox["\"Imputed\"", Short[#, 5]& ]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{Panel[
           Grid[{{"f1", "NumericalVector"}}]] -> Panel[
           Grid[{{"f1", "NumericalVector"}}]], 
         Column[{
          "Invertibility" -> Short["Perfect", 5], "Missing" -> 
           Short["Imputed", 5]}]}], "Tooltip"]& ]}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7136678870960836`*^9},ExpressionUUID->"80206d16-5550-4371-9cef-\
938a95b227cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c1Logi", "[", "2.747939", "]"}]], "Input",
 CellChangeTimes->{{3.713667915157628*^9, 
  3.7136680083864474`*^9}},ExpressionUUID->"50deee02-a030-4a70-838b-\
dfaa23fc290a"],

Cell[BoxData["\<\"B\"\>"], "Output",
 CellChangeTimes->{{3.7136679153302317`*^9, 
  3.713668012046919*^9}},ExpressionUUID->"0ae9989b-f985-42ad-b18d-\
5c308037eb43"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"2", "+", "3.5"}]], "Input",
 CellChangeTimes->{{3.7136679403281164`*^9, 
  3.713667942326955*^9}},ExpressionUUID->"2f1ca6f9-63e7-4dd6-bf76-\
55655ff851cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5.5`", "/", "2"}]], "Input",
 CellChangeTimes->{{3.713667946713041*^9, 
  3.713667948452675*^9}},ExpressionUUID->"c5e083a2-240a-4a0a-bab7-\
22680bf58f43"],

Cell[BoxData["2.75`"], "Output",
 CellChangeTimes->{
  3.7136679489518843`*^9},ExpressionUUID->"de88030e-cea6-4fac-83f8-\
5282530c1ef5"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.713667914173809*^9},ExpressionUUID->"590c6936-d664-42b3-b0da-\
e9af1b3c8e7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The CHAID illustrations", "Title",
 CellChangeTimes->{{3.7141297604702606`*^9, 
  3.7141297661589456`*^9}},ExpressionUUID->"afb193fa-4c96-4c52-9463-\
cb7026f982c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "Economica`"}]], "Input",
 CellChangeTimes->{{3.714096175949198*^9, 
  3.714096178929275*^9}},ExpressionUUID->"183732e3-c3f3-4da4-b783-\
391481d68c09"],

Cell[BoxData[
 TemplateBox[{
  "SetOptions","optnf",
   "\"\\!\\(\\*RowBox[{\\\"ImageSize\\\"}]\\) is not a known option for \
\\!\\(\\*RowBox[{\\\"RadarChart`RadarChart\\\"}]\\).\"",2,2,3,
   20064777693395381061,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7140961844837646`*^9, 3.7140961878383026`*^9}, {
   3.714099585032461*^9, 3.714099593843658*^9}, 3.7140999222232533`*^9, 
   3.714100196965817*^9, 3.71418928392351*^9, {3.7142865660655117`*^9, 
   3.714286568203127*^9}},ExpressionUUID->"0b7edc07-72f4-4004-9892-\
a5a71b7314da"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "alignedKPartiteCoords", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alignedKPartiteCoords", "[", 
    RowBox[{"layersizes_List", ",", "offsett_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "1"}], 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", 
           RowBox[{"j", "-", "1"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "layersizes", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"1", "-", 
           RowBox[{"offsett", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"layersizes", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"offsett", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", "1"}], 
     "]"}]}]}], ";"}]}], "Input",ExpressionUUID->"70eef7af-3307-4bfc-9e8a-\
6fb1881f7714"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vrtxLst", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<guidance\>\"", ",", "\[IndentingNewLine]", "\"\<infl.accel.\>\"", 
     ",", "\"\<is core? alt\>\"", ",", "\[IndentingNewLine]", 
     "\"\<outcome7\>\"", ",", "\"\<outcome8\>\"", ",", "\[IndentingNewLine]", 
     "\"\<is core?\>\"", ",", "\"\<exp.acceleration\>\"", ",", 
     "\"\<outputgap\>\"", ",", "\[IndentingNewLine]", "\"\<outcome1\>\"", 
     ",", "\"\<outcome2\>\"", ",", "\"\<outcome3\>\"", ",", 
     "\"\<outcome4\>\"", ",", "\"\<outcome5\>\"", ",", "\"\<outcome6\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edgeLst", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<infl.accel.\>\""}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", "\"\<is core?\>\""}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<is core?\>\"", "\[Rule]", "\"\<outcome1\>\""}], ",", 
     RowBox[{"\"\<is core?\>\"", "\[Rule]", "\"\<outcome2\>\""}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", "\"\<exp.acceleration\>\""}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", "\"\<outcome3\>\""}], ",", 
     RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", "\"\<outcome4\>\""}], ",",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", "\"\<outputgap\>\""}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<outputgap\>\"", "\[Rule]", "\"\<outcome5\>\""}], ",", 
     RowBox[{"\"\<outputgap\>\"", "->", "\"\<outcome6\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<is core? alt\>\""}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"\"\<is core? alt\>\"", "\[Rule]", "\"\<outcome7\>\""}], ",", 
     RowBox[{"\"\<is core? alt\>\"", "\[Rule]", "\"\<outcome8\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"offsets", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layersizes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "6"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7140602292187777`*^9, 3.7140602508406553`*^9}, {
   3.7140603117126355`*^9, 3.7140603223519716`*^9}, {3.7140608771418843`*^9, 
   3.714060904754238*^9}, {3.7140609578417187`*^9, 3.7140610578234005`*^9}, {
   3.714096200289098*^9, 3.714096203830865*^9}, 3.71409624573918*^9, 
   3.714101185779518*^9},ExpressionUUID->"2977c5ba-4f37-4a8c-bcf2-\
8f9bbdbcd4ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "VTBTextStyle"}]], "Input",
 CellChangeTimes->{{3.714292505671256*^9, 
  3.7142925078974857`*^9}},ExpressionUUID->"6e61a752-7f60-4f60-9f1b-\
0ead683bdb0a"],

Cell[CellGroupData[{

Cell["Economica`VTBTextStyle", "Print", "PrintUsage",
 CellChangeTimes->{3.7142925085058937`*^9},
 CellTags->
  "Info193714306908-7313519",ExpressionUUID->"a13acdb4-040d-4e3e-a892-\
a697dbc2c415"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"VTBTextStyle", "[", 
          RowBox[{"x_", ",", 
           RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
         RowBox[{"Style", "[", 
          RowBox[{"x", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\<\"Arial\"\>"}], ",", 
           RowBox[{"FontSize", "\[Rule]", 
            RowBox[{"OptionValue", "[", "FontSize", "]"}]}], ",", "Black", 
           ",", 
           RowBox[{"LineSpacing", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1`", ",", "10"}], "}"}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "VTBTextStyle", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "14.666666666666666`"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Economica`VTBTextStyle],
  Editable->False]], "Print",
 CellChangeTimes->{3.7142925085068936`*^9},
 CellTags->
  "Info193714306908-7313519",ExpressionUUID->"5d7e7306-f14b-49e8-935c-\
33fa98f3b209"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graph", ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"24", ",", "18"}], "}"}], "/", "1.5"}], " ", "cm"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexLabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"22", "/", "1.5"}], ",", 
       RowBox[{"FontName", "\[Rule]", "\"\<Arial\>\""}], ",", "Black", ",", 
       RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
       RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
       RowBox[{"LineSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.1`", ",", "10"}], "}"}]}]}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7140964000369315`*^9, 3.714096414137751*^9}, {
  3.7140964475344296`*^9, 3.714096462863325*^9}, {3.7140965126990285`*^9, 
  3.7140965163006372`*^9}, {3.7140988680391707`*^9, 
  3.7140988698819942`*^9}},ExpressionUUID->"71b37168-52d3-4568-bf0b-\
cd7dd739ac2b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"Sequence", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"VertexStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "None", "]"}], ",", "White"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"VertexSize", "\[Rule]", "0.5`"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"VertexCoordinates", "\[Rule]", 
       RowBox[{"alignedKPartiteCoords", "[", 
        RowBox[{"layersizes", ",", "offsets"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"VertexLabels", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<guidance\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<guidance\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<inflation\\nacceleration\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<is core? alt\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<is core?\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome7\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome8\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<is core?\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<is core?\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<expectations\\nchange\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outputgap\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "&"}], "@", 
             "\"\<output gap\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome4\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome5\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome6\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"VertexShape", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<guidance\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"6", ",", "15", ",", "10"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "13", ",", "10"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<is core? alt\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2", ",", "0"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome7\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"4", ",", "0", ",", "0"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome8\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "0"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<is core?\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "6"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "7", ",", "2"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outputgap\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "4"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "4"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome4\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "6", ",", "0"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome5\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome6\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2", ",", "0"}], "}"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"MakeLegend", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<raise\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<hold\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<cut\>\"", ",", "\"\<Dot\>\""}], "}"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.75"}], ",", 
            RowBox[{"-", "0.15"}]}], "}"}]}], "]"}], "}"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EdgeLabels", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<guidance\>\"", ",", "\"\<infl.accel.\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<no guidance,\\nhold,cut\>\""}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<infl.accel.\>\"", ",", "\"\<is core?\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<<-0.04\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<is core?\>\"", ",", "\"\<outcome1\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<no\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<is core?\>\"", ",", "\"\<outcome2\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<yes\>\""}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<infl.accel.\>\"", ",", "\"\<exp.acceleration\>\""}],
              "]"}], "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<(-0.04,0.04)\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<exp.acceleration\>\"", ",", "\"\<outcome3\>\""}], 
             "]"}], "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<\[LessEqual]-0.7\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<exp.acceleration\>\"", ",", "\"\<outcome4\>\""}], 
             "]"}], "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<>-0.7\>\""}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<infl.accel.\>\"", ",", "\"\<outputgap\>\""}], "]"}],
             "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<>0.04\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<outputgap\>\"", ",", "\"\<outcome5\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<negative\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<outputgap\>\"", ",", "\"\<outcome6\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<zero\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<guidance\>\"", ",", "\"\<is core? alt\>\""}], "]"}],
             "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<hike\>\""}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<is core? alt\>\"", ",", "\"\<outcome7\>\""}], "]"}],
             "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<no\>\""}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<is core? alt\>\"", ",", "\"\<outcome8\>\""}], "]"}],
             "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<yes\>\""}]}], "\t\t", "\[IndentingNewLine]", "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.714060718565851*^9, {3.714096227546665*^9, 3.7140962363620777`*^9}, {
   3.7140964886920385`*^9, 3.7140964999888916`*^9}, {3.71409654594656*^9, 
   3.7140969875238647`*^9}, {3.7140970179828615`*^9, 
   3.7140970331889553`*^9}, {3.714097097752073*^9, 3.714097130733692*^9}, {
   3.7140972211120467`*^9, 3.7140972516607847`*^9}, {3.71409749156126*^9, 
   3.7140976764448023`*^9}, 3.7140977413547106`*^9, {3.7140978408128786`*^9, 
   3.7140979805868015`*^9}, {3.7140980339710407`*^9, 
   3.7140980953080254`*^9}, {3.714098126044829*^9, 3.714098347308469*^9}, 
   3.7140984473742137`*^9, {3.7140984892823677`*^9, 3.7140985395436893`*^9}, {
   3.7140986374677916`*^9, 3.7140986969751453`*^9}, {3.714098804573248*^9, 
   3.7140988054946656`*^9}, {3.714098837056364*^9, 3.714098857189228*^9}, {
   3.7140989151979837`*^9, 3.7140989154631867`*^9}, 3.7141012082425184`*^9, {
   3.71410704943332*^9, 3.7141070631778994`*^9}, {3.7142866113888173`*^9, 
   3.7142866127022257`*^9}, {3.714292362983356*^9, 3.7142923804007854`*^9}, {
   3.7142924986403627`*^9, 
   3.714292664369356*^9}},ExpressionUUID->"32f39eff-ee7f-4f5e-8e64-\
23ef2a553151"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"vrtxLst", ",", "edgeLst", ",", "options"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ExportEMF", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"exportDirectory", ",", "\"\<cpi.weeklydecomp\>\""}], "}"}], 
      "]"}], ",", "%"}], "]"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7140596317311177`*^9, 3.7140596317311177`*^9}, {
   3.7140599930317497`*^9, 3.714059993281353*^9}, 3.7140602555675154`*^9, {
   3.7140989184206257`*^9, 3.7140989186556287`*^9}, {3.714099679331675*^9, 
   3.7140996864323945`*^9}, {3.7140999793129263`*^9, 
   3.7140999800315447`*^9}, {3.7141000898893957`*^9, 3.7141001158480663`*^9}, 
   3.7141070701515903`*^9},ExpressionUUID->"497a5295-3aa0-482e-85aa-\
5e1e2b9c8b42"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "guidance", "infl.accel.", "is core? alt", "outcome7", "outcome8", 
       "is core?", "exp.acceleration", "outputgap", "outcome1", "outcome2", 
       "outcome3", "outcome4", "outcome5", "outcome6"}, {{{1, 2}, {2, 6}, {6, 
       9}, {6, 10}, {2, 7}, {7, 11}, {7, 12}, {2, 8}, {8, 13}, {8, 14}, {1, 
       3}, {3, 4}, {3, 5}}, Null}, {
      AspectRatio -> Rational[3, 4], 
       EdgeLabels -> {
        DirectedEdge["outputgap", "outcome6"] -> 
         Style["zero", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["outputgap", "outcome5"] -> 
         Style["negative", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "infl.accel."] -> 
         Style["no guidance,\nhold,cut", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome4"] -> 
         Style[">-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "is core? alt"] -> 
         Style["hike", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "is core?"] -> 
         Style["<-0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome7"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome3"] -> 
         Style["\[LessEqual]-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "outputgap"] -> 
         Style[">0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome8"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome1"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "exp.acceleration"] -> 
         Style["(-0.04,0.04)", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome2"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}]}, Epilog -> {
         Inset[
          Grid[{{
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.21568627450980393`, 0.49411764705882355`, 
                0.7215686274509804], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "raise", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hold", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.8941176470588235, 0.10196078431372549`, 
                0.10980392156862745`], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "cut", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}}, 
           Alignment -> {{Right, Left}, Center}, BaseStyle -> 
           Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`], 
           Spacings -> {{0, 0.5, 2}, 0}], {-1.75, -0.15}]}, 
       ImageSize -> {453.54330708661416`, 340.1574803149606}, 
       VertexCoordinates -> {{0., 0.}, {1., -1.}, {
        0., -1.}, {-1., -2.}, {-2., -2.}, {1., -3.}, {0., -3.}, {-1., -3.}, {
        3., -4.}, {2., -4.}, {1., -4.}, {0., -4.}, {-1., -4.}, {-2., -4.}}, 
       VertexLabels -> {
        "outcome7" -> Placed["", {0.5, 0.8}], "outcome3" -> 
         Placed["", {0.5, 0.8}], "outcome8" -> Placed["", {0.5, 0.8}], 
         "outcome1" -> Placed["", {0.5, 0.8}], "exp.acceleration" -> Placed[
           Style[
           "expectations\nchange", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "outcome5" -> 
         Placed["", {0.5, 0.8}], "is core? alt" -> Placed[
           Style["is core?", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "guidance" -> 
         Placed[
           Style["guidance", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "outcome6" -> 
         Placed["", {0.5, 0.8}], "outcome2" -> Placed["", {0.5, 0.8}], 
         "infl.accel." -> Placed[
           Style[
           "inflation\nacceleration", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "outputgap" -> 
         Placed[
           Style["output gap", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "is core?" -> 
         Placed[
           Style["is core?", FontFamily -> "Arial", FontSize -> 12, 
            GrayLevel[0], LineSpacing -> {0.1, 10}], {0.5, 0.8}], "outcome4" -> 
         Placed["", {0.5, 0.8}]}, VertexLabelStyle -> {
         Directive[14.666666666666666`, FontName -> "Arial", 
          GrayLevel[0], 
          Opacity[0.3], FontOpacity -> 1, LineSpacing -> {0.1, 10}]}, 
       VertexShape -> {"outcome7" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$10538 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10538, 
                    FEPrivate`Not[DynamicChart`click$10538]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10538, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10538}]]}, {}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10538, 
                    FEPrivate`Not[DynamicChart`click$10538]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10538, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10538}]], {}, {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome1" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10727 = False, DynamicChart`click$10731 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10727, 
                    FEPrivate`Not[DynamicChart`click$10727]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10727, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10727}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10731, 
                    FEPrivate`Not[DynamicChart`click$10731]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10731, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10731}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10727, 
                    FEPrivate`Not[DynamicChart`click$10727]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10727, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10727}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10731, 
                    FEPrivate`Not[DynamicChart`click$10731]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10731, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10731}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "exp.acceleration" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10643 = False, DynamicChart`click$10647 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10643, 
                    FEPrivate`Not[DynamicChart`click$10643]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10643, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10643}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10647, 
                    FEPrivate`Not[DynamicChart`click$10647]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10647, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10647}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10643, 
                    FEPrivate`Not[DynamicChart`click$10643]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10643, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10643}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10647, 
                    FEPrivate`Not[DynamicChart`click$10647]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10647, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10647}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core?" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10604 = False, DynamicChart`click$10608 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10604, 
                    FEPrivate`Not[DynamicChart`click$10604]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10604, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10604}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10608, 
                    FEPrivate`Not[DynamicChart`click$10608]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10608, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10608}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10604, 
                    FEPrivate`Not[DynamicChart`click$10604]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10604, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10604}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10608, 
                    FEPrivate`Not[DynamicChart`click$10608]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10608, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10608}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outputgap" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10682 = False, DynamicChart`click$10686 = 
              False, DynamicChart`click$10690 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10682, 
                    FEPrivate`Not[DynamicChart`click$10682]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10682, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10682}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10686, 
                    FEPrivate`Not[DynamicChart`click$10686]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10686, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10686}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10690, 
                    FEPrivate`Not[DynamicChart`click$10690]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10690, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10690}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10682, 
                    FEPrivate`Not[DynamicChart`click$10682]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10682, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10682}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10686, 
                    FEPrivate`Not[DynamicChart`click$10686]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10686, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10686}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10690, 
                    FEPrivate`Not[DynamicChart`click$10690]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10690, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10690}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome8" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$10571 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10571, 
                    FEPrivate`Not[DynamicChart`click$10571]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10571, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10571}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10571, 
                    FEPrivate`Not[DynamicChart`click$10571]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10571, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10571}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome3" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10799 = False, DynamicChart`click$10803 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}]], 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10799, 
                    FEPrivate`Not[DynamicChart`click$10799]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10799, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$10799}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10803, 
                    FEPrivate`Not[DynamicChart`click$10803]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10803, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10803}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10799, 
                    FEPrivate`Not[DynamicChart`click$10799]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10799, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$10799}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10803, 
                    FEPrivate`Not[DynamicChart`click$10803]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10803, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10803}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "guidance" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10409 = False, DynamicChart`click$10413 = 
              False, DynamicChart`click$10417 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10409, 
                    FEPrivate`Not[DynamicChart`click$10409]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10409, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$10409}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]}]], 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10413, 
                    FEPrivate`Not[DynamicChart`click$10413]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10413, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10413}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10417, 
                    FEPrivate`Not[DynamicChart`click$10417]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10417, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10417}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10409, 
                    FEPrivate`Not[DynamicChart`click$10409]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10409, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$10409}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10413, 
                    FEPrivate`Not[DynamicChart`click$10413]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10413, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10413}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10417, 
                    FEPrivate`Not[DynamicChart`click$10417]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10417, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10417}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome2" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$10766 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10766, 
                    FEPrivate`Not[DynamicChart`click$10766]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10766, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10766}]]}}}}}, {}}, {{}}}}, {{{{{}, {}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10766, 
                    FEPrivate`Not[DynamicChart`click$10766]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10766, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10766}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome4" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$10838 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10838, 
                    FEPrivate`Not[DynamicChart`click$10838]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10838, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10838}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10838, 
                    FEPrivate`Not[DynamicChart`click$10838]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10838, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10838}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome6" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10910 = False, DynamicChart`click$10914 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10910, 
                    FEPrivate`Not[DynamicChart`click$10910]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10910, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10910}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10914, 
                    FEPrivate`Not[DynamicChart`click$10914]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10914, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10914}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10910, 
                    FEPrivate`Not[DynamicChart`click$10910]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10910, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10910}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10914, 
                    FEPrivate`Not[DynamicChart`click$10914]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10914, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10914}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "infl.accel." -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10454 = False, DynamicChart`click$10458 = 
              False, DynamicChart`click$10462 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10454, 
                    FEPrivate`Not[DynamicChart`click$10454]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10454, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10454}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]}]], 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10458, 
                    FEPrivate`Not[DynamicChart`click$10458]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10458, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10458}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10462, 
                    FEPrivate`Not[DynamicChart`click$10462]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10462, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10462}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10454, 
                    FEPrivate`Not[DynamicChart`click$10454]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10454, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10454}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10458, 
                    FEPrivate`Not[DynamicChart`click$10458]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10458, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10458}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10462, 
                    FEPrivate`Not[DynamicChart`click$10462]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10462, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10462}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core? alt" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10499 = False, DynamicChart`click$10503 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10499, 
                    FEPrivate`Not[DynamicChart`click$10499]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10499, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10499}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10503, 
                    FEPrivate`Not[DynamicChart`click$10503]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10503, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10503}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10499, 
                    FEPrivate`Not[DynamicChart`click$10499]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10499, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10499}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10503, 
                    FEPrivate`Not[DynamicChart`click$10503]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10503, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10503}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome5" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$10871 = False, DynamicChart`click$10875 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10871, 
                    FEPrivate`Not[DynamicChart`click$10871]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10871, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10871}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10875, 
                    FEPrivate`Not[DynamicChart`click$10875]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$10875, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10875}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10871, 
                    FEPrivate`Not[DynamicChart`click$10871]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10871, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10871}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$10875, 
                    FEPrivate`Not[DynamicChart`click$10875]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$10875, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10875}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}]}, VertexSize -> {0.5}, VertexStyle -> {
         Directive[
          EdgeForm[None], 
          GrayLevel[1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 0.}, {1., -1.}}, 0.25], InsetBox[
          StyleBox["\<\"no guidance,\\nhold,cut\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., 0.}, {0., -1.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"hike\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"<-0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {0., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"(-0.04,0.04)\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {-1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-1., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.5, -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-2., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {3., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {2., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"\[LessEqual]-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {0., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"negative\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"zero\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], EdgeForm[
        None], {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10409$10948 = False, 
             DynamicChart`click$10413$10948 = False, 
             DynamicChart`click$10417$10948 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-30.500894227291504`, \
-15.857524429614173`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10409$10948, 
                    FEPrivate`Not[DynamicChart`click$10409$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10409$10948, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$10409$10948}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]},
                    
                    ImageSizeCache->{{13.32157106515752, 
                    38.78331998088896}, {-31.28516862665815, \
-4.5458901470680395`}}],
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10413$10948, 
                    FEPrivate`Not[DynamicChart`click$10413$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10413$10948, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10413$10948}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    29.38252590161865}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10417$10948, 
                    FEPrivate`Not[DynamicChart`click$10417$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10417$10948, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10417$10948}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10409$10948, 
                    FEPrivate`Not[DynamicChart`click$10409$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10409$10948, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$10409$10948}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10413$10948, 
                    FEPrivate`Not[DynamicChart`click$10413$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10413$10948, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10413$10948}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10417$10948, 
                    FEPrivate`Not[DynamicChart`click$10417$10948]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10417$10948, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10417$10948}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., 0.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"guidance\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., 0.30000000000000004},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10454$10950 = False, 
             DynamicChart`click$10458$10950 = False, 
             DynamicChart`click$10462$10950 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-24.755670669744873`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10454$10950, 
                    FEPrivate`Not[DynamicChart`click$10454$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10454$10950, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10454$10950}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]},
                    
                    ImageSizeCache->{{4.434899314709414, 
                    38.78331998088896}, {-31.285168626658145`, \
-8.451890444085986}}],
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10458$10950, 
                    FEPrivate`Not[DynamicChart`click$10458$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10458$10950, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10458$10950}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    35.57500485423575}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10462$10950, 
                    FEPrivate`Not[DynamicChart`click$10462$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10462$10950, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10462$10950}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10454$10950, 
                    FEPrivate`Not[DynamicChart`click$10454$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10454$10950, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10454$10950}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10458$10950, 
                    FEPrivate`Not[DynamicChart`click$10458$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10458$10950, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10458$10950}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10462$10950, 
                    FEPrivate`Not[DynamicChart`click$10462$10950]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10462$10950, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10462$10950}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"inflation\\nacceleration\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10499$10952 = False, 
             DynamicChart`click$10503$10952 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658145`, \
-4.946282377209695}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10499$10952, 
                    FEPrivate`Not[DynamicChart`click$10499$10952]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10499$10952, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10499$10952}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    30.383841932690444`}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10503$10952, 
                    FEPrivate`Not[DynamicChart`click$10503$10952]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10503$10952, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10503$10952}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10499$10952, 
                    FEPrivate`Not[DynamicChart`click$10499$10952]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10499$10952, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10499$10952}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10503$10952, 
                    FEPrivate`Not[DynamicChart`click$10503$10952]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10503$10952, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10503$10952}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"is core?\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$10538$10954 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.7711942257217963`, 
                    38.369106418515884`}, {-30.87095506428505, \
-3.6725209196894824`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10538$10954, 
                    FEPrivate`Not[DynamicChart`click$10538$10954]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10538$10954, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10538$10954}]]}, {}, {}}}, {}}, {}}, \
{{{GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10538$10954, 
                    FEPrivate`Not[DynamicChart`click$10538$10954]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10538$10954, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10538$10954}]], {}, {}}, {}}, {}}, {}, \
{}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$10571$10956 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.7711942257217856`, 
                    38.36910641851587}, {-30.87095506428505, \
-3.6725209196894824`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10571$10956, 
                    FEPrivate`Not[DynamicChart`click$10571$10956]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10571$10956, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10571$10956}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10571$10956, 
                    FEPrivate`Not[DynamicChart`click$10571$10956]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10571$10956, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10571$10956}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10604$10958 = False, 
             DynamicChart`click$10608$10958 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10604$10958, 
                    FEPrivate`Not[DynamicChart`click$10604$10958]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10604$10958, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10604$10958}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658148`, \
-3.25830735731639}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10608$10958, 
                    FEPrivate`Not[DynamicChart`click$10608$10958]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10608$10958, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10608$10958}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10604$10958, 
                    FEPrivate`Not[DynamicChart`click$10604$10958]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10604$10958, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10604$10958}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10608$10958, 
                    FEPrivate`Not[DynamicChart`click$10608$10958]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10608$10958, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10608$10958}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"is core?\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10643$10960 = False, 
             DynamicChart`click$10647$10960 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658148`, \
-3.25830735731639}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10643$10960, 
                    FEPrivate`Not[DynamicChart`click$10643$10960]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10643$10960, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10643$10960}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-18.685951554360365`, \
-3.4497177749315426`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10647$10960, 
                    FEPrivate`Not[DynamicChart`click$10647$10960]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10647$10960, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10647$10960}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10643$10960, 
                    FEPrivate`Not[DynamicChart`click$10643$10960]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10643$10960, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10643$10960}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10647$10960, 
                    FEPrivate`Not[DynamicChart`click$10647$10960]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[
                   DynamicChart`click$10647$10960, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10647$10960}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"expectations\\nchange\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10682$10962 = False, 
             DynamicChart`click$10686$10962 = False, 
             DynamicChart`click$10690$10962 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    21.984363884491934`}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10682$10962, 
                    FEPrivate`Not[DynamicChart`click$10682$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10682$10962, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10682$10962}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{19.155936759745742`, 
                    38.783319980888976`}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10686$10962, 
                    FEPrivate`Not[DynamicChart`click$10686$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10686$10962, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10686$10962}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10690$10962, 
                    FEPrivate`Not[DynamicChart`click$10690$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10690$10962, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10690$10962}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10682$10962, 
                    FEPrivate`Not[DynamicChart`click$10682$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10682$10962, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10682$10962}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10686$10962, 
                    FEPrivate`Not[DynamicChart`click$10686$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10686$10962, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10686$10962}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10690$10962, 
                    FEPrivate`Not[DynamicChart`click$10690$10962]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10690$10962, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10690$10962}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox[
           StyleBox["\<\"output gap\"\>",
            StripOnInput->False,
            LineSpacing->{0.1, 10},
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Arial",
            FontSize->12,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10727$10964 = False, 
             DynamicChart`click$10731$10964 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10727$10964, 
                    FEPrivate`Not[DynamicChart`click$10727$10964]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10727$10964, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10727$10964}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10731$10964, 
                    FEPrivate`Not[DynamicChart`click$10731$10964]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10731$10964, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10731$10964}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10727$10964, 
                    FEPrivate`Not[DynamicChart`click$10727$10964]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10727$10964, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10727$10964}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10731$10964, 
                    FEPrivate`Not[DynamicChart`click$10731$10964]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10731$10964, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10731$10964}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {3., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {3., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$10766$10966 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, {}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.771194225721782, 
                    38.36910641851587}, {-30.870955064285052`, \
-3.672520919689486}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10766$10966, 
                    FEPrivate`Not[DynamicChart`click$10766$10966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10766$10966, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10766$10966}]]}}}, {}}, {}}, {{{{}, {},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10766$10966, 
                    FEPrivate`Not[DynamicChart`click$10766$10966]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10766$10966, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10766$10966}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {2., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10799$10968 = False, 
             DynamicChart`click$10803$10968 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    30.383841932690437`}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10799$10968, 
                    FEPrivate`Not[DynamicChart`click$10799$10968]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10799$10968, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$10799$10968}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-29.597193606764847`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10803$10968, 
                    FEPrivate`Not[DynamicChart`click$10803$10968]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10803$10968, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10803$10968}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10799$10968, 
                    FEPrivate`Not[DynamicChart`click$10799$10968]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10799$10968, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$10799$10968}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10803$10968, 
                    FEPrivate`Not[DynamicChart`click$10803$10968]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10803$10968, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10803$10968}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$10838$10970 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.771194225721782, 
                    38.36910641851587}, {-30.870955064285052`, \
-3.672520919689486}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10838$10970, 
                    FEPrivate`Not[DynamicChart`click$10838$10970]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10838$10970, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10838$10970}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10838$10970, 
                    FEPrivate`Not[DynamicChart`click$10838$10970]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10838$10970, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10838$10970}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10871$10972 = False, 
             DynamicChart`click$10875$10972 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10871$10972, 
                    FEPrivate`Not[DynamicChart`click$10871$10972]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10871$10972, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10871$10972}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10875$10972, 
                    FEPrivate`Not[DynamicChart`click$10875$10972]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10875$10972, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10875$10972}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10871$10972, 
                    FEPrivate`Not[DynamicChart`click$10871$10972]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10871$10972, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10871$10972}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10875$10972, 
                    FEPrivate`Not[DynamicChart`click$10875$10972]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10875$10972, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10875$10972}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$10910$10974 = False, 
             DynamicChart`click$10914$10974 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.35698066334869, 
                    38.783319980888976`}, {-31.285168626658148`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10910$10974, 
                    FEPrivate`Not[DynamicChart`click$10910$10974]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10910$10974, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$10910$10974}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.35698066334869, 
                    38.783319980888976`}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10914$10974, 
                    FEPrivate`Not[DynamicChart`click$10914$10974]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$10914$10974, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$10914$10974}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10910$10974, 
                    FEPrivate`Not[DynamicChart`click$10910$10974]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10910$10974, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$10910$10974}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$10914$10974, 
                    FEPrivate`Not[DynamicChart`click$10914$10974]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$10914$10974, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$10914$10974}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -3.7},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"raise\"", FontFamily -> "Arial", FontSize -> 
            14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hold\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.8941176470588235, 0.10196078431372549`, 0.10980392156862745`], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"cut\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}}, 
         GridBoxAlignment -> {
          "Columns" -> {Right, Left}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {0, 0.5, 2}, "Rows" -> {{0}}}, 
         BaseStyle -> 
         Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`]], 
        "Grid"], TraditionalForm]], {-1.75, -0.15}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{453.54330708661416`, 340.1574803149606}]], "Output",
 CellChangeTimes->{
  3.714096250763185*^9, {3.7140965305414677`*^9, 3.714096550326813*^9}, 
   3.714096893919243*^9, 3.7140969278101015`*^9, 3.7140969895247035`*^9, {
   3.7140970199524994`*^9, 3.7140970351867943`*^9}, 3.714097244308077*^9, {
   3.7140975386304693`*^9, 3.7140976779932623`*^9}, 3.714097939904608*^9, 
   3.7140979834808574`*^9, 3.714098356074519*^9, 3.7140984504339705`*^9, {
   3.7140985081067348`*^9, 3.7140985416889315`*^9}, 3.7140987021256456`*^9, 
   3.7140988101343565`*^9, {3.7140988499711323`*^9, 3.7140988747134576`*^9}, 
   3.71409894311415*^9, 3.7140996069036465`*^9, 3.7140996878988605`*^9, 
   3.714099925679943*^9, 3.7140999816901875`*^9, 3.714100091690443*^9, 
   3.714100201851081*^9, {3.714107072088416*^9, 3.714107081798143*^9}, 
   3.7142866185112667`*^9, {3.7142923660821967`*^9, 3.714292382808217*^9}, 
   3.7142925355078535`*^9, 3.7142925734319525`*^9, 3.7142926166313286`*^9, 
   3.714292668596411*^9},ExpressionUUID->"1d51ab44-9c07-48e4-9961-\
f04647256d16"]
}, Open  ]],

Cell[BoxData["."], "Input",
 CellChangeTimes->{
  3.7142923734094944`*^9},ExpressionUUID->"d08a252e-26fe-4ccb-ad91-\
98e1c94dae60"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vrtxLst", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<USDRUB momentum\>\"", ",", "\[IndentingNewLine]", "\"\<outcome1\>\"",
      ",", "\[IndentingNewLine]", "\"\<guidance\>\"", ",", 
     "\[IndentingNewLine]", "\"\<outcome2\>\"", ",", "\"\<outcome3\>\""}], 
    " ", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edgeLst", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<USDRUB momentum\>\"", "\[Rule]", "\"\<outcome1\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<USDRUB momentum\>\"", "\[Rule]", "\"\<guidance\>\""}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<outcome2\>\""}], ",", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<outcome3\>\""}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"offsets", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "0.5"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layersizes", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7140602292187777`*^9, 3.7140602508406553`*^9}, {
   3.7140603117126355`*^9, 3.7140603223519716`*^9}, {3.7140608771418843`*^9, 
   3.714060904754238*^9}, {3.7140609578417187`*^9, 3.7140610578234005`*^9}, {
   3.714096200289098*^9, 3.714096203830865*^9}, 3.71409624573918*^9, 
   3.714101185779518*^9, {3.714101319731409*^9, 3.714101334002308*^9}, {
   3.7141013919175653`*^9, 3.7141014962369957`*^9}, {3.7141021623188*^9, 
   3.7141022393954997`*^9}},ExpressionUUID->"bc8026a4-2e4e-4b45-a5c3-\
616e98d946a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graph", ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"24", ",", "18"}], "}"}], "/", "1.5"}], " ", "cm"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexLabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"22", "/", "1.5"}], ",", 
       RowBox[{"FontName", "\[Rule]", "\"\<Arial\>\""}], ",", "Black", ",", 
       RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
       RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
       RowBox[{"LineSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.1`", ",", "10"}], "}"}]}]}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7140964000369315`*^9, 3.714096414137751*^9}, {
  3.7140964475344296`*^9, 3.714096462863325*^9}, {3.7140965126990285`*^9, 
  3.7140965163006372`*^9}, {3.7140988680391707`*^9, 
  3.7140988698819942`*^9}},ExpressionUUID->"7f55c65c-2e71-48ff-ac6d-\
d13ed789711f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"options", "=", 
    RowBox[{"Sequence", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"VertexStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "None", "]"}], ",", "White"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"VertexSize", "\[Rule]", "0.5`"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"VertexCoordinates", "\[Rule]", 
       RowBox[{"alignedKPartiteCoords", "[", 
        RowBox[{"layersizes", ",", "offsets"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"VertexLabels", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<USDRUB momentum\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<USDRUB\\nmomentum\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<guidance\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<guidance\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"VertexShape", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<USDRUB momentum\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"7", ",", "15", ",", "7"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<guidance\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "5", ",", "4"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"7", ",", "10", ",", "3"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "5", ",", "1"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
          RowBox[{"PieChart", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "3"}], "}"}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"MakeLegend", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<hawkish\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<in line\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\"\<dovish\>\"", ",", "\"\<Dot\>\""}], "}"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.9"}], ",", 
            RowBox[{"-", "0.15"}]}], "}"}]}], "]"}], "}"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"EdgeLabels", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<USDRUB momentum\>\"", ",", "\"\<outcome1\>\""}], 
             "]"}], "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<>-0.2%\>\""}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<USDRUB momentum\>\"", ",", "\"\<guidance\>\""}], 
             "]"}], "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<\[LessEqual]0.2%\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<guidance\>\"", ",", "\"\<outcome2\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<no guidance,\\nhold,hike\>\""}], ",", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{"\"\<guidance\>\"", ",", "\"\<outcome3\>\""}], "]"}], 
            "\[Rule]", 
            RowBox[{"VTBTextStyle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
          "\"\<cut\>\""}]}], "\[IndentingNewLine]", "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.714060718565851*^9, {3.714096227546665*^9, 3.7140962363620777`*^9}, {
   3.7140964886920385`*^9, 3.7140964999888916`*^9}, {3.71409654594656*^9, 
   3.7140969875238647`*^9}, {3.7140970179828615`*^9, 
   3.7140970331889553`*^9}, {3.714097097752073*^9, 3.714097130733692*^9}, {
   3.7140972211120467`*^9, 3.7140972516607847`*^9}, {3.71409749156126*^9, 
   3.7140976764448023`*^9}, 3.7140977413547106`*^9, {3.7140978408128786`*^9, 
   3.7140979805868015`*^9}, {3.7140980339710407`*^9, 
   3.7140980953080254`*^9}, {3.714098126044829*^9, 3.714098347308469*^9}, 
   3.7140984473742137`*^9, {3.7140984892823677`*^9, 3.7140985395436893`*^9}, {
   3.7140986374677916`*^9, 3.7140986969751453`*^9}, {3.714098804573248*^9, 
   3.7140988054946656`*^9}, {3.714098837056364*^9, 3.714098857189228*^9}, {
   3.7140989151979837`*^9, 3.7140989154631867`*^9}, 3.7141012082425184`*^9, {
   3.7141015143829927`*^9, 3.7141017500891104`*^9}, {3.714101787181906*^9, 
   3.7141018333261957`*^9}, {3.71410212528788*^9, 3.7141021369949074`*^9}, {
   3.7141022689590807`*^9, 3.714102276822033*^9}, {3.714106814665434*^9, 
   3.714106817791475*^9}, {3.7141068998993483`*^9, 3.7141069033257933`*^9}, {
   3.71410694515495*^9, 3.7141069468749723`*^9}, {3.71410699654803*^9, 
   3.714107011464624*^9}, {3.7142927118931847`*^9, 
   3.714292758577603*^9}},ExpressionUUID->"ca3f9d97-856e-40c0-a77c-\
b56b48b1992f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"vrtxLst", ",", "edgeLst", ",", "options"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ExportEMF", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"exportDirectory", ",", "\"\<cpi.weeklydecomp\>\""}], "}"}], 
      "]"}], ",", "%"}], "]"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7140596317311177`*^9, 3.7140596317311177`*^9}, {
   3.7140599930317497`*^9, 3.714059993281353*^9}, 3.7140602555675154`*^9, {
   3.7140989184206257`*^9, 3.7140989186556287`*^9}, {3.714099679331675*^9, 
   3.7140996864323945`*^9}, {3.7140999793129263`*^9, 
   3.7140999800315447`*^9}, {3.7141000898893957`*^9, 3.7141001158480663`*^9}, 
   3.7141021459764824`*^9},ExpressionUUID->"038ddb1f-fe3d-41c4-81a4-\
2798cf58976f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "USDRUB momentum", "outcome1", "guidance", "outcome2", "outcome3"}, {{{
       1, 2}, {1, 3}, {3, 4}, {3, 5}}, Null}, {
      AspectRatio -> Rational[3, 4], 
       EdgeLabels -> {
        DirectedEdge["USDRUB momentum", "outcome1"] -> 
         Style[">-0.2%", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "outcome2"] -> 
         Style["no guidance,\nhold,hike", FontFamily -> "Arial", FontSize -> 
           8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["USDRUB momentum", "guidance"] -> 
         Style["\[LessEqual]0.2%", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "outcome3"] -> 
         Style["cut", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}]}, Epilog -> {
         Inset[
          Grid[{{
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.21568627450980393`, 0.49411764705882355`, 
                0.7215686274509804], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hawkish", FontFamily -> "Arial", FontSize -> 
              14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "in line", FontFamily -> "Arial", FontSize -> 
              14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.8941176470588235, 0.10196078431372549`, 
                0.10980392156862745`], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "dovish", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}}, 
           Alignment -> {{Right, Left}, Center}, BaseStyle -> 
           Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`], 
           Spacings -> {{0, 0.5, 2}, 0}], {-0.9, -0.15}]}, 
       ImageSize -> {453.54330708661416`, 340.1574803149606}, 
       VertexCoordinates -> {{0., 0.}, {0., -1.}, {-0.5, -2.}, {
        0., -3.}, {-1., -3.}}, 
       VertexLabels -> {
        "outcome1" -> Placed["", {0.5, 0.8}], "USDRUB momentum" -> 
         Placed["USDRUB\nmomentum", {0.5, 0.8}], "outcome3" -> 
         Placed["", {0.5, 0.8}], "outcome2" -> Placed["", {0.5, 0.8}], 
         "guidance" -> Placed["guidance", {0.5, 0.8}]}, VertexLabelStyle -> {
         Directive[14.666666666666666`, FontName -> "Arial", 
          GrayLevel[0], 
          Opacity[0.3], FontOpacity -> 1, LineSpacing -> {0.1, 10}]}, 
       VertexShape -> {"outcome3" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$12484 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 3], 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12484, 
                    FEPrivate`Not[DynamicChart`click$12484]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12484, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12484}]]}}}}}, {}}, {{}}}}, {{{{{}, {}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 3], 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12484, 
                    FEPrivate`Not[DynamicChart`click$12484]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12484, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12484}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome1" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$12400 = False, DynamicChart`click$12404 = 
              False, DynamicChart`click$12408 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.9424777960769379, 
                    3.141592653589793}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12400, 
                    FEPrivate`Not[DynamicChart`click$12400]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12400, {{{1., 0}, {
                    0, 1.}}, {-0.09079809994790934, 0.1782013048376736}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12400}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.199114857512856, 
                    0.9424777960769379}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12404, 
                    FEPrivate`Not[DynamicChart`click$12404]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12404, {{{1., 0}, {0, 1.}}, {
                    0.16180339887498946`, -0.1175570504584947}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12404}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.199114857512856}]}]], 3], 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12408, 
                    FEPrivate`Not[DynamicChart`click$12408]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12408, {{{1., 0}, {
                    0, 1.}}, {-0.1782013048376736, -0.0907980999479093}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12408}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12400, 
                    FEPrivate`Not[DynamicChart`click$12400]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12400, {{{1., 0}, {
                    0, 1.}}, {-0.09079809994790934, 0.1782013048376736}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12400}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12404, 
                    FEPrivate`Not[DynamicChart`click$12404]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12404, {{{1., 0}, {0, 1.}}, {
                    0.16180339887498946`, -0.1175570504584947}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12404}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 3], 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12408, 
                    FEPrivate`Not[DynamicChart`click$12408]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12408, {{{1., 0}, {
                    0, 1.}}, {-0.1782013048376736, -0.0907980999479093}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12408}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome2" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$12445 = False, DynamicChart`click$12449 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.094395102393195, 
                    3.141592653589793}]}]], 5], 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12445, 
                    FEPrivate`Not[DynamicChart`click$12445]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12445, {{{1., 0}, {0, 1.}}, {
                    0.1732050807568877, 0.10000000000000005`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12445}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.094395102393195}]}]], 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12449, 
                    FEPrivate`Not[DynamicChart`click$12449]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[DynamicChart`click$12449, {{{1., 0}, {
                    0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12449}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 5], 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12445, 
                    FEPrivate`Not[DynamicChart`click$12445]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12445, {{{1., 0}, {0, 1.}}, {
                    0.1732050807568877, 0.10000000000000005`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12445}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12449, 
                    FEPrivate`Not[DynamicChart`click$12449]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12449, {{{1., 0}, {
                    0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12449}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "guidance" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$12361 = False, DynamicChart`click$12365 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34906585039886595`, 
                    3.141592653589793}]}]], 5], 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12361, 
                    FEPrivate`Not[DynamicChart`click$12361]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12361, {{{1., 0}, {0, 1.}}, {
                    0.03472963553338609, 0.1969615506024416}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12361}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.34906585039886595`}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12365, 
                    FEPrivate`Not[DynamicChart`click$12365]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12365, {{{1., 0}, {
                    0, 1.}}, {-0.03472963553338606, -0.1969615506024416}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12365}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 5], 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12361, 
                    FEPrivate`Not[DynamicChart`click$12361]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12361, {{{1., 0}, {0, 1.}}, {
                    0.03472963553338609, 0.1969615506024416}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12361}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12365, 
                    FEPrivate`Not[DynamicChart`click$12365]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12365, {{{1., 0}, {
                    0, 1.}}, {-0.03472963553338606, -0.1969615506024416}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12365}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "USDRUB momentum" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$12316 = False, DynamicChart`click$12320 = 
              False, DynamicChart`click$12324 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.624961717374031, 
                    3.141592653589793}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12316, 
                    FEPrivate`Not[DynamicChart`click$12316]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12316, {{{1., 0}, {
                    0, 1.}}, {-0.14519909838462616`, 
                    0.13753989177068465`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$12316}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6249617173740303`, 
                    1.624961717374031}]}]], 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12320, 
                    FEPrivate`Not[DynamicChart`click$12320]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12320, {{{1., 0}, {0, 1.}}, {0.2, 
                    6.66133814775094*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$12320}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.6249617173740303`}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12324, 
                    FEPrivate`Not[DynamicChart`click$12324]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$12324, {{{1., 0}, {
                    0, 1.}}, {-0.1451990983846261, -0.1375398917706847}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12324}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12316, 
                    FEPrivate`Not[DynamicChart`click$12316]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12316, {{{1., 0}, {
                    0, 1.}}, {-0.14519909838462616`, 
                    0.13753989177068465`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$12316}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12320, 
                    FEPrivate`Not[DynamicChart`click$12320]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12320, {{{1., 0}, {0, 1.}}, {0.2, 
                    6.66133814775094*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$12320}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12324, 
                    FEPrivate`Not[DynamicChart`click$12324]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$12324, {{{1., 0}, {
                    0, 1.}}, {-0.1451990983846261, -0.1375398917706847}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12324}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}]}, VertexSize -> {0.5}, VertexStyle -> {
         Directive[
          EdgeForm[None], 
          GrayLevel[1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 0.}, {0., -1.}}, 0.25], InsetBox[
          StyleBox["\<\">-0.2%\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., 0.}, {-0.5, -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"\[LessEqual]0.2%\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.25, -1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-0.5, -2.}, {0., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no guidance,\\nhold,hike\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.25, -2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-0.5, -2.}, {-1., -3.}}, 0.25],
          InsetBox[
          StyleBox["\<\"cut\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.75, -2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], EdgeForm[
        None], {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$12316$12507 = False, 
             DynamicChart`click$12320$12507 = False, 
             DynamicChart`click$12324$12507 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.624961717374031, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    76.83809807680882}, {-32.288195051515984`, \
-15.64544718552585}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12316$12507, 
                    FEPrivate`Not[DynamicChart`click$12316$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12316$12507, {{{1., 0}, {
                    0, 1.}}, {-0.14519909838462616`, 
                    0.13753989177068465`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$12316$12507}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6249617173740303`, 
                    1.624961717374031}]},
                    
                    ImageSizeCache->{{73.01101667582712, 
                    95.28424526242995}, {-32.3084846994879, \
-1.8108367963099852`}}],
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12320$12507, 
                    FEPrivate`Not[DynamicChart`click$12320$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12320$12507, {{{1., 0}, {0, 1.}}, {
                    0.2, 6.66133814775094*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                    0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12320$12507}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.6249617173740303`}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    76.83809807680882}, {-18.47387431027204, \
-1.8311264442819102`}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12324$12507, 
                    FEPrivate`Not[DynamicChart`click$12324$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12324$12507, {{{1., 0}, {
                    0, 1.}}, {-0.1451990983846261, -0.1375398917706847}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12324$12507}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12316$12507, 
                    FEPrivate`Not[DynamicChart`click$12316$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12316$12507, {{{1., 0}, {
                    0, 1.}}, {-0.14519909838462616`, 
                    0.13753989177068465`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$12316$12507}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12320$12507, 
                    FEPrivate`Not[DynamicChart`click$12320$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12320$12507, {{{1., 0}, {0, 1.}}, {
                    0.2, 6.66133814775094*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                    0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$12320$12507}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12324$12507, 
                    FEPrivate`Not[DynamicChart`click$12324$12507]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12324$12507, {{{1., 0}, {
                    0, 1.}}, {-0.1451990983846261, -0.1375398917706847}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$12324$12507}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., 0.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"USDRUB\\nmomentum\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., 0.30000000000000004},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$12400$12509 = False, 
             DynamicChart`click$12404$12509 = False, 
             DynamicChart`click$12408$12509 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.9424777960769379, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    87.68047135413323}, {-32.308484699487906`, \
-15.64544718552585}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12400$12509, 
                    FEPrivate`Not[DynamicChart`click$12400$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12400$12509, {{{1., 0}, {
                    0, 1.}}, {-0.09079809994790934, 0.1782013048376736}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12400$12509}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.199114857512856, 
                    0.9424777960769379}]},
                    
                    ImageSizeCache->{{63.167297674738194`, 
                    95.28424526242995}, {-29.66630922570388, \
-1.8108367963099887`}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12404$12509, 
                    FEPrivate`Not[DynamicChart`click$12404$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12404$12509, {{{1., 0}, {0, 1.}}, {
                    0.16180339887498946`, -0.1175570504584947}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12404$12509}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.199114857512856}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    76.83809807680882}, {-18.47387431027204, \
-4.453012270094018}}],
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12408$12509, 
                    FEPrivate`Not[DynamicChart`click$12408$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12408$12509, {{{1., 0}, {
                    0, 1.}}, {-0.1782013048376736, -0.0907980999479093}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12408$12509}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12400$12509, 
                    FEPrivate`Not[DynamicChart`click$12400$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12400$12509, {{{1., 0}, {
                    0, 1.}}, {-0.09079809994790934, 0.1782013048376736}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$12400$12509}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12404$12509, 
                    FEPrivate`Not[DynamicChart`click$12404$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12404$12509, {{{1., 0}, {0, 1.}}, {
                    0.16180339887498946`, -0.1175570504584947}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$12404$12509}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12408$12509, 
                    FEPrivate`Not[DynamicChart`click$12408$12509]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12408$12509, {{{1., 0}, {
                    0, 1.}}, {-0.1782013048376736, -0.0907980999479093}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$12408$12509}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$12361$12511 = False, 
             DynamicChart`click$12365$12511 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34906585039886595`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    95.28424526242995}, {-32.308484699487906`, \
-10.913731757351453`}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12361$12511, 
                    FEPrivate`Not[DynamicChart`click$12361$12511]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$12361$12511, {{{1., 0}, {0, 1.}}, {
                    0.03472963553338609, 0.1969615506024416}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12361$12511}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.34906585039886595`}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    94.17180646906775}, {-18.47387431027204, \
-1.8108367963099887`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12365$12511, 
                    FEPrivate`Not[DynamicChart`click$12365$12511]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12365$12511, {{{1., 0}, {
                    0, 1.}}, {-0.03472963553338606, -0.1969615506024416}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12365$12511}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12361$12511, 
                    FEPrivate`Not[DynamicChart`click$12361$12511]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12361$12511, {{{1., 0}, {0, 1.}}, {
                    0.03472963553338609, 0.1969615506024416}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$12361$12511}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12365$12511, 
                    FEPrivate`Not[DynamicChart`click$12365$12511]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12365$12511, {{{1., 0}, {
                    0, 1.}}, {-0.03472963553338606, -0.1969615506024416}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$12365$12511}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-0.5, -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"guidance\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-0.5, -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$12445$12513 = False, 
             DynamicChart`click$12449$12513 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-2.094395102393195, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    95.28424526242995}, {-32.3084846994879, \
-1.8108367963099852`}}],
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12445$12513, 
                    FEPrivate`Not[DynamicChart`click$12445$12513]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12445$12513, {{{1., 0}, {0, 1.}}, {
                    0.1732050807568877, 0.10000000000000005`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$12445$12513}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.094395102393195}]},
                    
                    ImageSizeCache->{{55.56352376644148, 
                    76.83809807680882}, {-18.47387431027204, \
-3.6643231370047875`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12449$12513, 
                    FEPrivate`Not[DynamicChart`click$12449$12513]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12449$12513, {{{1., 0}, {
                    0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12449$12513}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                    StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12445$12513, 
                    FEPrivate`Not[DynamicChart`click$12445$12513]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12445$12513, {{{1., 0}, {0, 1.}}, {
                    0.1732050807568877, 0.10000000000000005`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$12445$12513}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12449$12513, 
                    FEPrivate`Not[DynamicChart`click$12449$12513]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12449$12513, {{{1., 0}, {
                    0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$12449$12513}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$12484$12515 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, {}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{55.97773732881457, 
                    94.87003170005687}, {-31.894271137114806`, \
-2.2250503586830845`}}],
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12484$12515, 
                    FEPrivate`Not[DynamicChart`click$12484$12515]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$12484$12515, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$12484$12515}]]}}}, {}}, {}}, {{{{}, {},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$12484$12515, 
                    FEPrivate`Not[DynamicChart`click$12484$12515]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$12484$12515, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$12484$12515}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -2.7},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hawkish\"", FontFamily -> "Arial", FontSize -> 
            14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"in line\"", FontFamily -> "Arial", FontSize -> 
            14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.8941176470588235, 0.10196078431372549`, 0.10980392156862745`], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"dovish\"", FontFamily -> "Arial", FontSize -> 
            14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}}, 
         GridBoxAlignment -> {
          "Columns" -> {Right, Left}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {0, 0.5, 2}, "Rows" -> {{0}}}, 
         BaseStyle -> 
         Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`]], 
        "Grid"], TraditionalForm]], {-0.9, -0.15}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{453.54330708661416`, 340.1574803149606}]], "Output",
 CellChangeTimes->{
  3.714096250763185*^9, {3.7140965305414677`*^9, 3.714096550326813*^9}, 
   3.714096893919243*^9, 3.7140969278101015`*^9, 3.7140969895247035`*^9, {
   3.7140970199524994`*^9, 3.7140970351867943`*^9}, 3.714097244308077*^9, {
   3.7140975386304693`*^9, 3.7140976779932623`*^9}, 3.714097939904608*^9, 
   3.7140979834808574`*^9, 3.714098356074519*^9, 3.7140984504339705`*^9, {
   3.7140985081067348`*^9, 3.7140985416889315`*^9}, 3.7140987021256456`*^9, 
   3.7140988101343565`*^9, {3.7140988499711323`*^9, 3.7140988747134576`*^9}, 
   3.71409894311415*^9, 3.7140996069036465`*^9, 3.7140996878988605`*^9, 
   3.714099925679943*^9, 3.7140999816901875`*^9, 3.714100091690443*^9, 
   3.714100201851081*^9, {3.7141021474831123`*^9, 3.714102279627488*^9}, 
   3.7141068215289235`*^9, 3.7141069528502502`*^9, 3.7141070143682613`*^9, {
   3.714292718329672*^9, 
   3.714292760263425*^9}},ExpressionUUID->"7f78df6e-dd74-4c03-83ef-\
de3f9b45cb1e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy page", "Title",
 CellChangeTimes->{{3.714204986895368*^9, 
  3.714204989867426*^9}},ExpressionUUID->"e1f5555c-45a6-4bb7-b123-\
df20f503ca3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"pg", ",", " ", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7141842830910535`*^9, 3.7141842899315615`*^9}, 
   3.7141846816720324`*^9, {3.7141917412374125`*^9, 
   3.7141917414090147`*^9}},ExpressionUUID->"0a013aed-9632-4d1d-be81-\
01a8da6c1e07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-\
a6bf-86c837e15f95\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-\
a6bf-86c837e15f95\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-a6bf-\
86c837e15f95"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-a6bf-\
86c837e15f95"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-a6bf-\
86c837e15f95", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/1c8c77f7-446e-4dd8-a6bf-86c837e15f95"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7141843064031954`*^9, {3.7141844110682955`*^9, 3.714184425624751*^9}, 
   3.714184512377425*^9, 3.714184684144864*^9, 3.71419174411485*^9, 
   3.7141918821578007`*^9, 3.7141921333479967`*^9, 3.7141926730005693`*^9, 
   3.714192824360466*^9, 3.714192878669346*^9, 3.714192942851672*^9, 
   3.714193770034195*^9, 3.7142010786138406`*^9, 3.7142028046979165`*^9, 
   3.714203185548544*^9, 
   3.7142032724538927`*^9},ExpressionUUID->"e9ba1ea3-8c86-4984-b540-\
dce10190c615"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"FormPage", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", " ", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Interpreter\>\"", " ", "\[Rule]", " ", 
         RowBox[{"Restricted", "[", 
          RowBox[{"\"\<Integer\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "10"}], "}"}]}], "]"}]}], ",", " ", 
        RowBox[{"\"\<Control\>\"", " ", "\[Rule]", " ", "Slider"}]}], 
       "|>"}]}], "}"}], ",", " ", "func"}], "]"}], "]"}]], "Input",ExpressionU\
UID->"bcc4b03f-36ce-48e9-a01f-31c37688fc2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "VTBTextStyle"}]], "Input",
 CellChangeTimes->{{3.7141916981306105`*^9, 
  3.714191702347686*^9}},ExpressionUUID->"cc9a47bd-d54a-462c-a042-\
998d0f1c5f7d"],

Cell[CellGroupData[{

Cell["Economica`VTBTextStyle", "Print", "PrintUsage",
 CellChangeTimes->{3.7141917029092927`*^9},
 CellTags->
  "Info613714206102-9942316",ExpressionUUID->"8ed13560-1c37-4c58-bbff-\
bd7f9c028bba"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"VTBTextStyle", "[", 
          RowBox[{"x_", ",", 
           RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
         RowBox[{"Style", "[", 
          RowBox[{"x", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\<\"Arial\"\>"}], ",", 
           RowBox[{"FontSize", "\[Rule]", 
            RowBox[{"OptionValue", "[", "FontSize", "]"}]}], ",", "Black", 
           ",", 
           RowBox[{"LineSpacing", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1`", ",", "10"}], "}"}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "VTBTextStyle", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "14.666666666666666`"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Economica`VTBTextStyle],
  Editable->False]], "Print",
 CellChangeTimes->{3.714191702924893*^9},
 CellTags->
  "Info613714206102-9942316",ExpressionUUID->"dd38d8a7-43b3-44b0-93b0-\
3267615ac4e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pg", "=", 
  RowBox[{"FormPage", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Guidance\>\"", ",", "\"\<What guidance did CBR provide?\>\""}], 
        "}"}], " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Cut, hold or absent\>\"", ",", "\"\<Hike\>\""}], "}"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Core\>\"", " ", ",", "\"\<Is this a core meeting?\>\""}],
         "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Yes\>\"", ",", "\"\<No\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<pi\>\"", ",", 
         "\"\<What is inflationry momentum?\\nLeftmost = very low, rightmost \
= very high\>\""}], "}"}], "\[Rule]", " ", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Interpreter\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Restricted", "[", 
           RowBox[{"\"\<Real\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "]"}]}], ",", " ", 
         RowBox[{"\"\<Control\>\"", " ", "\[Rule]", " ", "Slider"}]}], 
        "|>"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<y\>\"", ",", 
         "\"\<What is deviation from\\nnormal capacity utilization?\>\""}], 
        "}"}], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Negative\>\"", ",", "\"\<Zero\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Epi\>\"", ",", 
         "\"\<How did inflation expectations change recently?\\nLeftmost = \
dropped, rightmost = jumped\>\""}], "}"}], "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Interpreter\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Restricted", "[", 
           RowBox[{"\"\<Real\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "0.7"}], "}"}]}], "]"}]}], ",", " ", 
         RowBox[{"\"\<Control\>\"", " ", "\[Rule]", " ", "Slider"}]}], " ", 
        "|>"}]}]}], "\[IndentingNewLine]", "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"alignedKPartiteCoords", "[", 
       RowBox[{"layersizes_List", ",", "offsett_List"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"-", "1"}], 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"j", "-", "1"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "layersizes", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"1", "-", 
              RowBox[{"offsett", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"layersizes", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", 
              RowBox[{"offsett", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", "1"}],
         "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Options", "[", "VTBTextStyle", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "14.666666666666666`"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"VTBTextStyle", "[", 
       RowBox[{"x_", ",", 
        RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
      RowBox[{"Style", "[", 
       RowBox[{"x", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FontSize", "]"}]}], ",", "Black", ",", 
        RowBox[{"LineSpacing", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.1`", ",", "10"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vrtxLst", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<guidance\>\"", ",", "\[IndentingNewLine]", "\"\<infl.accel.\>\"", 
        ",", "\"\<is core? alt\>\"", ",", "\[IndentingNewLine]", 
        "\"\<outcome7\>\"", ",", "\"\<outcome8\>\"", ",", 
        "\[IndentingNewLine]", "\"\<is core?\>\"", ",", 
        "\"\<exp.acceleration\>\"", ",", "\"\<outputgap\>\"", ",", 
        "\[IndentingNewLine]", "\"\<outcome1\>\"", ",", "\"\<outcome2\>\"", 
        ",", "\"\<outcome3\>\"", ",", "\"\<outcome4\>\"", ",", 
        "\"\<outcome5\>\"", ",", "\"\<outcome6\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgeLst", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<infl.accel.\>\""}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", "\"\<is core?\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"\"\<is core?\>\"", "\[Rule]", "\"\<outcome1\>\""}], ",", 
        RowBox[{"\"\<is core?\>\"", "\[Rule]", "\"\<outcome2\>\""}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
        "\"\<infl.accel.\>\"", "\[Rule]", "\"\<exp.acceleration\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", "\"\<outcome3\>\""}], 
        ",", 
        RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", "\"\<outcome4\>\""}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", "\"\<outputgap\>\""}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"\"\<outputgap\>\"", "\[Rule]", "\"\<outcome5\>\""}], ",", 
        RowBox[{"\"\<outputgap\>\"", "->", "\"\<outcome6\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<guidance\>\"", "\[Rule]", "\"\<is core? alt\>\""}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"\"\<is core? alt\>\"", "\[Rule]", "\"\<outcome7\>\""}], ",", 
        RowBox[{"\"\<is core? alt\>\"", "\[Rule]", "\"\<outcome8\>\""}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"offsets", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"layersizes", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2", ",", "3", ",", "6"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SetOptions", "[", 
      RowBox[{"Graph", ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"24", ",", "18"}], "}"}], "/", "1.5"}], " ", "28.4"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"VertexLabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"22", "/", "1.5"}], ",", 
          RowBox[{"FontName", "\[Rule]", "\"\<Arial\>\""}], ",", "Black", ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
          RowBox[{"FontOpacity", "\[Rule]", "1"}], ",", 
          RowBox[{"LineSpacing", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "10"}], "}"}]}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"options", "=", 
      RowBox[{"Sequence", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "None", "]"}], ",", "White"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"VertexSize", "\[Rule]", "0.5`"}], ",", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"alignedKPartiteCoords", "[", 
          RowBox[{"layersizes", ",", "offsets"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<guidance\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<guidance\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<inflation\\nacceleration\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<is core? alt\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<is core?\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome7\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome8\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<is core?\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<is core?\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<inflation\\nexpectations\\nchange\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outputgap\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<output\\ngap\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome4\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome5\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome6\>\"", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.8"}], "}"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"VertexShape", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<guidance\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"6", ",", "15", ",", "10"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<infl.accel.\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "13", ",", "10"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<is core? alt\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"4", ",", "2", ",", "0"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome7\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"4", ",", "0", ",", "0"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome8\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "0"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<is core?\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "6"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<exp.acceleration\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "7", ",", "2"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outputgap\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "4"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome1\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome2\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "4"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome3\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "2"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome4\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "6", ",", "0"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome5\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<outcome6\>\"", "\[Rule]", 
            RowBox[{"PieChart", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "0"}], "}"}], "]"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabels", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<guidance\>\"", ",", "\"\<infl.accel.\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<no guidance,\\nhold,cut\>\""}], ",", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<infl.accel.\>\"", ",", "\"\<is core?\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<negative\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<is core?\>\"", ",", "\"\<outcome1\>\""}], "]"}], 
              "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<no\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<is core?\>\"", ",", "\"\<outcome2\>\""}], "]"}], 
              "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<yes\>\""}], ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{
               "\"\<infl.accel.\>\"", ",", "\"\<exp.acceleration\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<roughly\\nzero\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<exp.acceleration\>\"", ",", "\"\<outcome3\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<decline\\nstrongly\>\""}], ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<exp.acceleration\>\"", ",", "\"\<outcome4\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<roughly level\\nor increase\>\""}], ",", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<infl.accel.\>\"", ",", "\"\<outputgap\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<positive\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<outputgap\>\"", ",", "\"\<outcome5\>\""}], "]"}], 
              "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<negative\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<outputgap\>\"", ",", "\"\<outcome6\>\""}], "]"}], 
              "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<zero\>\""}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<guidance\>\"", ",", "\"\<is core? alt\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<hike\>\""}], ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<is core? alt\>\"", ",", "\"\<outcome7\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<no\>\""}], ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rule", "[", 
               RowBox[{"\"\<is core? alt\>\"", ",", "\"\<outcome8\>\""}], 
               "]"}], "\[Rule]", 
              RowBox[{"VTBTextStyle", "[", 
               RowBox[{"#", ",", 
                RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}]}], "&"}], "@", 
            "\"\<yes\>\""}]}], "\t\t", "\[IndentingNewLine]", "}"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inst", "=", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"MakeLegend", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<hike\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<hold\>\"", ",", "\"\<Dot\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<cut\>\"", ",", "\"\<Dot\>\""}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.25"}], ",", 
          RowBox[{"-", "0.15"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
       "vrtxLst", ",", "edgeLst", ",", "options", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Epilog", "->", 
         RowBox[{"{", 
          RowBox[{"inst", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Arrow", "[", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#Guidance", "\[Equal]", "\"\<Hike\>\""}], "&&", 
               RowBox[{"#Core", "\[Equal]", " ", "\"\<Yes\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2."}], ",", 
                  RowBox[{"-", "2."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"#Guidance", "==", "\"\<Hike\>\""}], "&&", 
               RowBox[{"#Core", "==", "\"\<No\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1."}], ",", 
                  RowBox[{"-", "2."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", " ", 
               RowBox[{"#pi", ">", "0.04"}], "&&", 
               RowBox[{"#y", "\[Equal]", " ", "\"\<Zero\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1."}], ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2."}], ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", " ", 
               RowBox[{"#pi", ">", "0.04"}], "&&", 
               RowBox[{"#y", "\[Equal]", " ", "\"\<Negative\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1."}], ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1."}], ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", " ", 
               RowBox[{
                RowBox[{"-", "0.04"}], "\[LessEqual]", " ", "#pi", 
                "\[LessEqual]", " ", "0.04"}], "&&", 
               RowBox[{"#Epi", ">", 
                RowBox[{"-", "0.7"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", " ", 
               RowBox[{
                RowBox[{"-", "0.04"}], "\[LessEqual]", " ", "#pi", 
                "\[LessEqual]", " ", "0.04"}], "&&", 
               RowBox[{"#Epi", "\[LessEqual]", " ", 
                RowBox[{"-", "0.7"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", "  ", 
               RowBox[{"#pi", "<", 
                RowBox[{"-", " ", "0.04"}]}], "&&", 
               RowBox[{"#Core", "\[Equal]", " ", "\"\<Yes\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "#Guidance", "\[Equal]", " ", "\"\<Cut, hold or absent\>\""}], 
               "&&", "  ", 
               RowBox[{"#pi", "<", 
                RowBox[{"-", " ", "0.04"}]}], "&&", 
               RowBox[{"#Core", "\[Equal]", " ", "\"\<No\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.", ",", 
                  RowBox[{"-", "1."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "3."}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"3", ",", 
                  RowBox[{"-", "4."}]}], "}"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", 
          "}"}]}]}], "\[IndentingNewLine]", "]"}], "&"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"AppearanceRules", "\[Rule]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "\"\<Title\>\"", " ", "\[Rule]", " ", 
        "\"\<Reading leaves from the CBR's decision tree\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{
       "\"\<Description\>\"", " ", "\[Rule]", " ", 
        "\"\<Fill in description of the macro backround to see the most \
likely CBR's Board of Directors meeting outcome.\>\""}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.71418520553564*^9, 3.714185220759162*^9}, {
   3.7141853203961244`*^9, 3.714185337691854*^9}, 3.714185393239408*^9, {
   3.714189338744069*^9, 3.7141893418105116`*^9}, {3.7141893941950283`*^9, 
   3.7141894010527215`*^9}, {3.714189527040229*^9, 3.7141895290444565`*^9}, {
   3.7141895684477863`*^9, 3.714189609592535*^9}, {3.714189665224501*^9, 
   3.714189906678811*^9}, {3.714189971352476*^9, 3.7141900400527906`*^9}, {
   3.714190070071596*^9, 3.7141900990286083`*^9}, {3.714190171988407*^9, 
   3.7141906988040247`*^9}, {3.714190735634117*^9, 3.7141908545231333`*^9}, {
   3.714190891405245*^9, 3.7141909208892417`*^9}, 3.7141910460089417`*^9, {
   3.714191077402769*^9, 3.7141911153942766`*^9}, {3.714191197884787*^9, 
   3.714191200373621*^9}, {3.7141912396781654`*^9, 3.714191365252468*^9}, {
   3.714191432127002*^9, 3.7141914461821966`*^9}, {3.7141915122836933`*^9, 
   3.714191516001541*^9}, {3.714191553082843*^9, 3.7141916339881268`*^9}, {
   3.714191692269528*^9, 3.7141917240067773`*^9}, {3.714191798263483*^9, 
   3.7141918639979568`*^9}, {3.714192103235998*^9, 3.7141921046440163`*^9}, {
   3.7141925763454723`*^9, 3.714192592570687*^9}, {3.7141926446651907`*^9, 
   3.7141926606404076`*^9}, {3.7141927914098363`*^9, 
   3.7141928295577345`*^9}, {3.71419372835725*^9, 3.7141937599244623`*^9}, {
   3.7142005026167035`*^9, 3.7142005270756264`*^9}, {3.714200577208877*^9, 
   3.7142009753980465`*^9}, {3.714201005811061*^9, 3.7142010236603026`*^9}, {
   3.7142016066485624`*^9, 3.7142016910728717`*^9}, 3.714201770329113*^9, {
   3.714201815570108*^9, 3.7142019404129434`*^9}, {3.7142031570845604`*^9, 
   3.7142031601134076`*^9}, {3.7142032595201225`*^9, 
   3.714203261303546*^9}},ExpressionUUID->"60c654ba-debb-4eef-ba3c-\
5ba0e4ab8886"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Forms`FormPage`PackagePrivate`temp$$ = Association[
   "Guidance" -> 
    Association[
     "Interpreter" -> {"Cut, hold or absent", "Hike"}, "Label" -> 
      "What guidance did CBR provide?", "Input" -> "Cut, hold or absent"], 
    "Core" -> Association[
     "Interpreter" -> {"Yes", "No"}, "Label" -> "Is this a core meeting?", 
      "Input" -> "Yes"], "pi" -> 
    Association[
     "Interpreter" -> Restricted["Real", {-0.1, 0.1}], "Control" -> Slider, 
      "Label" -> 
      "What is inflationry momentum?\nLeftmost = very low, rightmost = very \
high", "Input" -> -0.10000000000000002`], "y" -> 
    Association[
     "Interpreter" -> {"Negative", "Zero"}, "Label" -> 
      "What is deviation from\nnormal capacity utilization?", "Input" -> 
      "Negative"], "Epi" -> 
    Association[
     "Interpreter" -> Restricted["Real", {-1.2, 0.7}], "Control" -> Slider, 
      "Label" -> 
      "How did inflation expectations change recently?\nLeftmost = dropped, \
rightmost = jumped", "Input" -> -1.2000000000000002`]], 
   Forms`FormPage`PackagePrivate`vals$$ = Association[
   "Guidance" -> "Cut, hold or absent", "Core" -> "Yes", 
    "pi" -> -0.10000000000000002`, "y" -> "Negative", 
    "Epi" -> -1.2000000000000002`], Forms`FormPage`PackagePrivate`valid$$ = 
   False, Forms`FormPage`PackagePrivate`form2$$ = FormObject[
    Association[
    "Guidance" -> 
     Association[
      "Interpreter" -> {"Cut, hold or absent", "Hike"}, "Label" -> 
       "What guidance did CBR provide?", "Input" -> "Cut, hold or absent"], 
     "Core" -> Association[
      "Interpreter" -> {"Yes", "No"}, "Label" -> "Is this a core meeting?", 
       "Input" -> "Yes"], "pi" -> 
     Association[
      "Interpreter" -> Restricted["Real", {-0.1, 0.1}], "Control" -> Slider, 
       "Label" -> 
       "What is inflationry momentum?\nLeftmost = very low, rightmost = very \
high", "Input" -> -0.10000000000000002`], "y" -> 
     Association[
      "Interpreter" -> {"Negative", "Zero"}, "Label" -> 
       "What is deviation from\nnormal capacity utilization?", "Input" -> 
       "Negative"], "Epi" -> 
     Association[
      "Interpreter" -> Restricted["Real", {-1.2, 0.7}], "Control" -> Slider, 
       "Label" -> 
       "How did inflation expectations change recently?\nLeftmost = dropped, \
rightmost = jumped", "Input" -> -1.2000000000000002`]], 
    Association[
    "Guidance" -> "Cut, hold or absent", "Core" -> "Yes", 
     "pi" -> -0.10000000000000002`, "y" -> "Negative", 
     "Epi" -> -1.2000000000000002`], AppearanceRules -> 
    Association[
     "Title" -> "Reading leaves from the CBR's decision tree", "Description" -> 
      "Fill in description of the macro backround to see the most likely \
CBR's Board of Directors meeting outcome."]], 
   Forms`FormPage`PackagePrivate`valid2$$}, 
   DynamicBox[ToBoxes[
     With[{Forms`FormPage`PackagePrivate`formpane$ = Panel[
         Forms`getFormLayout[
          Forms`PackageScope`bindableForm[
          Forms`FormPage`PackagePrivate`temp$$, 
           Evaluate[Forms`FormPage`PackagePrivate`form2$$], None, None -> 
           Forms`PackageScope`completeAction[
            Forms`FormPage`PackagePrivate`form2$$, 
             Forms`FormPage`PackagePrivate`temp$$, 
             Forms`FormPage`PackagePrivate`vals$$, (
             Unset[Forms`FormPage`PackagePrivate`vals$$]; 
             Forms`FormPage`PackagePrivate`vals$$ = #; 
             Forms`FormPage`PackagePrivate`valid2$$ = Not[
                TrueQ[Forms`PackageScope`$DontComplete]])& , {
             AppearanceRules -> 
              Association[
               "Title" -> "Reading leaves from the CBR's decision tree", 
                "Description" -> 
                "Fill in description of the macro backround to see the most \
likely CBR's Board of Directors meeting outcome."]}]]]], 
       Forms`FormPage`PackagePrivate`resultpane$ = Framed[
         If[
         Forms`FormPage`PackagePrivate`valid$$ = 
          And[Forms`FormPage`PackagePrivate`vals$$ =!= Association[], 
            FreeQ[
             Values[Forms`FormPage`PackagePrivate`vals$$], 
             Alternatives[
              Blank[Failure], Forms`PackageScope`fieldHidden]], 
            TrueQ[Forms`FormPage`PackagePrivate`valid2$$]], 
          Unset[Forms`FormPage`PackagePrivate`valid2$$]; Style[
            (
            Graph[$CellContext`vrtxLst, $CellContext`edgeLst, \
$CellContext`options, Epilog -> {$CellContext`inst, 
               Thickness[0.015], 
               Arrow[
                Which[
                 And[Slot["Guidance"] == "Hike", Slot["Core"] == "Yes"], {{0.,
                  0.}, {0., -1.}, {-2., -2.}}, 
                 And[Slot["Guidance"] == "Hike", Slot["Core"] == "No"], {{0., 
                 0.}, {0., -1.}, {-1., -2.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] > 0.04,
                   Slot["y"] == "Zero"], {{0., 0.}, {
                 1., -1.}, {-1., -3.}, {-2., -4.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] > 0.04,
                   Slot["y"] == "Negative"], {{0., 0.}, {
                 1., -1.}, {-1., -3.}, {-1., -4.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", -0.04 <= 
                  Slot["pi"] <= 0.04, Slot["Epi"] > -0.7], {{0., 0.}, {
                  1., -1.}, {0, -3.}, {0, -4.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", -0.04 <= 
                  Slot["pi"] <= 0.04, Slot["Epi"] <= -0.7], {{0., 0.}, {
                  1., -1.}, {0, -3.}, {1, -4.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", 
                  Slot["pi"] < -0.04, Slot["Core"] == "Yes"], {{0., 0.}, {
                  1., -1.}, {1, -3.}, {2, -4.}}, 
                 And[
                 Slot["Guidance"] == "Cut, hold or absent", 
                  Slot["pi"] < -0.04, Slot["Core"] == "No"], {{0., 0.}, {
                  1., -1.}, {1, -3.}, {3, -4.}}]]}]& )[
            Forms`FormPage`PackagePrivate`vals$$], "Output", "StandardForm"], 
          Style["Invalid form", "Message"]], FrameStyle -> Lighter[Gray], 
         Background -> White]}, 
      Panel[
       Column[
        Forms`doLayout[
        Automatic, Forms`FormPage`PackagePrivate`valid$$, {
         Forms`FormPage`PackagePrivate`formpane$, 
          Forms`FormPage`PackagePrivate`resultpane$, 
          Panel[
           Item[
            Row[{
              Spacer[0], 
              DefaultButton[
               Forms`PackageScope`completeAction[
               Forms`FormPage`PackagePrivate`form2$$, 
                Forms`FormPage`PackagePrivate`temp$$, 
                Forms`FormPage`PackagePrivate`vals$$, (
                Unset[Forms`FormPage`PackagePrivate`vals$$]; 
                Forms`FormPage`PackagePrivate`vals$$ = #; 
                Forms`FormPage`PackagePrivate`valid2$$ = Not[
                   TrueQ[Forms`PackageScope`$DontComplete]])& , {
                AppearanceRules -> 
                 Association[
                  "Title" -> "Reading leaves from the CBR's decision tree", 
                   "Description" -> 
                   "Fill in description of the macro backround to see the \
most likely CBR's Board of Directors meeting outcome."]}]]}], Alignment -> 
            Right]]}]]]], StandardForm],
    ImageSizeCache->{56., {2., 9.}},
    TrackedSymbols:>{Forms`FormPage`PackagePrivate`vals$$}],
   DynamicModuleValues:>{}],
  FormPage[
   FormObject[
    Association[
    "Guidance" -> 
     Association[
      "Interpreter" -> {"Cut, hold or absent", "Hike"}, "Label" -> 
       "What guidance did CBR provide?"], "Core" -> 
     Association[
      "Interpreter" -> {"Yes", "No"}, "Label" -> "Is this a core meeting?"], 
     "pi" -> Association[
      "Interpreter" -> Restricted["Real", {-0.1, 0.1}], "Control" -> Slider, 
       "Label" -> 
       "What is inflationry momentum?\nLeftmost = very low, rightmost = very \
high"], "y" -> 
     Association[
      "Interpreter" -> {"Negative", "Zero"}, "Label" -> 
       "What is deviation from\nnormal capacity utilization?"], "Epi" -> 
     Association[
      "Interpreter" -> Restricted["Real", {-1.2, 0.7}], "Control" -> Slider, 
       "Label" -> 
       "How did inflation expectations change recently?\nLeftmost = dropped, \
rightmost = jumped"]], 
    Association[], AppearanceRules -> 
    Association[
     "Title" -> "Reading leaves from the CBR's decision tree", "Description" -> 
      "Fill in description of the macro backround to see the most likely \
CBR's Board of Directors meeting outcome."]], 
   Graph[$CellContext`vrtxLst, $CellContext`edgeLst, $CellContext`options, 
    Epilog -> {$CellContext`inst, 
      Thickness[0.015], 
      Arrow[
       Which[
        And[Slot["Guidance"] == "Hike", Slot["Core"] == "Yes"], {{0., 0.}, {
        0., -1.}, {-2., -2.}}, 
        And[Slot["Guidance"] == "Hike", Slot["Core"] == "No"], {{0., 0.}, {
        0., -1.}, {-1., -2.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] > 0.04, 
         Slot["y"] == "Zero"], {{0., 0.}, {1., -1.}, {-1., -3.}, {-2., -4.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] > 0.04, 
         Slot["y"] == "Negative"], {{0., 0.}, {
        1., -1.}, {-1., -3.}, {-1., -4.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", -0.04 <= Slot["pi"] <= 
         0.04, Slot["Epi"] > -0.7], {{0., 0.}, {1., -1.}, {0, -3.}, {0, -4.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", -0.04 <= Slot["pi"] <= 
         0.04, Slot["Epi"] <= -0.7], {{0., 0.}, {1., -1.}, {0, -3.}, {
         1, -4.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] < -0.04, 
         Slot["Core"] == "Yes"], {{0., 0.}, {1., -1.}, {1, -3.}, {2, -4.}}, 
        And[
        Slot["Guidance"] == "Cut, hold or absent", Slot["pi"] < -0.04, 
         Slot["Core"] == "No"], {{0., 0.}, {1., -1.}, {1, -3.}, {
         3, -4.}}]]}]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.714191450279654*^9, 3.714191517220561*^9, {3.7141915690498548`*^9, 
   3.714191578344778*^9}, 3.7141916405274134`*^9, 3.714191725381398*^9, {
   3.7141918459637175`*^9, 3.7141918717018566`*^9}, {3.714192105955433*^9, 
   3.7141921271161146`*^9}, {3.7141925842475753`*^9, 3.7141925932278957`*^9}, 
   3.7141926616252203`*^9, {3.7141928030735884`*^9, 3.7141928174043756`*^9}, 
   3.714192865439172*^9, {3.7141929200857687`*^9, 3.714192936906193*^9}, 
   3.7141937647911263`*^9, 3.714200978151682*^9, 3.7142010267625513`*^9, 
   3.7142010683147016`*^9, 3.7142016938869085`*^9, 3.7142017766621957`*^9, {
   3.7142019270719695`*^9, 3.714201941367556*^9}, {3.71420316105342*^9, 
   3.714203180001472*^9}, 
   3.7142032620845556`*^9},ExpressionUUID->"dc634c5d-05e4-42ef-8c76-\
13a70833e30c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
  "vrtxLst", ",", "edgeLst", ",", "options", ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", " ", "\[IndentingNewLine]", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", 
          RowBox[{"-", "1.`"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.`"}], ",", 
          RowBox[{"-", "2.`"}]}], "}"}]}], "}"}], "]"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}]}], "]"}]], "Input",\
ExpressionUUID->"1dbff34a-a4e9-42e4-a004-f29d1b18cabc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "guidance", "infl.accel.", "is core? alt", "outcome7", "outcome8", 
       "is core?", "exp.acceleration", "outputgap", "outcome1", "outcome2", 
       "outcome3", "outcome4", "outcome5", "outcome6"}, {{{1, 2}, {2, 6}, {6, 
       9}, {6, 10}, {2, 7}, {7, 11}, {7, 12}, {2, 8}, {8, 13}, {8, 14}, {1, 
       3}, {3, 4}, {3, 5}}, Null}, {
      AspectRatio -> Rational[3, 4], 
       EdgeLabels -> {
        DirectedEdge["outputgap", "outcome6"] -> 
         Style["zero", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["outputgap", "outcome5"] -> 
         Style["negative", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "infl.accel."] -> 
         Style["no guidance,\nhold,cut", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome4"] -> 
         Style[">-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "is core? alt"] -> 
         Style["hike", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "is core?"] -> 
         Style["<-0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome7"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome3"] -> 
         Style["\[LessEqual]-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "outputgap"] -> 
         Style[">0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome8"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome1"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "exp.acceleration"] -> 
         Style["(-0.04,0.04)", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome2"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}]}, Epilog -> {
         Inset[
          Grid[{{
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.21568627450980393`, 0.49411764705882355`, 
                0.7215686274509804], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hike", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hold", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.8941176470588235, 0.10196078431372549`, 
                0.10980392156862745`], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "cut", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}}, 
           Alignment -> {{Right, Left}, Center}, BaseStyle -> 
           Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`], 
           Spacings -> {{0, 0.5, 2}, 0}], {-1.25, -0.15}]}, 
       ImageSize -> {454.4, 340.79999999999995`}, 
       VertexCoordinates -> {{0., 0.}, {1., -1.}, {
        0., -1.}, {-1., -2.}, {-2., -2.}, {1., -3.}, {0., -3.}, {-1., -3.}, {
        3., -4.}, {2., -4.}, {1., -4.}, {0., -4.}, {-1., -4.}, {-2., -4.}}, 
       VertexLabels -> {
        "outcome7" -> Placed["", {0.5, 0.8}], "outcome3" -> 
         Placed["", {0.5, 0.8}], "outcome8" -> Placed["", {0.5, 0.8}], 
         "outcome1" -> Placed["", {0.5, 0.8}], "exp.acceleration" -> 
         Placed["exp.accel.", {0.5, 0.8}], "outcome5" -> 
         Placed["", {0.5, 0.8}], "is core? alt" -> 
         Placed["is core?", {0.5, 0.8}], "guidance" -> 
         Placed["guidance", {0.5, 0.8}], "outcome6" -> Placed["", {0.5, 0.8}],
          "outcome2" -> Placed["", {0.5, 0.8}], "infl.accel." -> 
         Placed["infl.accel.", {0.5, 0.8}], "outputgap" -> 
         Placed["output\ngap", {0.5, 0.8}], "is core?" -> 
         Placed["is core?", {0.5, 0.8}], "outcome4" -> 
         Placed["", {0.5, 0.8}]}, VertexLabelStyle -> {
         Directive[14.666666666666666`, FontName -> "Arial", 
          GrayLevel[0], 
          Opacity[0.3], FontOpacity -> 1, LineSpacing -> {0.1, 10}]}, 
       VertexShape -> {"outcome7" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$67788 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67788, 
                    FEPrivate`Not[DynamicChart`click$67788]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67788, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67788}]]}, {}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67788, 
                    FEPrivate`Not[DynamicChart`click$67788]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67788, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67788}]], {}, {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome1" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67977 = False, DynamicChart`click$67981 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67977, 
                    FEPrivate`Not[DynamicChart`click$67977]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67977, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67977}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67981, 
                    FEPrivate`Not[DynamicChart`click$67981]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67981, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67981}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67977, 
                    FEPrivate`Not[DynamicChart`click$67977]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67977, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67977}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67981, 
                    FEPrivate`Not[DynamicChart`click$67981]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67981, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67981}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "exp.acceleration" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67893 = False, DynamicChart`click$67897 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67893, 
                    FEPrivate`Not[DynamicChart`click$67893]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67893, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67893}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67897, 
                    FEPrivate`Not[DynamicChart`click$67897]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67897, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67897}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67893, 
                    FEPrivate`Not[DynamicChart`click$67893]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67893, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67893}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67897, 
                    FEPrivate`Not[DynamicChart`click$67897]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67897, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67897}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core?" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67854 = False, DynamicChart`click$67858 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67854, 
                    FEPrivate`Not[DynamicChart`click$67854]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67854, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67854}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67858, 
                    FEPrivate`Not[DynamicChart`click$67858]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67858, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67858}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67854, 
                    FEPrivate`Not[DynamicChart`click$67854]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67854, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67854}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67858, 
                    FEPrivate`Not[DynamicChart`click$67858]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67858, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67858}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outputgap" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67932 = False, DynamicChart`click$67936 = 
              False, DynamicChart`click$67940 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67932, 
                    FEPrivate`Not[DynamicChart`click$67932]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67932, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67932}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67936, 
                    FEPrivate`Not[DynamicChart`click$67936]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67936, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67936}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67940, 
                    FEPrivate`Not[DynamicChart`click$67940]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67940, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67940}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67932, 
                    FEPrivate`Not[DynamicChart`click$67932]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67932, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67932}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67936, 
                    FEPrivate`Not[DynamicChart`click$67936]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67936, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67936}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67940, 
                    FEPrivate`Not[DynamicChart`click$67940]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67940, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67940}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome8" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$67821 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67821, 
                    FEPrivate`Not[DynamicChart`click$67821]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67821, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67821}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67821, 
                    FEPrivate`Not[DynamicChart`click$67821]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67821, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67821}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome3" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$68049 = False, DynamicChart`click$68053 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}]], 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68049, 
                    FEPrivate`Not[DynamicChart`click$68049]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68049, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$68049}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68053, 
                    FEPrivate`Not[DynamicChart`click$68053]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68053, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68053}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68049, 
                    FEPrivate`Not[DynamicChart`click$68049]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68049, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$68049}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68053, 
                    FEPrivate`Not[DynamicChart`click$68053]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68053, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68053}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "guidance" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67659 = False, DynamicChart`click$67663 = 
              False, DynamicChart`click$67667 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67659, 
                    FEPrivate`Not[DynamicChart`click$67659]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67659, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$67659}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]}]], 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67663, 
                    FEPrivate`Not[DynamicChart`click$67663]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67663, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67663}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67667, 
                    FEPrivate`Not[DynamicChart`click$67667]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67667, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67667}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67659, 
                    FEPrivate`Not[DynamicChart`click$67659]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67659, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$67659}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67663, 
                    FEPrivate`Not[DynamicChart`click$67663]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67663, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67663}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67667, 
                    FEPrivate`Not[DynamicChart`click$67667]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67667, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67667}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome2" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$68016 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68016, 
                    FEPrivate`Not[DynamicChart`click$68016]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68016, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68016}]]}}}}}, {}}, {{}}}}, {{{{{}, {}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68016, 
                    FEPrivate`Not[DynamicChart`click$68016]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68016, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68016}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome4" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$68088 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68088, 
                    FEPrivate`Not[DynamicChart`click$68088]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68088, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68088}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68088, 
                    FEPrivate`Not[DynamicChart`click$68088]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68088, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68088}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome6" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$68160 = False, DynamicChart`click$68164 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68160, 
                    FEPrivate`Not[DynamicChart`click$68160]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68160, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68160}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68164, 
                    FEPrivate`Not[DynamicChart`click$68164]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68164, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68164}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68160, 
                    FEPrivate`Not[DynamicChart`click$68160]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68160, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68160}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68164, 
                    FEPrivate`Not[DynamicChart`click$68164]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68164, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68164}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "infl.accel." -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67704 = False, DynamicChart`click$67708 = 
              False, DynamicChart`click$67712 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67704, 
                    FEPrivate`Not[DynamicChart`click$67704]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67704, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67704}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]}]], 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67708, 
                    FEPrivate`Not[DynamicChart`click$67708]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67708, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67708}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67712, 
                    FEPrivate`Not[DynamicChart`click$67712]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67712, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67712}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67704, 
                    FEPrivate`Not[DynamicChart`click$67704]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67704, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67704}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67708, 
                    FEPrivate`Not[DynamicChart`click$67708]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67708, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67708}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67712, 
                    FEPrivate`Not[DynamicChart`click$67712]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67712, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67712}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core? alt" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$67749 = False, DynamicChart`click$67753 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67749, 
                    FEPrivate`Not[DynamicChart`click$67749]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67749, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67749}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67753, 
                    FEPrivate`Not[DynamicChart`click$67753]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$67753, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67753}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67749, 
                    FEPrivate`Not[DynamicChart`click$67749]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67749, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67749}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$67753, 
                    FEPrivate`Not[DynamicChart`click$67753]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$67753, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67753}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome5" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$68121 = False, DynamicChart`click$68125 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68121, 
                    FEPrivate`Not[DynamicChart`click$68121]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68121, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68121}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68125, 
                    FEPrivate`Not[DynamicChart`click$68125]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$68125, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68125}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68121, 
                    FEPrivate`Not[DynamicChart`click$68121]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68121, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68121}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$68125, 
                    FEPrivate`Not[DynamicChart`click$68125]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$68125, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68125}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}]}, VertexSize -> {0.5}, VertexStyle -> {
         Directive[
          EdgeForm[None], 
          GrayLevel[1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 0.}, {1., -1.}}, 0.25], InsetBox[
          StyleBox["\<\"no guidance,\\nhold,cut\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., 0.}, {0., -1.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"hike\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"<-0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {0., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"(-0.04,0.04)\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {-1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-1., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.5, -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-2., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {3., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {2., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"\[LessEqual]-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {0., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"negative\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"zero\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], EdgeForm[
        None], {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67659$68324 = False, 
             DynamicChart`click$67663$68324 = False, 
             DynamicChart`click$67667$68324 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    22.023304471464034`}, {-31.48969994225928, \
-16.82396371577511}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67659$68324, 
                    FEPrivate`Not[DynamicChart`click$67659$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67659$68324, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$67659$68324}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]},
                    
                    ImageSizeCache->{{13.349466831299488`, 
                    38.85406204722162}, {-32.27545902233949, \
-5.490915798827757}}],
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67663$68324, 
                    FEPrivate`Not[DynamicChart`click$67663$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$67663$68324, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67663$68324}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    29.435471674112026`}, {-19.652390840521303`, \
-4.200895533956924}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67667$68324, 
                    FEPrivate`Not[DynamicChart`click$67667$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67667$68324, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67667$68324}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67659$68324, 
                    FEPrivate`Not[DynamicChart`click$67659$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67659$68324, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$67659$68324}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67663$68324, 
                    FEPrivate`Not[DynamicChart`click$67663$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67663$68324, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67663$68324}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67667$68324, 
                    FEPrivate`Not[DynamicChart`click$67667$68324]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67667$68324, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67667$68324}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., 0.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"guidance\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., 0.30000000000000004},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67704$68326 = False, 
             DynamicChart`click$67708$68326 = False, 
             DynamicChart`click$67712$68326 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    22.023304471464005`}, {-25.73360031554867, \
-16.82396371577511}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67704$68326, 
                    FEPrivate`Not[DynamicChart`click$67704$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67704$68326, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67704$68326}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]},
                    
                    ImageSizeCache->{{4.445972052882588, 
                    38.85406204722158}, {-32.27545902233949, \
-9.40431039982002}}],
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67708$68326, 
                    FEPrivate`Not[DynamicChart`click$67708$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67708$68326, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67708$68326}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    35.63967337845679}, {-19.652390840521303`, \
-4.200895533956924}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67712$68326, 
                    FEPrivate`Not[DynamicChart`click$67712$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67712$68326, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67712$68326}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67704$68326, 
                    FEPrivate`Not[DynamicChart`click$67704$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67704$68326, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67704$68326}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67708$68326, 
                    FEPrivate`Not[DynamicChart`click$67708$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67708$68326, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67708$68326}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67712$68326, 
                    FEPrivate`Not[DynamicChart`click$67712$68326]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67712$68326, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67712$68326}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"infl.accel.\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67749$68328 = False, 
             DynamicChart`click$67753$68328 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    38.85406204722162}, {-32.27545902233949, \
-5.892065996617518}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67749$68328, 
                    FEPrivate`Not[DynamicChart`click$67749$68328]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67749$68328, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67749$68328}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    30.438683259342827`}, {-19.652390840521303`, \
-4.200895533956924}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67753$68328, 
                    FEPrivate`Not[DynamicChart`click$67753$68328]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67753$68328, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67753$68328}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67749$68328, 
                    FEPrivate`Not[DynamicChart`click$67749$68328]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67749$68328, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67749$68328}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67753$68328, 
                    FEPrivate`Not[DynamicChart`click$67753$68328]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67753$68328, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67753$68328}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"is core?\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$67788$68330 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    ImageSizeCache->{{2.7783333333333218`, 
                    38.439848484848476`}, {-31.861245459966394`, \
-4.61510909633002}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67788$68330, 
                    FEPrivate`Not[DynamicChart`click$67788$68330]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67788$68330, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67788$68330}]]}, {}, {}}}, {}}, {}}, \
{{{GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67788$68330, 
                    FEPrivate`Not[DynamicChart`click$67788$68330]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67788$68330, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67788$68330}]], {}, {}}, {}}, {}}, {}, \
{}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$67821$68332 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.778333333333329, 
                    38.43984848484848}, {-31.861245459966394`, \
-4.61510909633002}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67821$68332, 
                    FEPrivate`Not[DynamicChart`click$67821$68332]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67821$68332, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67821$68332}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67821$68332, 
                    FEPrivate`Not[DynamicChart`click$67821$68332]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67821$68332, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67821$68332}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67854$68334 = False, 
             DynamicChart`click$67858$68334 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    22.023304471464005`}, {-32.27545902233948, \
-16.823963715775104`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67854$68334, 
                    FEPrivate`Not[DynamicChart`click$67854$68334]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67854$68334, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67854$68334}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    38.85406204722159}, {-32.27545902233948, \
-4.200895533956917}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67858$68334, 
                    FEPrivate`Not[DynamicChart`click$67858$68334]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67858$68334, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67858$68334}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67854$68334, 
                    FEPrivate`Not[DynamicChart`click$67854$68334]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67854$68334, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67854$68334}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67858$68334, 
                    FEPrivate`Not[DynamicChart`click$67858$68334]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67858$68334, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67858$68334}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"is core?\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67893$68336 = False, 
             DynamicChart`click$67897$68336 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    38.85406204722162}, {-32.27545902233948, \
-4.200895533956917}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67893$68336, 
                    FEPrivate`Not[DynamicChart`click$67893$68336]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67893$68336, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67893$68336}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]},
                    
                    ImageSizeCache->{{2.3641197709602686`, 
                    22.023304471464034`}, {-19.652390840521296`, \
-4.392668303518835}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67897$68336, 
                    FEPrivate`Not[DynamicChart`click$67897$68336]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67897$68336, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67897$68336}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67893$68336, 
                    FEPrivate`Not[DynamicChart`click$67893$68336]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67893$68336, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67893$68336}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67897$68336, 
                    FEPrivate`Not[DynamicChart`click$67897$68336]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67897$68336, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67897$68336}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"exp.accel.\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67932$68338 = False, 
             DynamicChart`click$67936$68338 = False, 
             DynamicChart`click$67940$68338 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.364119770960226, 
                    22.02330447146399}, {-32.27545902233948, \
-16.823963715775104`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67932$68338, 
                    FEPrivate`Not[DynamicChart`click$67932$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67932$68338, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67932$68338}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{19.194877346717803`, 
                    38.854062047221575`}, {-32.27545902233948, \
-16.823963715775104`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67936$68338, 
                    FEPrivate`Not[DynamicChart`click$67936$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67936$68338, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67936$68338}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.364119770960226, 
                    38.854062047221575`}, {-19.652390840521296`, \
-4.200895533956917}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67940$68338, 
                    FEPrivate`Not[DynamicChart`click$67940$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67940$68338, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67940$68338}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67932$68338, 
                    FEPrivate`Not[DynamicChart`click$67932$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67932$68338, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67932$68338}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67936$68338, 
                    FEPrivate`Not[DynamicChart`click$67936$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67936$68338, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67936$68338}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67940$68338, 
                    FEPrivate`Not[DynamicChart`click$67940$68338]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67940$68338, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67940$68338}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"output\\ngap\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$67977$68340 = False, 
             DynamicChart`click$67981$68340 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    38.85406204722159}, {-32.275459022339476`, \
-16.823963715775097`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67977$68340, 
                    FEPrivate`Not[DynamicChart`click$67977$68340]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67977$68340, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$67977$68340}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    38.85406204722159}, {-19.65239084052129, \
-4.20089553395691}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67981$68340, 
                    FEPrivate`Not[DynamicChart`click$67981$68340]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$67981$68340, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$67981$68340}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67977$68340, 
                    FEPrivate`Not[DynamicChart`click$67977$68340]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67977$68340, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$67977$68340}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$67981$68340, 
                    FEPrivate`Not[DynamicChart`click$67981$68340]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$67981$68340, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$67981$68340}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {3., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {3., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$68016$68342 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, {}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.778333333333336, 
                    38.43984848484849}, {-31.86124545996638, \
-4.615109096330006}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68016$68342, 
                    FEPrivate`Not[DynamicChart`click$68016$68342]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68016$68342, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68016$68342}]]}}}, {}}, {}}, {{{{}, {},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68016$68342, 
                    FEPrivate`Not[DynamicChart`click$68016$68342]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68016$68342, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$68016$68342}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {2., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$68049$68344 = False, 
             DynamicChart`click$68053$68344 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    30.438683259342792`}, {-32.275459022339476`, \
-16.823963715775097`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68049$68344, 
                    FEPrivate`Not[DynamicChart`click$68049$68344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68049$68344, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$68049$68344}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{2.36411977096024, 
                    38.85406204722159}, {-30.584288559678882`, \
-4.20089553395691}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68053$68344, 
                    FEPrivate`Not[DynamicChart`click$68053$68344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68053$68344, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68053$68344}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68049$68344, 
                    FEPrivate`Not[DynamicChart`click$68049$68344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68049$68344, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$68049$68344}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68053$68344, 
                    FEPrivate`Not[DynamicChart`click$68053$68344]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68053$68344, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$68053$68344}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$68088$68346 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.7783333333333644`, 
                    38.43984848484852}, {-31.86124545996638, \
-4.615109096330006}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68088$68346, 
                    FEPrivate`Not[DynamicChart`click$68088$68346]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68088$68346, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68088$68346}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68088$68346, 
                    FEPrivate`Not[DynamicChart`click$68088$68346]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68088$68346, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$68088$68346}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$68121$68348 = False, 
             DynamicChart`click$68125$68348 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.364119770960226, 
                    38.854062047221575`}, {-32.275459022339476`, \
-16.823963715775097`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68121$68348, 
                    FEPrivate`Not[DynamicChart`click$68121$68348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68121$68348, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68121$68348}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    ImageSizeCache->{{2.364119770960226, 
                    38.854062047221575`}, {-19.65239084052129, \
-4.20089553395691}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68125$68348, 
                    FEPrivate`Not[DynamicChart`click$68125$68348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68125$68348, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68125$68348}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68121$68348, 
                    FEPrivate`Not[DynamicChart`click$68121$68348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68121$68348, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$68121$68348}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68125$68348, 
                    FEPrivate`Not[DynamicChart`click$68125$68348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68125$68348, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$68125$68348}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$68160$68350 = False, 
             DynamicChart`click$68164$68350 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.364119770960233, 
                    38.85406204722159}, {-32.275459022339476`, \
-16.823963715775097`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68160$68350, 
                    FEPrivate`Not[DynamicChart`click$68160$68350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$68160$68350, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$68160$68350}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.364119770960233, 
                    38.85406204722159}, {-19.65239084052129, \
-4.20089553395691}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68164$68350, 
                    FEPrivate`Not[DynamicChart`click$68164$68350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$68164$68350, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$68164$68350}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68160$68350, 
                    FEPrivate`Not[DynamicChart`click$68160$68350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68160$68350, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$68160$68350}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$68164$68350, 
                    FEPrivate`Not[DynamicChart`click$68164$68350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$68164$68350, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$68164$68350}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -3.7},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hike\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hold\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.8941176470588235, 0.10196078431372549`, 0.10980392156862745`], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"cut\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}}, 
         GridBoxAlignment -> {
          "Columns" -> {Right, Left}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {0, 0.5, 2}, "Rows" -> {{0}}}, 
         BaseStyle -> 
         Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`]], 
        "Grid"], TraditionalForm]], {-1.25, -0.15}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{454.4, 340.79999999999995`}]], "Output",
 CellChangeTimes->{
  3.714189557824839*^9},ExpressionUUID->"ae4dee01-acb8-42d1-b73c-\
af801b9420cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alignedKPartiteCoords", "[", 
  RowBox[{"layersizes", ",", "offsets"}], "]"}]], "Input",
 CellChangeTimes->{3.7141893077738414`*^9, 3.714189420282577*^9, 
  3.714800860589202*^9},ExpressionUUID->"5e8f2283-f674-4ac9-8750-\
91330082260a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "2.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "2.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "3.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "3.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "3.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     RowBox[{"-", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", 
     RowBox[{"-", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     RowBox[{"-", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.`"}], ",", 
     RowBox[{"-", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "4.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.714189420735983*^9},ExpressionUUID->"bdc524d3-afdf-4403-b757-\
85497557ced4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ExportEMF", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"exportDirectory", ",", "\"\<cpi.weeklydecomp\>\""}], "}"}], 
      "]"}], ",", "%"}], "]"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7140596317311177`*^9, 3.7140596317311177`*^9}, {
   3.7140599930317497`*^9, 3.714059993281353*^9}, 3.7140602555675154`*^9, {
   3.7140989184206257`*^9, 3.7140989186556287`*^9}, {3.714099679331675*^9, 
   3.7140996864323945`*^9}, {3.7140999793129263`*^9, 
   3.7140999800315447`*^9}, {3.7141000898893957`*^9, 3.7141001158480663`*^9}, 
   3.7141070701515903`*^9, {3.7141893304591513`*^9, 3.714189336234634*^9}, 
   3.7148008559957423`*^9},ExpressionUUID->"bee2183d-50d8-4cb7-84c1-\
5483a338f89b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "guidance", "infl.accel.", "is core? alt", "outcome7", "outcome8", 
       "is core?", "exp.acceleration", "outputgap", "outcome1", "outcome2", 
       "outcome3", "outcome4", "outcome5", "outcome6"}, {{{1, 2}, {2, 6}, {6, 
       9}, {6, 10}, {2, 7}, {7, 11}, {7, 12}, {2, 8}, {8, 13}, {8, 14}, {1, 
       3}, {3, 4}, {3, 5}}, Null}, {
      AspectRatio -> Rational[3, 4], 
       EdgeLabels -> {
        DirectedEdge["outputgap", "outcome6"] -> 
         Style["zero", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["outputgap", "outcome5"] -> 
         Style["negative", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "infl.accel."] -> 
         Style["no guidance,\nhold,cut", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome4"] -> 
         Style[">-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["guidance", "is core? alt"] -> 
         Style["hike", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "is core?"] -> 
         Style["<-0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome7"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["exp.acceleration", "outcome3"] -> 
         Style["\[LessEqual]-0.7", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "outputgap"] -> 
         Style[">0.04", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core? alt", "outcome8"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome1"] -> 
         Style["no", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["infl.accel.", "exp.acceleration"] -> 
         Style["(-0.04,0.04)", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}], 
         DirectedEdge["is core?", "outcome2"] -> 
         Style["yes", FontFamily -> "Arial", FontSize -> 8, 
           GrayLevel[0], LineSpacing -> {0.1, 10}]}, Epilog -> {
         Inset[
          Grid[{{
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.21568627450980393`, 0.49411764705882355`, 
                0.7215686274509804], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hike", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "hold", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}, {
             Graphics[{
               PointSize[Large], 
               Thickness[0.5], 
               RGBColor[
               0.8941176470588235, 0.10196078431372549`, 
                0.10980392156862745`], 
               Point[{0, 0}]}, ImageSize -> 16], 
             Style[
             "cut", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
              GrayLevel[0], LineSpacing -> {0.1, 10}]}}, 
           Alignment -> {{Right, Left}, Center}, BaseStyle -> 
           Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`], 
           Spacings -> {{0, 0.5, 2}, 0}], {-1.25, -0.15}]}, 
       ImageSize -> {453.54330708661416`, 340.1574803149606}, 
       VertexCoordinates -> {{0., 0.}, {1., -1.}, {
        0., -1.}, {-1., -2.}, {-2., -2.}, {1., -3.}, {0., -3.}, {-1., -3.}, {
        3., -4.}, {2., -4.}, {1., -4.}, {0., -4.}, {-1., -4.}, {-2., -4.}}, 
       VertexLabels -> {
        "outcome7" -> Placed["", {0.5, 0.8}], "outcome3" -> 
         Placed["", {0.5, 0.8}], "outcome8" -> Placed["", {0.5, 0.8}], 
         "outcome1" -> Placed["", {0.5, 0.8}], "exp.acceleration" -> 
         Placed["exp.accel.", {0.5, 0.8}], "outcome5" -> 
         Placed["", {0.5, 0.8}], "is core? alt" -> 
         Placed["is core?", {0.5, 0.8}], "guidance" -> 
         Placed["guidance", {0.5, 0.8}], "outcome6" -> Placed["", {0.5, 0.8}],
          "outcome2" -> Placed["", {0.5, 0.8}], "infl.accel." -> 
         Placed["infl.accel.", {0.5, 0.8}], "outputgap" -> 
         Placed["output\ngap", {0.5, 0.8}], "is core?" -> 
         Placed["is core?", {0.5, 0.8}], "outcome4" -> 
         Placed["", {0.5, 0.8}]}, VertexLabelStyle -> {
         Directive[14.666666666666666`, FontName -> "Arial", 
          GrayLevel[0], 
          Opacity[0.3], FontOpacity -> 1, LineSpacing -> {0.1, 10}]}, 
       VertexShape -> {"outcome7" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$35991 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35991, 
                    FEPrivate`Not[DynamicChart`click$35991]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35991, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35991}]]}, {}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35991, 
                    FEPrivate`Not[DynamicChart`click$35991]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35991, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35991}]], {}, {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome1" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36180 = False, DynamicChart`click$36184 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36180, 
                    FEPrivate`Not[DynamicChart`click$36180]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36180, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36180}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36184, 
                    FEPrivate`Not[DynamicChart`click$36184]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36184, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36184}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36180, 
                    FEPrivate`Not[DynamicChart`click$36180]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36180, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36180}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36184, 
                    FEPrivate`Not[DynamicChart`click$36184]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36184, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36184}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "exp.acceleration" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36096 = False, DynamicChart`click$36100 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]}]], 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36096, 
                    FEPrivate`Not[DynamicChart`click$36096]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36096, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36096}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36100, 
                    FEPrivate`Not[DynamicChart`click$36100]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[DynamicChart`click$36100, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36100}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 7], 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36096, 
                    FEPrivate`Not[DynamicChart`click$36096]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36096, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36096}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36100, 
                    FEPrivate`Not[DynamicChart`click$36100]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36100, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36100}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core?" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36057 = False, DynamicChart`click$36061 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36057, 
                    FEPrivate`Not[DynamicChart`click$36057]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36057, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36057}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36061, 
                    FEPrivate`Not[DynamicChart`click$36061]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36061, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36061}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36057, 
                    FEPrivate`Not[DynamicChart`click$36057]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36057, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36057}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36061, 
                    FEPrivate`Not[DynamicChart`click$36061]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36061, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36061}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outputgap" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36135 = False, DynamicChart`click$36139 = 
              False, DynamicChart`click$36143 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36135, 
                    FEPrivate`Not[DynamicChart`click$36135]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36135, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36135}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36139, 
                    FEPrivate`Not[DynamicChart`click$36139]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36139, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36139}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36143, 
                    FEPrivate`Not[DynamicChart`click$36143]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36143, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36143}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36135, 
                    FEPrivate`Not[DynamicChart`click$36135]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36135, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36135}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36139, 
                    FEPrivate`Not[DynamicChart`click$36139]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36139, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36139}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36143, 
                    FEPrivate`Not[DynamicChart`click$36143]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36143, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36143}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome8" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$36024 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36024, 
                    FEPrivate`Not[DynamicChart`click$36024]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36024, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36024}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36024, 
                    FEPrivate`Not[DynamicChart`click$36024]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36024, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36024}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome3" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36252 = False, DynamicChart`click$36256 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}]], 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36252, 
                    FEPrivate`Not[DynamicChart`click$36252]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36252, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$36252}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36256, 
                    FEPrivate`Not[DynamicChart`click$36256]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36256, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36256}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 1], 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36252, 
                    FEPrivate`Not[DynamicChart`click$36252]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36252, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$36252}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36256, 
                    FEPrivate`Not[DynamicChart`click$36256]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36256, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36256}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "guidance" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$35862 = False, DynamicChart`click$35866 = 
              False, DynamicChart`click$35870 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35862, 
                    FEPrivate`Not[DynamicChart`click$35862]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35862, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$35862}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]}]], 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35866, 
                    FEPrivate`Not[DynamicChart`click$35866]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35866, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35866}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35870, 
                    FEPrivate`Not[DynamicChart`click$35870]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35870, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35870}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35862, 
                    FEPrivate`Not[DynamicChart`click$35862]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35862, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$35862}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 15], 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35866, 
                    FEPrivate`Not[DynamicChart`click$35866]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35866, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35866}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35870, 
                    FEPrivate`Not[DynamicChart`click$35870]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35870, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35870}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome2" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$36219 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36219, 
                    FEPrivate`Not[DynamicChart`click$36219]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36219, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36219}]]}}}}}, {}}, {{}}}}, {{{{{}, {}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36219, 
                    FEPrivate`Not[DynamicChart`click$36219]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36219, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36219}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome4" -> Graphics[{{}, {}, 
            DynamicModule[{DynamicChart`click$36291 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}]], 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36291, 
                    FEPrivate`Not[DynamicChart`click$36291]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36291, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36291}]]}, {}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 6], 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36291, 
                    FEPrivate`Not[DynamicChart`click$36291]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36291, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36291}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome6" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36363 = False, DynamicChart`click$36367 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36363, 
                    FEPrivate`Not[DynamicChart`click$36363]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36363, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36363}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36367, 
                    FEPrivate`Not[DynamicChart`click$36367]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36367, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36367}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36363, 
                    FEPrivate`Not[DynamicChart`click$36363]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36363, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36363}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36367, 
                    FEPrivate`Not[DynamicChart`click$36367]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36367, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36367}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "infl.accel." -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$35907 = False, DynamicChart`click$35911 = 
              False, DynamicChart`click$35915 = False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35907, 
                    FEPrivate`Not[DynamicChart`click$35907]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35907, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35907}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]}]], 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35911, 
                    FEPrivate`Not[DynamicChart`click$35911]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35911, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35911}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]}]], 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35915, 
                    FEPrivate`Not[DynamicChart`click$35915]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35915, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35915}]]}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35907, 
                    FEPrivate`Not[DynamicChart`click$35907]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35907, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35907}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 13], 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35911, 
                    FEPrivate`Not[DynamicChart`click$35911]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35911, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35911}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 10], 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35915, 
                    FEPrivate`Not[DynamicChart`click$35915]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35915, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35915}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "is core? alt" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$35952 = False, DynamicChart`click$35956 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]}]], 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35952, 
                    FEPrivate`Not[DynamicChart`click$35952]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35952, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35952}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35956, 
                    FEPrivate`Not[DynamicChart`click$35956]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$35956, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35956}]]}, {}}}}}, {}}, {{}}}}, {{{{
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 4], 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35952, 
                    FEPrivate`Not[DynamicChart`click$35952]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35952, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35952}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35956, 
                    FEPrivate`Not[DynamicChart`click$35956]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$35956, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35956}]], {}}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}], "outcome5" -> Graphics[{{}, {}, 
            
            DynamicModule[{
             DynamicChart`click$36324 = False, DynamicChart`click$36328 = 
              False}, {{
               Directive[
                RGBColor[0.5, 0.5, 1.], 
                EdgeForm[
                 Directive[
                  GrayLevel[0.356], 
                  Opacity[1]]]], {{{{{{}, {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36324, 
                    FEPrivate`Not[DynamicChart`click$36324]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36324, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36324}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0.356], 
                    Opacity[1]]], 
                    RGBColor[
                    0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`]], 
                    GeometricTransformation[
                    EventHandler[
                    Tooltip[
                    StatusArea[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}]], 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36328, 
                    FEPrivate`Not[DynamicChart`click$36328]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$36328, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36328}]]}}}}}, {}}, {{}}}}, {{{{{}, 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36324, 
                    FEPrivate`Not[DynamicChart`click$36324]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36324, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36324}]], 
                  GeometricTransformation[
                   EventHandler[
                    Tooltip[
                    StatusArea[{{}, {}}, 2], 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$36328, 
                    FEPrivate`Not[DynamicChart`click$36328]]}, PassEventsDown -> 
                    True], 
                   Dynamic[
                    If[
                    DynamicChart`click$36328, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36328}]]}, {}}}, {}}, {}, {}}, 
             DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, \
{}}}, {AspectRatio -> Rational[3, 4], ContentSelectable -> False, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], 
            ImageSize -> {453.54330708661416`, 340.1574803149606}, LabelStyle -> {
              GrayLevel[0], FontFamily -> "Arial"}, 
            PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangePadding -> 
            Scaled[0.09166666666666669], TicksStyle -> 
            Directive[14.666666666666666`, FontName -> "Arial", 
              GrayLevel[0]]}]}, VertexSize -> {0.5}, VertexStyle -> {
         Directive[
          EdgeForm[None], 
          GrayLevel[1]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 0.}, {1., -1.}}, 0.25], InsetBox[
          StyleBox["\<\"no guidance,\\nhold,cut\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., 0.}, {0., -1.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"hike\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"<-0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {0., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"(-0.04,0.04)\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -1.}, {-1., -3.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">0.04\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-1., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-0.5, -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -1.}, {-2., -2.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {3., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"no\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {2., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{1., -3.}, {2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"yes\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"\[LessEqual]-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{0., -3.}, {0., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\">-0.7\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {0., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-1., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"negative\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1., -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {ArrowBox[{{-1., -3.}, {-2., -4.}}, 0.25], 
         InsetBox[
          StyleBox["\<\"zero\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Arial",
           FontSize->8,
           FontColor->GrayLevel[0]], {-1.5, -3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], EdgeForm[
        None], {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$35862$36401 = False, 
             DynamicChart`click$35866$36401 = False, 
             DynamicChart`click$35870$36401 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9254922715550344`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-30.500894227291504`, \
-15.857524429614173`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35862$36401, 
                    FEPrivate`Not[DynamicChart`click$35862$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35862$36401, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$35862$36401}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.1147586835318615`, 
                    1.9254922715550344`}]},
                    
                    ImageSizeCache->{{13.32157106515752, 
                    38.78331998088896}, {-31.28516862665815, \
-4.5458901470680395`}}],
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35866$36401, 
                    FEPrivate`Not[DynamicChart`click$35866$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$35866$36401, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35866$36401}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.1147586835318615`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    29.38252590161865}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35870$36401, 
                    FEPrivate`Not[DynamicChart`click$35870$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35870$36401, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35870$36401}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35862$36401, 
                    FEPrivate`Not[DynamicChart`click$35862$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35862$36401, {{{1., 0}, {
                    0, 1.}}, {-0.16415268824145526`, 
                    0.11425364301895846`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$35862$36401}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 15]& ,
                    TagBoxNote->"15"],
                    StyleBox["15", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35866$36401, 
                    FEPrivate`Not[DynamicChart`click$35866$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35866$36401, {{{1., 0}, {0, 1.}}, {
                    0.18379156232404611`, 0.07887117102266378}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$35866$36401}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35870$36401, 
                    FEPrivate`Not[DynamicChart`click$35870$36401]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35870$36401, {{{1., 0}, {
                    0, 1.}}, {-0.10579280206539243`, -0.16972885149895023`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$35870$36401}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., 0.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"guidance\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., 0.30000000000000004},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$35907$36403 = False, 
             DynamicChart`click$35911$36403 = False, 
             DynamicChart`click$35915$36403 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.6389378290154264`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-24.755670669744873`, \
-15.857524429614173`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35907$36403, 
                    FEPrivate`Not[DynamicChart`click$35907$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35907$36403, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35907$36403}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    2.6389378290154264`}]},
                    
                    ImageSizeCache->{{4.434899314709414, 
                    38.78331998088896}, {-31.285168626658145`, \
-8.451890444085986}}],
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35911$36403, 
                    FEPrivate`Not[DynamicChart`click$35911$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35911$36403, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35911$36403}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    35.57500485423575}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35915$36403, 
                    FEPrivate`Not[DynamicChart`click$35915$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35915$36403, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35915$36403}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35907$36403, 
                    FEPrivate`Not[DynamicChart`click$35907$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35907$36403, {{{1., 0}, {
                    0, 1.}}, {-0.19371663222572622`, 0.04973797743297097}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$35907$36403}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 13]& ,
                    TagBoxNote->"13"],
                    StyleBox["13", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[13, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35911$36403, 
                    FEPrivate`Not[DynamicChart`click$35911$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35911$36403, {{{1., 0}, {0, 1.}}, {
                    0.10716535899579932`, 0.16886558510040303`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$35911$36403}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 10]& ,
                    TagBoxNote->"10"],
                    StyleBox["10", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[10, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35915$36403, 
                    FEPrivate`Not[DynamicChart`click$35915$36403]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35915$36403, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$35915$36403}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"infl.accel.\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$35952$36405 = False, 
             DynamicChart`click$35956$36405 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658145`, \
-4.946282377209695}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35952$36405, 
                    FEPrivate`Not[DynamicChart`click$35952$36405]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35952$36405, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$35952$36405}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    30.383841932690444`}, {-18.685951554360365`, \
-3.25830735731639}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35956$36405, 
                    FEPrivate`Not[DynamicChart`click$35956$36405]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35956$36405, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35956$36405}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35952$36405, 
                    FEPrivate`Not[DynamicChart`click$35952$36405]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35952$36405, {{{1., 0}, {0, 1.}}, {
                    0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$35952$36405}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35956$36405, 
                    FEPrivate`Not[DynamicChart`click$35956$36405]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35956$36405, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$35956$36405}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -1.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"is core?\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -0.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$35991$36407 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    ImageSizeCache->{{2.7711942257217963`, 
                    38.369106418515884`}, {-30.87095506428505, \
-3.6725209196894824`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35991$36407, 
                    FEPrivate`Not[DynamicChart`click$35991$36407]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$35991$36407, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$35991$36407}]]}, {}, {}}}, {}}, {}}, \
{{{GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35991$36407, 
                    FEPrivate`Not[DynamicChart`click$35991$36407]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$35991$36407, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$35991$36407}]], {}, {}}, {}}, {}}, {}, \
{}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$36024$36409 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.7711942257217856`, 
                    38.36910641851587}, {-30.87095506428505, \
-3.6725209196894824`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36024$36409, 
                    FEPrivate`Not[DynamicChart`click$36024$36409]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36024$36409, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36024$36409}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36024$36409, 
                    FEPrivate`Not[DynamicChart`click$36024$36409]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36024$36409, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36024$36409}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -2.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -1.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36057$36411 = False, 
             DynamicChart`click$36061$36411 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36057$36411, 
                    FEPrivate`Not[DynamicChart`click$36057$36411]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36057$36411, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36057$36411}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.5707963267948966`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658134`, \
-3.258307357316376}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36061$36411, 
                    FEPrivate`Not[DynamicChart`click$36061$36411]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36061$36411, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36061$36411}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36057$36411, 
                    FEPrivate`Not[DynamicChart`click$36057$36411]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36057$36411, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36057$36411}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36061$36411, 
                    FEPrivate`Not[DynamicChart`click$36061$36411]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36061$36411, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36061$36411}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"is core?\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36096$36413 = False, 
             DynamicChart`click$36100$36413 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7453292519943293`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658134`, \
-3.258307357316376}}],
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36096$36413, 
                    FEPrivate`Not[DynamicChart`click$36096$36413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36096$36413, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36096$36413}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.7453292519943293`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    21.98436388449192}, {-18.68595155436035, \
-3.4497177749315284`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36100$36413, 
                    FEPrivate`Not[DynamicChart`click$36100$36413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36100$36413, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36100$36413}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 7]& ,
                    TagBoxNote->"7"],
                    StyleBox["7", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36096$36413, 
                    FEPrivate`Not[DynamicChart`click$36096$36413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36096$36413, {{{1., 0}, {0, 1.}}, {
                    0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36096$36413}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36100$36413, 
                    FEPrivate`Not[DynamicChart`click$36100$36413]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36100$36413, {{{1., 0}, {
                    0, 1.}}, {-0.15320888862379559`, -0.1285575219373079}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36100$36413}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"exp.accel.\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36135$36415 = False, 
             DynamicChart`click$36139$36415 = False, 
             DynamicChart`click$36143$36415 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    21.984363884491934`}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36135$36415, 
                    FEPrivate`Not[DynamicChart`click$36135$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36135$36415, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36135$36415}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{19.155936759745742`, 
                    38.783319980888976`}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36139$36415, 
                    FEPrivate`Not[DynamicChart`click$36139$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36139$36415, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36139$36415}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-18.68595155436035, \
-3.258307357316376}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36143$36415, 
                    FEPrivate`Not[DynamicChart`click$36143$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36143$36415, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36143$36415}]]}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36135$36415, 
                    FEPrivate`Not[DynamicChart`click$36135$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36135$36415, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36135$36415}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36139$36415, 
                    FEPrivate`Not[DynamicChart`click$36139$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36139$36415, {{{1., 0}, {0, 1.}}, {
                    0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36139$36415}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36143$36415, 
                    FEPrivate`Not[DynamicChart`click$36143$36415]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36143$36415, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36143$36415}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -3.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"output\\ngap\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -2.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36180$36417 = False, 
             DynamicChart`click$36184$36417 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36180$36417, 
                    FEPrivate`Not[DynamicChart`click$36180$36417]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36180$36417, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36180$36417}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-18.68595155436035, \
-3.258307357316376}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36184$36417, 
                    FEPrivate`Not[DynamicChart`click$36184$36417]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36184$36417, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36184$36417}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36180$36417, 
                    FEPrivate`Not[DynamicChart`click$36180$36417]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36180$36417, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36180$36417}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36184$36417, 
                    FEPrivate`Not[DynamicChart`click$36184$36417]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36184$36417, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36184$36417}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {3., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {3., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$36219$36419 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, {}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.771194225721782, 
                    38.36910641851587}, {-30.870955064285038`, \
-3.6725209196894717`}}],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36219$36419, 
                    FEPrivate`Not[DynamicChart`click$36219$36419]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36219$36419, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36219$36419}]]}}}, {}}, {}}, {{{{}, {},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36219$36419, 
                    FEPrivate`Not[DynamicChart`click$36219$36419]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36219$36419, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36219$36419}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {2., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36252$36421 = False, 
             DynamicChart`click$36256$36421 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    30.383841932690437`}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36252$36421, 
                    FEPrivate`Not[DynamicChart`click$36252$36421]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$36252$36421, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$36252$36421}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{2.3569806633486863`, 
                    38.78331998088896}, {-29.597193606764833`, \
-3.258307357316376}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36256$36421, 
                    FEPrivate`Not[DynamicChart`click$36256$36421]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36256$36421, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36256$36421}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36252$36421, 
                    FEPrivate`Not[DynamicChart`click$36252$36421]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36252$36421, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                    0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {
                    DynamicChart`click$36252$36421}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36256$36421, 
                    FEPrivate`Not[DynamicChart`click$36256$36421]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36256$36421, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36256$36421}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            DynamicModuleBox[{DynamicChart`click$36291$36423 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{2.771194225721782, 
                    38.36910641851587}, {-30.870955064285038`, \
-3.6725209196894717`}}],
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36291$36423, 
                    FEPrivate`Not[DynamicChart`click$36291$36423]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36291$36423, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36291$36423}]]}, {}}}, {}}, {}}, {{{{},
                  GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                    StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36291$36423, 
                    FEPrivate`Not[DynamicChart`click$36291$36423]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36291$36423, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36291$36423}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {0., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {0., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36324$36425 = False, 
             DynamicChart`click$36328$36425 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {{}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36324$36425, 
                    FEPrivate`Not[DynamicChart`click$36324$36425]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36324$36425, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36324$36425}]]}, 
                  {RGBColor[
                   0.8941176470588235, 0.10196078431372549`, 
                    0.10980392156862745`], EdgeForm[{GrayLevel[0.356], 
                   Opacity[1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    ImageSizeCache->{{2.3569806633487005`, 
                    38.783319980888976`}, {-18.68595155436035, \
-3.258307357316376}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36328$36425, 
                    FEPrivate`Not[DynamicChart`click$36328$36425]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36328$36425, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36328$36425}]]}}}, {}}, {}}, {{{{}, 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36324$36425, 
                    FEPrivate`Not[DynamicChart`click$36324$36425]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36324$36425, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36324$36425}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36328$36425, 
                    FEPrivate`Not[DynamicChart`click$36328$36425]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36328$36425, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36328$36425}]]}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-1., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-1., -3.7},
          BaseStyle->"Graphics"]}, {InsetBox[
          GraphicsBox[{{}, {}, 
            
            DynamicModuleBox[{DynamicChart`click$36363$36427 = False, 
             DynamicChart`click$36367$36427 = False}, {
              {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0.356], Opacity[
               1]}], {{{}, {
                  {RGBColor[
                   0.21568627450980393`, 0.49411764705882355`, 
                    0.7215686274509804], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{2.35698066334869, 
                    38.783319980888976`}, {-31.285168626658134`, \
-15.857524429614159`}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36363$36427, 
                    FEPrivate`Not[DynamicChart`click$36363$36427]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[
                    DynamicChart`click$36363$36427, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$36363$36427}]]}, 
                  {RGBColor[
                   0.9686274509803922, 0.5058823529411764, 
                    0.7490196078431373], EdgeForm[{GrayLevel[0.356], Opacity[
                   1]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{2.35698066334869, 
                    38.783319980888976`}, {-18.68595155436035, \
-3.258307357316376}}],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36367$36427, 
                    FEPrivate`Not[DynamicChart`click$36367$36427]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$36367$36427, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$36367$36427}]]}, {}}}, {}}, {}}, {{{
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36363$36427, 
                    FEPrivate`Not[DynamicChart`click$36363$36427]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36363$36427, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {DynamicChart`click$36363$36427}]], 
                 GeometricTransformationBox[
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TagBox[{{}, {}},
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                   
                   EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$36367$36427, 
                    FEPrivate`Not[DynamicChart`click$36367$36427]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                  If[DynamicChart`click$36367$36427, {{{1., 0}, {0, 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                    0}, {0, 1}}], 
                   TrackedSymbols :> {
                    DynamicChart`click$36367$36427}]], {}}, {}}, {}}, {}, {}},
             DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
           AspectRatio->NCache[
             Rational[3, 4], 0.75],
           ContentSelectable->False,
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImageSize->{453.54330708661416`, 340.1574803149606},
           LabelStyle->{
             GrayLevel[0], FontFamily -> "Arial"},
           PlotRange->{{-1., 1.}, {-1., 1.}},
           PlotRangePadding->Scaled[0.09166666666666669],
           TicksStyle->Directive[14.666666666666666`, FontName -> "Arial", 
             GrayLevel[0]]], {-2., -4.}, Automatic, {0.5, 0.5}], InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineSpacing->{0.1, 10},
           LineColor->GrayLevel[0],
           LineOpacity->0.3,
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           FrontFaceOpacity->0.3,
           BackFaceOpacity->0.3,
           GraphicsColor->GrayLevel[0],
           Opacity->0.3,
           FontSize->14.666666666666666`,
           FontColor->GrayLevel[0],
           FontOpacity->1,
           FontName -> "Arial"], {-2., -3.7},
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.21568627450980393`, 0.49411764705882355`, 0.7215686274509804], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hike\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.9686274509803922, 0.5058823529411764, 0.7490196078431373], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"hold\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}, {
           GraphicsBox[{
             PointSize[Large], 
             Thickness[0.5], 
             RGBColor[
             0.8941176470588235, 0.10196078431372549`, 0.10980392156862745`], 
             PointBox[{0, 0}]}, ImageSize -> 16], 
           StyleBox[
           "\"cut\"", FontFamily -> "Arial", FontSize -> 14.666666666666666`, 
            GrayLevel[0], LineSpacing -> {0.1, 10}, StripOnInput -> False]}}, 
         GridBoxAlignment -> {
          "Columns" -> {Right, Left}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {0, 0.5, 2}, "Rows" -> {{0}}}, 
         BaseStyle -> 
         Directive[FontFamily -> "Arial", FontSize -> 14.666666666666666`]], 
        "Grid"], TraditionalForm]], {-1.25, -0.15}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{453.54330708661416`, 340.1574803149606}]], "Output",
 CellChangeTimes->{
  3.714096250763185*^9, {3.7140965305414677`*^9, 3.714096550326813*^9}, 
   3.714096893919243*^9, 3.7140969278101015`*^9, 3.7140969895247035`*^9, {
   3.7140970199524994`*^9, 3.7140970351867943`*^9}, 3.714097244308077*^9, {
   3.7140975386304693`*^9, 3.7140976779932623`*^9}, 3.714097939904608*^9, 
   3.7140979834808574`*^9, 3.714098356074519*^9, 3.7140984504339705`*^9, {
   3.7140985081067348`*^9, 3.7140985416889315`*^9}, 3.7140987021256456`*^9, 
   3.7140988101343565`*^9, {3.7140988499711323`*^9, 3.7140988747134576`*^9}, 
   3.71409894311415*^9, 3.7140996069036465`*^9, 3.7140996878988605`*^9, 
   3.714099925679943*^9, 3.7140999816901875`*^9, 3.714100091690443*^9, 
   3.714100201851081*^9, {3.714107072088416*^9, 
   3.714107081798143*^9}},ExpressionUUID->"a830ae75-c8f5-4a95-9790-\
2f88ff1760de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["cm"], "Input",ExpressionUUID->"e0ff3496-c596-4930-891c-9a3b50577d79"],

Cell[BoxData["28.346456692913385`"], "Output",
 CellChangeTimes->{
  3.7141892868905487`*^9},ExpressionUUID->"33f3958b-85ca-46f6-b6b3-\
fc256d8f5e7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Toy", "Title",
 CellChangeTimes->{{3.714298336158924*^9, 
  3.7142983366123295`*^9}},ExpressionUUID->"a3aa5866-0f28-4e9f-929b-\
6ae049d873b8"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"pg", ",", " ", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",Exp\
ressionUUID->"e5d44943-b9ad-47f6-bf70-72fdd39e2eda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Factor", "[", 
      RowBox[{
       RowBox[{
        InterpretationBox["x",
         ToExpression["x"]], "^", "n"}], "+", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10", ",", "100", ",", "1"}], "}"}]}], "]"}], ",", 
   " ", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7142983463766603`*^9},ExpressionUUID->"0bc6f251-aeda-41a4-811e-\
d10e999ab73a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-\
83d9-91073e976134\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-\
83d9-91073e976134\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-83d9-\
91073e976134"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-83d9-\
91073e976134"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-83d9-\
91073e976134", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/99e0e5b4-0489-493c-83d9-91073e976134"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.714298353562753*^9},ExpressionUUID->"4783d4af-1c6f-44d7-aed8-\
eeda9e1dcf74"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 952},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 27, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info193714306908-7313519"->{
  Cell[935322, 19908, 196, 4, 
  41, "Print", "ExpressionUUID" -> "a13acdb4-040d-4e3e-a892-a697dbc2c415",
   CellTags->"Info193714306908-7313519"],
  Cell[935521, 19914, 1875, 50, 
  53, "Print", "ExpressionUUID" -> "5d7e7306-f14b-49e8-935c-33fa98f3b209",
   CellTags->"Info193714306908-7313519"]},
 "Info613714206102-9942316"->{
  Cell[1244678, 26740, 196, 4, 
  41, "Print", "ExpressionUUID" -> "8ed13560-1c37-4c58-bbff-bd7f9c028bba",
   CellTags->"Info613714206102-9942316"],
  Cell[1244877, 26746, 1873, 50, 
  53, "Print", "ExpressionUUID" -> "dd38d8a7-43b3-44b0-93b0-3267615ac4e2",
   CellTags->"Info613714206102-9942316"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info193714306908-7313519", 1679253, 36307},
 {"Info613714206102-9942316", 1679583, 36314}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 230, 4, 101, "Title", "ExpressionUUID" -> \
"9730b673-68b6-4096-ad99-cf6e5e5f06dc"],
Cell[816, 28, 418, 9, 68, "Text", "ExpressionUUID" -> \
"69bd0279-6357-42a4-94b2-966a12673ba1"],
Cell[1237, 39, 477, 11, 68, "Text", "ExpressionUUID" -> \
"37cce717-b08b-4da5-b2dc-51f8501dd98f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1751, 55, 233, 4, 101, "Title", "ExpressionUUID" -> \
"4c1adce2-bd3e-4edb-8091-47d5dddad385"],
Cell[1987, 61, 179, 3, 30, "Text", "ExpressionUUID" -> \
"ba79e652-21da-4421-b5e9-ce94cf1075fd"],
Cell[CellGroupData[{
Cell[2191, 68, 248, 4, 29, "Item", "ExpressionUUID" -> \
"8adcf6ce-3c33-47fc-a443-79257dc254cf"],
Cell[2442, 74, 304, 5, 29, "Item", "ExpressionUUID" -> \
"4a56c25f-d826-4487-81a7-831971003e72"],
Cell[2749, 81, 309, 5, 29, "Item", "ExpressionUUID" -> \
"ea8f874c-134d-494d-b747-fc65215eb0a2"],
Cell[3061, 88, 383, 6, 29, "Item", "ExpressionUUID" -> \
"1ebbaa4d-4552-4912-b8a2-98682d446533"],
Cell[3447, 96, 434, 6, 29, "Item", "ExpressionUUID" -> \
"dc315e79-1405-48e3-ae5f-8e5464cbac2e"],
Cell[3884, 104, 409, 6, 29, "Item", "ExpressionUUID" -> \
"2453495e-d12f-41d0-9931-7d81798c9280"],
Cell[4296, 112, 404, 6, 29, "Item", "ExpressionUUID" -> \
"d89f0dc4-edc7-4ecb-9d7c-4a31b4c7a59c"],
Cell[4703, 120, 306, 5, 29, "Item", "ExpressionUUID" -> \
"bb604c62-7a92-4355-a9bb-8fa5e7212654"],
Cell[5012, 127, 400, 6, 29, "Item", "ExpressionUUID" -> \
"16da46e3-f346-4dc5-bec8-c0221bf7c751"],
Cell[5415, 135, 422, 6, 29, "Item", "ExpressionUUID" -> \
"84111314-c366-4e16-ac40-eb3d80b9aaaa"]
}, Open  ]],
Cell[5852, 144, 216, 4, 30, "Text", "ExpressionUUID" -> \
"c1903f1a-c4d2-447d-ad1e-26b9a175bd67"],
Cell[6071, 150, 615, 18, 88, "Input", "ExpressionUUID" -> \
"4faedb6e-7ef0-45d4-ba0e-d424fd764156"],
Cell[6689, 170, 309, 10, 50, "Input", "ExpressionUUID" -> \
"e2e887f0-68d0-47f4-bf39-56b10c962d36"],
Cell[7001, 182, 527, 18, 50, "Input", "ExpressionUUID" -> \
"447c01c3-524c-4b36-a87f-a717fcd747d3"],
Cell[7531, 202, 256, 5, 30, "Input", "ExpressionUUID" -> \
"d8de8add-ca7a-452f-8d21-c6f9dd835544"],
Cell[CellGroupData[{
Cell[7812, 211, 159, 3, 72, "Chapter", "ExpressionUUID" -> \
"1b08afe2-037a-4f4e-8d31-367ff559d480"],
Cell[7974, 216, 279, 7, 49, "Text", "ExpressionUUID" -> \
"ebd02a32-136c-4fac-922b-120d3b74865b"],
Cell[8256, 225, 575, 17, 48, "Input", "ExpressionUUID" -> \
"39c3c874-560d-401b-acab-38511b085524"],
Cell[8834, 244, 402, 11, 30, "Input", "ExpressionUUID" -> \
"28cba052-217b-44d8-9300-3af95d9b2ddf"],
Cell[9239, 257, 360, 10, 30, "Input", "ExpressionUUID" -> \
"923085e9-a96e-49e5-81c9-0358776217b7"],
Cell[CellGroupData[{
Cell[9624, 271, 196, 4, 30, "Input", "ExpressionUUID" -> \
"a1c388f9-a7a1-4752-8962-112470ef003f"],
Cell[9823, 277, 177, 3, 30, "Output", "ExpressionUUID" -> \
"1baf078d-d774-4b1f-972a-438b136caf83"]
}, Open  ]],
Cell[10015, 283, 564, 16, 29, "Input", "ExpressionUUID" -> \
"d102196c-fb04-4757-9646-638671d40f50"],
Cell[CellGroupData[{
Cell[10604, 303, 243, 5, 30, "Input", "ExpressionUUID" -> \
"60032224-1696-4e8a-8876-cc3434c2f0c6"],
Cell[10850, 310, 68914, 1227, 72, "Output", "ExpressionUUID" -> \
"d6521c65-473a-4d52-8e49-4b399ad201a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79801, 1542, 670, 18, 30, "Input", "ExpressionUUID" -> \
"5054bd8b-5b92-418c-95e6-2330391ab7c9"],
Cell[80474, 1562, 26588, 689, 341, "Output", "ExpressionUUID" -> \
"d73fa944-a13a-48bd-94ee-8e40e714ef53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107099, 2256, 718, 22, 50, "Input", "ExpressionUUID" -> \
"2f17e2dd-31cd-48eb-8dc8-9f3f96ed8180"],
Cell[107820, 2280, 1351, 25, 50, "Output", "ExpressionUUID" -> \
"487dc0ae-8e59-4b87-baf9-341b0bcc33c4"]
}, Open  ]],
Cell[109186, 2308, 260, 7, 30, "Input", "ExpressionUUID" -> \
"4c1d0f7e-a232-415f-b0a2-f2380254e12c"],
Cell[109449, 2317, 544, 14, 29, "Input", "ExpressionUUID" -> \
"dd35775f-64fd-4af4-bc6f-e1dd35592136"],
Cell[109996, 2333, 148, 4, 30, "Input", "ExpressionUUID" -> \
"83a4febd-42b0-4bb5-96ae-7d4ed64d3629"],
Cell[110147, 2339, 439, 11, 30, "Input", "ExpressionUUID" -> \
"f19854e9-6678-482d-b2c1-cdd53fdb7e4d"],
Cell[CellGroupData[{
Cell[110611, 2354, 1221, 31, 107, "Input", "ExpressionUUID" -> \
"ac6cf272-b62f-4fab-a930-50a435ab7af1"],
Cell[111835, 2387, 1308, 24, 50, "Output", "ExpressionUUID" -> \
"d26c505d-9bed-4775-87c1-46699fc472f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113180, 2416, 1909, 51, 107, "Input", "ExpressionUUID" -> \
"d6a5dddc-7b1f-4174-9464-c3a05efdb08b"],
Cell[115092, 2469, 1533, 29, 69, "Output", "ExpressionUUID" -> \
"b489a044-9314-47be-8634-ecd8014210f1"]
}, Open  ]],
Cell[116640, 2501, 129, 3, 30, "Input", "ExpressionUUID" -> \
"35046de8-e500-42df-933b-0d5a6af64c69"],
Cell[116772, 2506, 409, 11, 50, "Input", "ExpressionUUID" -> \
"53cae6f1-4dc7-435c-b7fd-1cc871b4296d"],
Cell[CellGroupData[{
Cell[117206, 2521, 276, 5, 30, "Input", "ExpressionUUID" -> \
"eae5b2a9-5351-40da-b632-c8ac4854671e"],
Cell[117485, 2528, 315, 7, 30, "Output", "ExpressionUUID" -> \
"1cb776f3-506c-4393-8990-be318b79fdc1"]
}, Open  ]],
Cell[117815, 2538, 519, 10, 30, "Input", "ExpressionUUID" -> \
"71b0b492-6d58-4993-ba38-080c3a32dc9b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[118337, 2550, 809, 14, 50, "Output", "ExpressionUUID" -> \
"a69a552e-2385-492d-abee-fe796bced3ad"],
Cell[119149, 2566, 479, 13, 30, "Input", "ExpressionUUID" -> \
"c36e1d41-14b0-4d97-9bdd-2696fda47d49"],
Cell[CellGroupData[{
Cell[119653, 2583, 1222, 34, 107, "Input", "ExpressionUUID" -> \
"f9bbf1e2-5917-4381-93d3-cf7600674963"],
Cell[120878, 2619, 769, 13, 50, "Output", "ExpressionUUID" -> \
"51ef121f-770d-4d9f-83ac-3d2ba3e198b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121684, 2637, 2122, 59, 107, "Input", "ExpressionUUID" -> \
"d2d16a6b-f5b2-4f29-acbb-feb5e5bae0ee"],
Cell[123809, 2698, 1427, 27, 50, "Output", "ExpressionUUID" -> \
"47864ebb-efdc-44f6-a315-21755473bf6c"]
}, Open  ]],
Cell[125251, 2728, 415, 11, 50, "Input", "ExpressionUUID" -> \
"67b4d933-8c97-44cf-b370-fc5eae2aade2"],
Cell[CellGroupData[{
Cell[125691, 2743, 1040, 28, 69, "Input", "ExpressionUUID" -> \
"e6327358-acec-4c96-a1f3-e465218e8c4d"],
Cell[126734, 2773, 797, 14, 30, "Output", "ExpressionUUID" -> \
"85e9491a-f6a8-4d40-a223-d391d1080143"]
}, Open  ]],
Cell[127546, 2790, 349, 10, 30, "Input", "ExpressionUUID" -> \
"f699f9a7-32b3-493b-959b-997232e27243"],
Cell[CellGroupData[{
Cell[127920, 2804, 457, 13, 50, "Input", "ExpressionUUID" -> \
"2acbb7d9-c318-424a-a1c3-3713eb9a57d1"],
Cell[128380, 2819, 842, 15, 30, "Output", "ExpressionUUID" -> \
"d0a5163e-2239-4d7e-9ec5-c877e5494ca7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129259, 2839, 736, 22, 69, "Input", "ExpressionUUID" -> \
"3e70c10f-9959-4c43-934f-f345527aa55b"],
Cell[129998, 2863, 975, 16, 50, "Output", "ExpressionUUID" -> \
"1a7f4384-e1f5-4a3c-9e86-58a5568fd6ef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131022, 2885, 165, 3, 72, "Chapter", "ExpressionUUID" -> \
"62cc153c-c65d-49f2-8e52-382668f124c0"],
Cell[131190, 2890, 1079, 29, 69, "Input", "ExpressionUUID" -> \
"7a655ce8-9ce0-4fcf-9847-363ba51f3e69"],
Cell[CellGroupData[{
Cell[132294, 2923, 1037, 25, 88, "Input", "ExpressionUUID" -> \
"36afde47-6641-410c-8b53-b4934cde497e"],
Cell[133334, 2950, 11233, 233, 72, "Output", "ExpressionUUID" -> \
"9777ecde-c829-4737-9a74-7b79e46d6551"],
Cell[144570, 3185, 11233, 233, 72, "Output", "ExpressionUUID" -> \
"7b95595e-522a-4810-b625-9ae429866350"],
Cell[155806, 3420, 11239, 233, 72, "Output", "ExpressionUUID" -> \
"57188454-2c62-4e0e-b4bd-6a52d058d167"],
Cell[167048, 3655, 11239, 233, 72, "Output", "ExpressionUUID" -> \
"fcee17e7-e880-4d4d-bf17-ff93e6ffa017"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178336, 3894, 152, 3, 72, "Chapter", "ExpressionUUID" -> \
"c18eb617-7165-4039-8cfb-df803a88fcd7"],
Cell[178491, 3899, 273, 7, 30, "Input", "ExpressionUUID" -> \
"b9206385-82de-432d-938f-9886c8576516"],
Cell[CellGroupData[{
Cell[178789, 3910, 469, 11, 50, "Input", "ExpressionUUID" -> \
"7ba8fee6-1561-4833-8c43-623c776d7c18"],
Cell[179261, 3923, 556, 13, 41, "Output", "ExpressionUUID" -> \
"67821dc3-5646-478d-a30b-2d4c053dd53d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179854, 3941, 493, 14, 30, "Input", "ExpressionUUID" -> \
"8e845adf-b81b-428b-a6d9-3f4944dd4263"],
Cell[180350, 3957, 267, 6, 30, "Output", "ExpressionUUID" -> \
"8fe61f10-46a4-457a-8271-79813f063a3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180654, 3968, 1488, 38, 126, "Input", "ExpressionUUID" -> \
"e6b27218-6ea4-44ae-b375-86758aa29242"],
Cell[182145, 4008, 322, 6, 30, "Output", "ExpressionUUID" -> \
"771f0821-e49d-4f5d-8dbe-6a982c47394f"],
Cell[182470, 4016, 298, 5, 30, "Output", "ExpressionUUID" -> \
"e465b53e-8874-4b31-bc82-45ae7efb3123"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182805, 4026, 2183, 57, 126, "Input", "ExpressionUUID" -> \
"a0dbc316-cdde-4112-818a-cc3a89da7666"],
Cell[184991, 4085, 263, 6, 30, "Output", "ExpressionUUID" -> \
"5a7a745e-7224-40d2-a0a9-5ae4a1c3179a"],
Cell[185257, 4093, 240, 5, 30, "Output", "ExpressionUUID" -> \
"73e9b9d6-dd4d-4e26-9db0-f371e9f6b6a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185534, 4103, 1555, 42, 107, "Input", "ExpressionUUID" -> \
"87aa3bae-b540-4ade-9dec-cb50aebd5ce7"],
Cell[187092, 4147, 224, 3, 30, "Output", "ExpressionUUID" -> \
"00fabe3c-263a-4f07-824a-f1a68db4fcaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187353, 4155, 2447, 66, 107, "Input", "ExpressionUUID" -> \
"e56a839b-cb5e-4e8e-8ef1-fc52677aab8f"],
Cell[189803, 4223, 290, 6, 30, "Output", "ExpressionUUID" -> \
"67928e89-cd5f-4721-8f1a-0fae659dcffe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190130, 4234, 959, 17, 183, "Input", "ExpressionUUID" -> \
"c31ca4c1-27ec-4021-a161-3719abf60b1a"],
Cell[191092, 4253, 484, 10, 30, "Output", "ExpressionUUID" -> \
"3804d21a-4340-43a5-bed8-7ae28a781e36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191613, 4268, 649, 15, 88, "Input", "ExpressionUUID" -> \
"db82fb3a-530d-43e4-a68b-315377995a40"],
Cell[192265, 4285, 541, 11, 30, "Output", "ExpressionUUID" -> \
"ae4260a0-2eaf-4232-9ef1-2d720ebf45d1"],
Cell[192809, 4298, 541, 11, 30, "Output", "ExpressionUUID" -> \
"390d2730-dcdb-45f9-a844-3e95e42597c8"],
Cell[193353, 4311, 541, 11, 30, "Output", "ExpressionUUID" -> \
"37ded4da-c5b5-439e-be4c-cae039e6945d"],
Cell[193897, 4324, 541, 11, 30, "Output", "ExpressionUUID" -> \
"2713129f-8246-4ec4-a76d-1340f3ef95e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194475, 4340, 450, 8, 88, "Input", "ExpressionUUID" -> \
"96fc07d0-337a-4f45-b832-ee3fcf380e30"],
Cell[194928, 4350, 340, 5, 30, "Output", "ExpressionUUID" -> \
"6f0f0042-78a9-4785-ad15-500d08112eb6"],
Cell[195271, 4357, 340, 5, 30, "Output", "ExpressionUUID" -> \
"0895b3fd-a603-4760-9abf-24fcaeefa76f"],
Cell[195614, 4364, 340, 5, 30, "Output", "ExpressionUUID" -> \
"a46b6d10-3d2f-41be-b7ed-f8b12a3fe277"],
Cell[195957, 4371, 340, 5, 30, "Output", "ExpressionUUID" -> \
"5026a101-5cbc-445d-a8a8-65d864970f53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196334, 4381, 229, 4, 30, "Input", "ExpressionUUID" -> \
"e5c9b268-279b-4d36-8298-9c34c09066c4"],
Cell[196566, 4387, 4848, 134, 180, "Output", "ExpressionUUID" -> \
"b4f0d185-730a-4909-aad2-e4e4666c26e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201451, 4526, 258, 5, 30, "Input", "ExpressionUUID" -> \
"101a5076-7902-4599-8911-72b84c735d43"],
Cell[201712, 4533, 150, 3, 30, "Output", "ExpressionUUID" -> \
"0a76aff9-ee82-473f-89f4-c372dff157e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201899, 4541, 340, 9, 30, "Input", "ExpressionUUID" -> \
"09bdbf14-d5ff-406a-96f1-76d926ebd3e3"],
Cell[202242, 4552, 1845, 49, 539, "Output", "ExpressionUUID" -> \
"a5bceec4-d38f-4b93-af01-92864e57861a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204124, 4606, 91, 0, 30, "Input", "ExpressionUUID" -> \
"1ff90272-6296-4879-b325-2d900f0ea264"],
Cell[204218, 4608, 134, 3, 30, "Output", "ExpressionUUID" -> \
"ef41a0bf-39db-4c2d-8eab-f81d4e8775cc"]
}, Open  ]],
Cell[204367, 4614, 627, 11, 202, "Input", "ExpressionUUID" -> \
"338dbd2e-bb07-45c4-993d-1ecad4741c67"],
Cell[204997, 4627, 411, 8, 30, "Input", "ExpressionUUID" -> \
"a13d7bfc-b3d2-4517-878e-caa3ca1e8ce5"],
Cell[CellGroupData[{
Cell[205433, 4639, 129, 3, 30, "Input", "ExpressionUUID" -> \
"46b08077-94c4-4541-978e-c2fb96ae0c1d"],
Cell[205565, 4644, 451, 9, 30, "Output", "ExpressionUUID" -> \
"5cf47cf3-31fa-41a4-81d8-9e467d4aefdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206053, 4658, 199, 4, 30, "Input", "ExpressionUUID" -> \
"0cf78627-5161-40a7-8e3c-e1f7603acd85"],
Cell[206255, 4664, 13189, 316, 72, "Output", "ExpressionUUID" -> \
"ab26820b-d30b-47ea-81ab-690af400a2df"]
}, Open  ]],
Cell[219459, 4983, 1767, 31, 29, "Input", "ExpressionUUID" -> \
"0708447b-0024-4fe3-8e10-20440f39ce96",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[221229, 5016, 170, 3, 30, "Input", "ExpressionUUID" -> \
"4925ad2f-a6fb-4f38-8967-f37f178a7254"],
Cell[CellGroupData[{
Cell[221424, 5023, 236, 6, 30, "Input", "ExpressionUUID" -> \
"093d9e54-094c-4bb0-b90e-ad88d09e7d69"],
Cell[221663, 5031, 1073, 20, 69, "Output", "ExpressionUUID" -> \
"312f7018-5874-4b2f-90ee-567357a11eb2"]
}, Open  ]],
Cell[222751, 5054, 884, 26, 30, "Input", "ExpressionUUID" -> \
"e4e7d367-52f9-4774-a9de-f34c70c9dd76"],
Cell[CellGroupData[{
Cell[223660, 5084, 967, 22, 69, "Input", "ExpressionUUID" -> \
"73397265-f4c7-4059-bda7-40bbecc58a9e"],
Cell[224630, 5108, 10812, 222, 103, "Output", "ExpressionUUID" -> \
"243ed1e1-448c-4d56-a132-cfcad7181b6c"],
Cell[235445, 5332, 11286, 234, 72, "Output", "ExpressionUUID" -> \
"2b5a6589-e660-46f2-9a54-0424de448337"],
Cell[246734, 5568, 11284, 234, 72, "Output", "ExpressionUUID" -> \
"af2a5999-fc18-444a-a918-f58efab89c40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258055, 5807, 129, 1, 30, "Input", "ExpressionUUID" -> \
"0cf0b60c-9533-4657-946a-49fc876a9a3a"],
Cell[258187, 5810, 4932, 136, 180, "Output", "ExpressionUUID" -> \
"d60b8cc2-cc91-4887-b430-46585f95892b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263156, 5951, 182, 4, 30, "Input", "ExpressionUUID" -> \
"89387fcf-bdbe-4e26-887f-307152d9973e"],
Cell[263341, 5957, 419, 9, 30, "Output", "ExpressionUUID" -> \
"373d4742-a28e-4342-9b55-7a95a605b9d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263797, 5971, 392, 11, 30, "Input", "ExpressionUUID" -> \
"983f43e8-3bcc-4693-99fe-e3ae4bb2316b"],
Cell[264192, 5984, 372, 7, 30, "Output", "ExpressionUUID" -> \
"c4dce166-0268-40c8-a98b-fdc474d5aec6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264601, 5996, 422, 12, 30, "Input", "ExpressionUUID" -> \
"3ed892c3-88e0-4a7e-996b-6ce11c829cdf"],
Cell[265026, 6010, 247, 5, 30, "Output", "ExpressionUUID" -> \
"2ee820e3-3ddf-450f-a7b9-d826d4d7fdd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265310, 6020, 1270, 37, 69, "Input", "ExpressionUUID" -> \
"c889319b-91ef-4844-848c-1b273f6cdb9a"],
Cell[266583, 6059, 549, 11, 30, "Output", "ExpressionUUID" -> \
"b0ae070d-99e3-423b-bf62-1cc08dcda96d"],
Cell[267135, 6072, 547, 11, 30, "Output", "ExpressionUUID" -> \
"d60961ef-d2d0-4314-b2c0-c3a1a0fa077d"],
Cell[267685, 6085, 548, 11, 30, "Output", "ExpressionUUID" -> \
"91573459-b381-4f18-8aa6-7e494b5709c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268270, 6101, 400, 12, 30, "Input", "ExpressionUUID" -> \
"9bd00c92-e594-48d3-b534-a8e3d103ae9c"],
Cell[268673, 6115, 290, 4, 30, "Output", "ExpressionUUID" -> \
"aa383614-d4a1-466e-8a29-d0ec53a62508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269000, 6124, 500, 12, 30, "Input", "ExpressionUUID" -> \
"ed052c48-a33f-45b2-b456-89a8af41c6cc"],
Cell[269503, 6138, 11153, 232, 72, "Output", "ExpressionUUID" -> \
"797171e9-144b-489a-bef7-17c71edc5313"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280693, 6375, 1016, 28, 69, "Input", "ExpressionUUID" -> \
"f8c6547b-2840-46ab-a08e-3012dbb11f6b"],
Cell[281712, 6405, 11155, 232, 72, "Output", "ExpressionUUID" -> \
"272d896a-81cf-41e0-8686-7dad1277dde8"],
Cell[292870, 6639, 1170, 31, 50, "Output", "ExpressionUUID" -> \
"457ba872-c3da-4a15-8e5a-0a55ad9d442c"],
Cell[294043, 6672, 211, 5, 30, "Output", "ExpressionUUID" -> \
"4f69ed5f-a9de-4660-92f9-a2dc38075683"]
}, Open  ]],
Cell[294269, 6680, 498, 12, 30, "Input", "ExpressionUUID" -> \
"ec512d66-a393-4aa2-8e3b-65315c1ffb2c"],
Cell[CellGroupData[{
Cell[294792, 6696, 973, 27, 69, "Input", "ExpressionUUID" -> \
"bba48a9b-d4e3-4aa7-b61c-bdd69dcd3ea5"],
Cell[295768, 6725, 9172, 188, 72, "Output", "ExpressionUUID" -> \
"2cafc517-62d9-4b53-993b-7c2440039087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304977, 6918, 721, 13, 183, "Input", "ExpressionUUID" -> \
"4999fce5-d89b-40e4-b616-cd2b0631458b"],
Cell[305701, 6933, 516, 9, 30, "Output", "ExpressionUUID" -> \
"85183af4-c346-4a83-9a28-43e10ada3322"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306254, 6947, 356, 9, 50, "Input", "ExpressionUUID" -> \
"337b8bc8-5d45-4ac5-b07e-9abdc5305882"],
Cell[306613, 6958, 200, 3, 30, "Output", "ExpressionUUID" -> \
"329cf2e8-029a-4479-844a-2f4e9410fc2d"],
Cell[306816, 6963, 201, 3, 30, "Output", "ExpressionUUID" -> \
"0ce551ef-c118-43ab-a050-d068c40d9cff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307054, 6971, 415, 10, 50, "Input", "ExpressionUUID" -> \
"b09954cf-9d61-4b58-bad5-c6a57dfcad7a"],
Cell[307472, 6983, 247, 5, 30, "Output", "ExpressionUUID" -> \
"fbc6a465-2cc7-49c2-babe-8bc954f0cb5b"],
Cell[307722, 6990, 229, 4, 30, "Output", "ExpressionUUID" -> \
"e12c8f06-d81a-4405-9ff5-53a63afc33b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307988, 6999, 1956, 44, 183, "Input", "ExpressionUUID" -> \
"702f896a-a1bc-4acb-8e96-ca69ccfc2fdc"],
Cell[309947, 7045, 41274, 724, 376, "Output", "ExpressionUUID" -> \
"ba4ae2ff-509c-45f0-bd57-e412e22e3f7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351258, 7774, 666, 13, 202, "Input", "ExpressionUUID" -> \
"c63d587e-7e12-40af-86e3-773ad2acf135"],
Cell[351927, 7789, 354, 8, 30, "Output", "ExpressionUUID" -> \
"a9919631-5e5f-43f1-91e0-b37b22d5405f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352318, 7802, 417, 10, 50, "Input", "ExpressionUUID" -> \
"314b5649-1f7f-4943-adad-5033949d2124"],
Cell[352738, 7814, 218, 4, 30, "Output", "ExpressionUUID" -> \
"0e7bc2b1-6fc5-403f-8461-b13b2ef87050"],
Cell[352959, 7820, 199, 3, 30, "Output", "ExpressionUUID" -> \
"427fda9f-bde1-4b20-94d6-3dd5b716afda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353195, 7828, 457, 10, 50, "Input", "ExpressionUUID" -> \
"9bb33fc0-4517-4b6a-af7b-ce187135c4ef"],
Cell[353655, 7840, 247, 5, 30, "Output", "ExpressionUUID" -> \
"6e37ceb0-0bba-449c-a153-25783d2b839e"],
Cell[353905, 7847, 230, 4, 30, "Output", "ExpressionUUID" -> \
"cb75d37f-7271-41ee-8806-f4fa011fd805"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354172, 7856, 1719, 43, 202, "Input", "ExpressionUUID" -> \
"382f86db-264d-414a-a64f-4b94d4ce4a02"],
Cell[355894, 7901, 107430, 1812, 367, "Output", "ExpressionUUID" -> \
"cf1c2b6d-7db0-4b44-95ab-c57f38c3e8ce"]
}, Open  ]],
Cell[463339, 9716, 627, 11, 202, "Input", "ExpressionUUID" -> \
"e7aca567-afc0-4f42-bf5c-d8832e9b7f26"],
Cell[CellGroupData[{
Cell[463991, 9731, 503, 13, 126, "Input", "ExpressionUUID" -> \
"e94d648d-6489-40c9-9b7f-2b4921224138"],
Cell[464497, 9746, 210, 5, 30, "Output", "ExpressionUUID" -> \
"95228796-0e58-4148-a9f4-9632ff2da7ea"]
}, Open  ]],
Cell[464722, 9754, 353, 6, 30, "Input", "ExpressionUUID" -> \
"93990df3-176b-45ed-851f-e3d1c98908b5"],
Cell[CellGroupData[{
Cell[465100, 9764, 187, 4, 30, "Input", "ExpressionUUID" -> \
"0cc86ea5-7cc5-446d-b359-ec42e358daad"],
Cell[465290, 9770, 138, 3, 30, "Output", "ExpressionUUID" -> \
"d7b4d77b-369a-41c8-80e5-c9d91f8cc257"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465465, 9778, 471, 12, 50, "Input", "ExpressionUUID" -> \
"ede94b23-f6d0-4fc3-81ce-258427cd8898"],
Cell[465939, 9792, 9104, 187, 72, "Output", "ExpressionUUID" -> \
"db1e6a36-2a1a-4f67-9151-c8f5ee6d5277"],
Cell[475046, 9981, 10707, 232, 82, "Output", "ExpressionUUID" -> \
"ab0093d8-c253-469b-8e2d-6a4fa0747a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485790, 10218, 194, 4, 30, "Input", "ExpressionUUID" -> \
"a43f45af-c958-41d6-87f5-58914f2845ab"],
Cell[485987, 10224, 164, 3, 30, "Output", "ExpressionUUID" -> \
"f6ca6e1c-a7f9-4130-bf05-2fb8b50d5c3c"]
}, Open  ]],
Cell[486166, 10230, 179, 4, 30, "Input", "ExpressionUUID" -> \
"a75daf62-7b88-44f6-b6a5-099eca95625e"],
Cell[CellGroupData[{
Cell[486370, 10238, 178, 4, 30, "Input", "ExpressionUUID" -> \
"1894d557-52a3-407c-9b50-a2f93a44acdc"],
Cell[486551, 10244, 136, 3, 30, "Output", "ExpressionUUID" -> \
"8f262410-d370-41f5-ab18-1776eeacd129"]
}, Open  ]],
Cell[486702, 10250, 128, 3, 30, "Input", "ExpressionUUID" -> \
"64a7e743-6cb3-416b-a8d4-1b8ff60d219f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486867, 10258, 186, 3, 72, "Chapter", "ExpressionUUID" -> \
"aade7653-f291-4846-9359-95a9a9e90610"],
Cell[487056, 10263, 298, 6, 30, "Input", "ExpressionUUID" -> \
"41eefb18-3d9d-43ee-b945-a2c78b1d0b91"],
Cell[487357, 10271, 735, 17, 50, "Input", "ExpressionUUID" -> \
"a3762093-cb48-4c7b-a3b8-75117ea0c2a3"],
Cell[CellGroupData[{
Cell[488117, 10292, 459, 12, 30, "Input", "ExpressionUUID" -> \
"bf9f9719-00ac-4db0-83b4-7075d98a8949"],
Cell[488579, 10306, 249, 4, 30, "Output", "ExpressionUUID" -> \
"9348d898-e503-41a3-933d-4b8d44affe4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488865, 10315, 302, 8, 30, "Input", "ExpressionUUID" -> \
"53d2c1ac-c919-4f45-8355-56140b09cc71"],
Cell[489170, 10325, 299, 5, 30, "Output", "ExpressionUUID" -> \
"81db68b5-5d94-4840-954a-de8de47412fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489506, 10335, 203, 5, 30, "Input", "ExpressionUUID" -> \
"d8ffba87-f9e3-46c7-a518-2b34da3eeebc"],
Cell[489712, 10342, 9693, 195, 335, "Output", "ExpressionUUID" -> \
"8c7cf0ed-cbd6-4964-b13f-82e1a1f7a9f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499442, 10542, 550, 11, 30, "Input", "ExpressionUUID" -> \
"17c26ac3-1b6a-48a1-966f-bd7acb571382"],
Cell[499995, 10555, 3649, 102, 69, "Output", "ExpressionUUID" -> \
"df157cb2-bcd7-4250-8915-73493e650e37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503681, 10662, 1249, 34, 69, "Input", "ExpressionUUID" -> \
"c3f75f99-be26-4b26-ad65-4298eabcd901"],
Cell[504933, 10698, 23265, 620, 94, "Output", "ExpressionUUID" -> \
"805a03b0-d616-4a04-a634-a9196a858018"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528259, 11325, 218, 4, 101, "Title", "ExpressionUUID" -> \
"88916b8e-bce1-4dc7-af8b-6e224dad37fd"],
Cell[528480, 11331, 615, 18, 88, "Input", "ExpressionUUID" -> \
"983677a3-7352-4d62-9672-13dc71babcd8"],
Cell[529098, 11351, 692, 24, 69, "Input", "ExpressionUUID" -> \
"4f69dc25-8171-42b3-8ec1-d354557c3f47"],
Cell[529793, 11377, 641, 19, 48, "Input", "ExpressionUUID" -> \
"13992351-53bf-43bd-aca0-f276f4522a2f"],
Cell[530437, 11398, 876, 28, 69, "Input", "ExpressionUUID" -> \
"8c8acec5-079e-4bcd-b2e9-2c2239ef200b"],
Cell[531316, 11428, 334, 9, 30, "Input", "ExpressionUUID" -> \
"ee7d23e2-1ef6-44c1-84c3-5b9474a3a73b"],
Cell[531653, 11439, 989, 30, 88, "Input", "ExpressionUUID" -> \
"414c286c-bcc7-45be-a425-942970ba4618"],
Cell[CellGroupData[{
Cell[532667, 11473, 90, 0, 30, "Input", "ExpressionUUID" -> \
"2acc1e15-4ff9-47a4-b384-9639ead51303"],
Cell[532760, 11475, 1124, 19, 50, "Output", "ExpressionUUID" -> \
"ddb3a6d5-77b7-4cbb-bc8d-02704059608c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533921, 11499, 385, 11, 30, "Input", "ExpressionUUID" -> \
"47f88cfc-c524-4283-8e0b-0f6e5f9319f8"],
Cell[534309, 11512, 2452, 67, 69, "Output", "ExpressionUUID" -> \
"dc64d9e0-ce1b-4a54-a202-7687ab57d5ff"]
}, Open  ]],
Cell[536776, 11582, 611, 17, 50, "Input", "ExpressionUUID" -> \
"d2ea8fab-83d4-4391-8045-7bc067bf1869"],
Cell[CellGroupData[{
Cell[537412, 11603, 204, 4, 30, "Input", "ExpressionUUID" -> \
"a2b81b1a-7251-48c8-a4d1-8f83c2821e18"],
Cell[537619, 11609, 154, 3, 30, "Output", "ExpressionUUID" -> \
"e478ec1b-dfca-40a5-a384-e788cd361004"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537810, 11617, 191, 4, 30, "Input", "ExpressionUUID" -> \
"eb8e58f6-6607-413e-86e1-313eac890017"],
Cell[538004, 11623, 185, 4, 30, "Output", "ExpressionUUID" -> \
"ca66bdc1-42d5-44ba-8c21-37637b3682ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538226, 11632, 1570, 42, 202, "Input", "ExpressionUUID" -> \
"fee4fb36-4687-4055-a98f-4f5c7667ca9f"],
Cell[539799, 11676, 4112, 85, 355, "Output", "ExpressionUUID" -> \
"0dbcd075-7b22-431a-af39-cea5310d412c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543948, 11766, 883, 22, 30, "Input", "ExpressionUUID" -> \
"8fce6412-30bb-4c25-bf58-e79224ff73b8"],
Cell[544834, 11790, 979, 16, 50, "Output", "ExpressionUUID" -> \
"18bdf6b5-3d1c-4a54-9e29-72440e57bb16"]
}, Open  ]],
Cell[545828, 11809, 179, 3, 30, "Input", "ExpressionUUID" -> \
"8ca3ca28-b0eb-483b-ba3e-c0b45f57ff68"],
Cell[CellGroupData[{
Cell[546032, 11816, 203, 4, 30, "Input", "ExpressionUUID" -> \
"56197820-71da-40e3-b233-b2dead04201b"],
Cell[546238, 11822, 133, 3, 30, "Output", "ExpressionUUID" -> \
"8bd824e2-4e31-4563-908b-5c3ffb4f1d93"]
}, Open  ]],
Cell[546386, 11828, 86, 0, 30, "Input", "ExpressionUUID" -> \
"e1512b68-72e5-41cc-baaf-786efd0179d6"],
Cell[546475, 11830, 366, 10, 30, "Input", "ExpressionUUID" -> \
"ae7b5ae6-677e-41c5-b8de-02863feab6f0"],
Cell[546844, 11842, 544, 17, 29, "Input", "ExpressionUUID" -> \
"fadb3250-231e-4ac7-92d9-80b4e640d9e5"],
Cell[CellGroupData[{
Cell[547413, 11863, 504, 12, 30, "Input", "ExpressionUUID" -> \
"2665c078-cb46-4c24-8799-da508b249e28"],
Cell[547920, 11877, 2647, 41, 56, "Message", "ExpressionUUID" -> \
"cae3fba8-058b-4cc0-97d7-f1f952fd4f98"]
}, Open  ]],
Cell[550582, 11921, 203, 4, 30, "Input", "ExpressionUUID" -> \
"dbca12d5-94c5-4a63-87de-03be470472ea"],
Cell[CellGroupData[{
Cell[550810, 11929, 594, 16, 69, "Input", "ExpressionUUID" -> \
"98be17cb-0ddf-4ada-a743-dd494ee63f33"],
Cell[551407, 11947, 327, 5, 30, "Output", "ExpressionUUID" -> \
"77eee709-9339-465f-a2ff-ebce1777d64c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551771, 11957, 194, 4, 30, "Input", "ExpressionUUID" -> \
"a455248f-82c7-4d24-aa7c-7706254611b9"],
Cell[551968, 11963, 133, 3, 30, "Output", "ExpressionUUID" -> \
"c4acae8b-5bde-4f08-89ff-5e8cfd2813e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552138, 11971, 149, 3, 72, "Chapter", "ExpressionUUID" -> \
"c886c68b-ad21-421b-8480-3221bb502b52"],
Cell[552290, 11976, 550, 14, 30, "Input", "ExpressionUUID" -> \
"97c5a871-2fe5-4d62-b0a2-00c1e61a2ea5"],
Cell[552843, 11992, 421, 11, 50, "Input", "ExpressionUUID" -> \
"e76323b9-afac-4c40-bf0f-517b1c6e79c8"],
Cell[553267, 12005, 660, 17, 69, "Input", "ExpressionUUID" -> \
"2f5667b8-dc3c-49b2-b303-0a06fdd957c3"],
Cell[CellGroupData[{
Cell[553952, 12026, 1088, 26, 88, "Input", "ExpressionUUID" -> \
"f6f2dc67-558a-4104-8f4b-4c7c6e297fbe"],
Cell[555043, 12054, 11251, 233, 72, "Output", "ExpressionUUID" -> \
"cb221519-5cdd-492e-a161-da9d231df3b8"],
Cell[566297, 12289, 11253, 233, 72, "Output", "ExpressionUUID" -> \
"4e2607df-37b3-4f92-9b58-12ff1f4c1334"],
Cell[577553, 12524, 11259, 233, 72, "Output", "ExpressionUUID" -> \
"24e86d36-44d8-4187-bc1f-e66d4b6fbdb5"],
Cell[588815, 12759, 11257, 233, 72, "Output", "ExpressionUUID" -> \
"8ae9816c-f882-4179-8a14-71fc795d3353"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[600121, 12998, 152, 3, 72, "Chapter", "ExpressionUUID" -> \
"3dac5ada-5759-45d1-879e-068e79108775"],
Cell[600276, 13003, 273, 7, 30, "Input", "ExpressionUUID" -> \
"343a68d2-e605-4447-a6b9-0919bdb797d3"],
Cell[CellGroupData[{
Cell[600574, 13014, 469, 11, 50, "Input", "ExpressionUUID" -> \
"a1373676-dead-45a1-9a2f-f76b31fe9c5d"],
Cell[601046, 13027, 554, 13, 41, "Output", "ExpressionUUID" -> \
"739ca414-7e2e-4d7a-a18c-c87c9a5c0ba9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601637, 13045, 493, 14, 30, "Input", "ExpressionUUID" -> \
"2e8668c8-0a34-41f6-96f5-80ebe214c609"],
Cell[602133, 13061, 269, 6, 30, "Output", "ExpressionUUID" -> \
"2a072257-3767-47c8-9e4a-be79a95e2627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602439, 13072, 1488, 38, 126, "Input", "ExpressionUUID" -> \
"2433e2be-921d-49da-a837-4deb1cb3bec0"],
Cell[603930, 13112, 322, 6, 30, "Output", "ExpressionUUID" -> \
"fe583b85-247b-4e5d-8a1b-126ee29bcf9f"],
Cell[604255, 13120, 300, 5, 30, "Output", "ExpressionUUID" -> \
"385d5f31-1102-4ea2-b469-9ec06f9ac694"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604592, 13130, 2183, 57, 126, "Input", "ExpressionUUID" -> \
"a2454c4e-866a-4672-b5f8-358e9f5451de"],
Cell[606778, 13189, 265, 6, 30, "Output", "ExpressionUUID" -> \
"57dad9ba-b7ed-48a2-9429-40454793fec5"],
Cell[607046, 13197, 242, 5, 30, "Output", "ExpressionUUID" -> \
"974bfb28-a53e-4b03-b546-b7fa7152c003"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607325, 13207, 1555, 42, 107, "Input", "ExpressionUUID" -> \
"22366889-a174-4cf1-8210-8c99d51818d3"],
Cell[608883, 13251, 229, 4, 30, "Output", "ExpressionUUID" -> \
"186b61df-efb0-4b6a-8395-605a88c3b5d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609149, 13260, 2447, 66, 107, "Input", "ExpressionUUID" -> \
"5061141b-99c0-48d8-b8b0-8b9cd0011425"],
Cell[611599, 13328, 293, 6, 30, "Output", "ExpressionUUID" -> \
"b773291e-9d31-4030-b058-ed1d35102236"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611929, 13339, 947, 17, 164, "Input", "ExpressionUUID" -> \
"4e983d80-5f97-4f1f-8f95-8fda3f57b1d6"],
Cell[612879, 13358, 525, 11, 30, "Output", "ExpressionUUID" -> \
"d4c82ac4-151a-4d6d-ad41-5b25666bac99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613441, 13374, 649, 15, 88, "Input", "ExpressionUUID" -> \
"4649c501-63bd-4c75-a798-aedde37481bb"],
Cell[614093, 13391, 722, 14, 30, "Output", "ExpressionUUID" -> \
"931e2a92-d0be-4753-9db0-f141344be9d4"],
Cell[614818, 13407, 721, 14, 30, "Output", "ExpressionUUID" -> \
"268fa7cb-c147-4d2b-9904-e3cd4f9b3a9e"],
Cell[615542, 13423, 723, 14, 30, "Output", "ExpressionUUID" -> \
"e189ccbb-4d5c-4333-af7b-fcaeea9bba5e"],
Cell[616268, 13439, 721, 14, 30, "Output", "ExpressionUUID" -> \
"df6deae5-14ee-41a5-985e-40c583d4eede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617026, 13458, 450, 8, 88, "Input", "ExpressionUUID" -> \
"497ea1f1-fe53-4eca-a382-431bc2869737"],
Cell[617479, 13468, 518, 8, 30, "Output", "ExpressionUUID" -> \
"04f3fe47-c6aa-47d0-b83e-84380afe858a"],
Cell[618000, 13478, 517, 8, 30, "Output", "ExpressionUUID" -> \
"04f4df6a-643d-4c5a-8a3c-b30bc47b1ff9"],
Cell[618520, 13488, 518, 8, 30, "Output", "ExpressionUUID" -> \
"d6666cdc-ba98-4bc6-99f0-ea439f070d68"],
Cell[619041, 13498, 518, 8, 30, "Output", "ExpressionUUID" -> \
"8fe3e44e-eebc-48c8-a5a8-220d43085bd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619596, 13511, 229, 4, 30, "Input", "ExpressionUUID" -> \
"f3f5e26f-6aae-4c63-b66a-2c0c68bc67ed"],
Cell[619828, 13517, 4848, 134, 180, "Output", "ExpressionUUID" -> \
"5ecc2382-1e7a-4c40-a487-81ae94cb0d6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[624713, 13656, 258, 5, 30, "Input", "ExpressionUUID" -> \
"0c7595f2-3dad-45d5-be47-728f970b64db"],
Cell[624974, 13663, 150, 3, 30, "Output", "ExpressionUUID" -> \
"1610580e-4484-46ac-af5d-96d241740ad4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625161, 13671, 305, 9, 30, "Input", "ExpressionUUID" -> \
"580dccb0-2feb-43d1-8107-4d8a0e0fab95"],
Cell[625469, 13682, 1784, 48, 539, "Output", "ExpressionUUID" -> \
"c0a73b8a-c0c8-4dc4-aaca-9240727a0ce6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627290, 13735, 91, 0, 30, "Input", "ExpressionUUID" -> \
"8ca62d24-9ad4-4be4-b32b-c26c9750f3fb"],
Cell[627384, 13737, 134, 3, 30, "Output", "ExpressionUUID" -> \
"2492abc7-f3af-4a45-b1cd-70c3bf9fdc0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627555, 13745, 627, 11, 202, "Input", "ExpressionUUID" -> \
"722bc0f1-816c-4298-ac98-ae961762bf78"],
Cell[628185, 13758, 392, 8, 30, "Output", "ExpressionUUID" -> \
"9665615b-0627-408a-a585-c7c96242df12"]
}, Open  ]],
Cell[628592, 13769, 411, 8, 30, "Input", "ExpressionUUID" -> \
"80a73561-ae4c-40f9-a048-ea17ee2e1666"],
Cell[CellGroupData[{
Cell[629028, 13781, 129, 3, 30, "Input", "ExpressionUUID" -> \
"ba1d1e9d-366e-4ced-ba1d-2bfa84ac05be"],
Cell[629160, 13786, 451, 9, 30, "Output", "ExpressionUUID" -> \
"b1aac7bd-d36c-4874-8b95-4ba89664b263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629648, 13800, 199, 4, 30, "Input", "ExpressionUUID" -> \
"805a8233-b5cb-4b63-b804-4d35b16bdfbf"],
Cell[629850, 13806, 13257, 320, 72, "Output", "ExpressionUUID" -> \
"50f55d7c-2377-408e-bd3c-c3c83e4d3f08"]
}, Open  ]],
Cell[643122, 14129, 1767, 31, 29, "Input", "ExpressionUUID" -> \
"a116befa-4c4e-4909-961b-2300b6bbbb9a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[644892, 14162, 170, 3, 30, "Input", "ExpressionUUID" -> \
"46306d3f-f7dc-4be5-ad2d-28a15b828f34"],
Cell[CellGroupData[{
Cell[645087, 14169, 236, 6, 30, "Input", "ExpressionUUID" -> \
"4e385809-19be-40bb-9577-1b13178c3d93"],
Cell[645326, 14177, 1073, 20, 69, "Output", "ExpressionUUID" -> \
"6530172d-4094-45a9-9b3e-e0f5e8a7b91b"]
}, Open  ]],
Cell[646414, 14200, 884, 26, 30, "Input", "ExpressionUUID" -> \
"b7e2b467-eddf-4686-93c8-8d08095659cc"],
Cell[CellGroupData[{
Cell[647323, 14230, 967, 22, 69, "Input", "ExpressionUUID" -> \
"884f6216-d63a-4429-bfb8-c6b6cf5c0ecd"],
Cell[648293, 14254, 10868, 224, 103, "Output", "ExpressionUUID" -> \
"b6561f94-480b-4abd-a14c-a879c198a8e7"],
Cell[659164, 14480, 11286, 234, 72, "Output", "ExpressionUUID" -> \
"a3442f4a-d070-4554-9b74-1a2c9ad430c4"],
Cell[670453, 14716, 11284, 234, 72, "Output", "ExpressionUUID" -> \
"91704762-d0df-4d13-bc6d-de1b0b630bb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681774, 14955, 129, 1, 30, "Input", "ExpressionUUID" -> \
"338dbb95-7896-4895-8c60-86f1fb7d10a7"],
Cell[681906, 14958, 4932, 136, 180, "Output", "ExpressionUUID" -> \
"95776d7c-3b90-4c75-a118-a55fb51c2db5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686875, 15099, 182, 4, 30, "Input", "ExpressionUUID" -> \
"bb1a0840-61ea-4939-b7f7-249b9e8c07bb"],
Cell[687060, 15105, 419, 9, 30, "Output", "ExpressionUUID" -> \
"710b74ab-aa79-4c3f-9f20-f3ff1eb29e8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687516, 15119, 392, 11, 30, "Input", "ExpressionUUID" -> \
"b3cda89d-8f6f-4002-af57-110ee06e085e"],
Cell[687911, 15132, 372, 7, 30, "Output", "ExpressionUUID" -> \
"6f61d273-3be2-4c75-a2ab-dee2cd0acf10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688320, 15144, 422, 12, 30, "Input", "ExpressionUUID" -> \
"7ac36ce4-b816-49ce-b48e-26d060fce7bb"],
Cell[688745, 15158, 247, 5, 30, "Output", "ExpressionUUID" -> \
"9c7ec43a-59bf-46ba-b201-6e6899814311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689029, 15168, 1270, 37, 69, "Input", "ExpressionUUID" -> \
"a453a067-c416-4da6-b327-b2231bad9c0e"],
Cell[690302, 15207, 549, 11, 30, "Output", "ExpressionUUID" -> \
"57a91829-6984-4afe-ae60-5d3e43b097d3"],
Cell[690854, 15220, 547, 11, 30, "Output", "ExpressionUUID" -> \
"17675525-4025-4ea0-a9cc-8bd1e6257753"],
Cell[691404, 15233, 548, 11, 30, "Output", "ExpressionUUID" -> \
"1c7b76ec-88f8-48d7-be01-d8d5fc972a08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[691989, 15249, 400, 12, 30, "Input", "ExpressionUUID" -> \
"2777fb7b-c5f3-455f-ba4e-717d433ca096"],
Cell[692392, 15263, 290, 4, 30, "Output", "ExpressionUUID" -> \
"7e8b144c-65b1-4310-8627-4622122855b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692719, 15272, 500, 12, 30, "Input", "ExpressionUUID" -> \
"7fcde774-a47a-47d3-b757-064f5e0cea7a"],
Cell[693222, 15286, 11153, 232, 72, "Output", "ExpressionUUID" -> \
"6d318778-e760-4d18-90b5-09d651ffeb8b"]
}, Open  ]],
Cell[704390, 15521, 298, 6, 30, "Input", "ExpressionUUID" -> \
"49fc14ba-6f6d-4025-88be-0ab896e61563"],
Cell[704691, 15529, 824, 15, 69, "Input", "ExpressionUUID" -> \
"28d03da2-c924-4552-b8ab-4325a9be3447"],
Cell[CellGroupData[{
Cell[705540, 15548, 306, 6, 30, "Input", "ExpressionUUID" -> \
"e62233d7-d9af-44bf-a817-bac4ec99ae57"],
Cell[705849, 15556, 448, 9, 30, "Output", "ExpressionUUID" -> \
"cde9c4b6-3f1e-4d31-8755-0455e4becb52"]
}, Open  ]],
Cell[706312, 15568, 732, 21, 50, "Input", "ExpressionUUID" -> \
"38485d2d-a16d-4a7f-aa0b-bb16c5c48fc6"],
Cell[CellGroupData[{
Cell[707069, 15593, 1016, 28, 69, "Input", "ExpressionUUID" -> \
"a91f9070-da72-40f1-a20c-a499de9cffac"],
Cell[708088, 15623, 11155, 232, 72, "Output", "ExpressionUUID" -> \
"35f93506-12ff-46e7-b0f1-2d46bda9f330"],
Cell[719246, 15857, 1170, 31, 50, "Output", "ExpressionUUID" -> \
"68da704b-01b6-4fc0-b25d-657bc1df47d9"],
Cell[720419, 15890, 211, 5, 30, "Output", "ExpressionUUID" -> \
"94c5637e-ed5d-4af9-b920-44d8d9db47aa"]
}, Open  ]],
Cell[720645, 15898, 498, 12, 30, "Input", "ExpressionUUID" -> \
"973d268d-4f0f-41af-93ca-83ddae548e1f"],
Cell[CellGroupData[{
Cell[721168, 15914, 973, 27, 69, "Input", "ExpressionUUID" -> \
"4d5c5673-f401-45b9-8380-2c3c03e4563e"],
Cell[722144, 15943, 9172, 188, 72, "Output", "ExpressionUUID" -> \
"c2fcb8da-c2b5-4961-bdc4-cca6816718ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[731353, 16136, 736, 14, 202, "Input", "ExpressionUUID" -> \
"4adc42dd-59a9-48f6-a9dc-0312acaab9ee"],
Cell[732092, 16152, 506, 9, 30, "Output", "ExpressionUUID" -> \
"b6e60830-2574-4d92-888f-69e89698a6b0"]
}, Open  ]],
Cell[732613, 16164, 411, 8, 30, "Input", "ExpressionUUID" -> \
"016fe1a8-0a9d-4717-a538-d8830335a99a"],
Cell[CellGroupData[{
Cell[733049, 16176, 356, 9, 50, "Input", "ExpressionUUID" -> \
"034f0aba-6437-4cea-8c56-1eeed661167f"],
Cell[733408, 16187, 176, 3, 30, "Output", "ExpressionUUID" -> \
"bb2f822d-1362-4fc0-8c8d-334bc6fec069"],
Cell[733587, 16192, 173, 3, 30, "Output", "ExpressionUUID" -> \
"6213d1dd-c708-49fb-95c5-084331baf987"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733797, 16200, 415, 10, 50, "Input", "ExpressionUUID" -> \
"0c34febc-7856-44e8-ac23-46b4d2cd9cb9"],
Cell[734215, 16212, 220, 4, 30, "Output", "ExpressionUUID" -> \
"f2b5852a-d32b-4637-87ec-e8a0cee3f9e7"],
Cell[734438, 16218, 201, 3, 30, "Output", "ExpressionUUID" -> \
"fd86b751-f263-4e15-8d3f-02cec2134664"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734676, 16226, 3360, 79, 297, "Input", "ExpressionUUID" -> \
"b2fba9de-35c8-422f-971a-9a2083a66ca2"],
Cell[738039, 16307, 41968, 744, 374, "Output", "ExpressionUUID" -> \
"7fd36a55-88c7-452c-a1e2-3eca93d810a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780044, 17056, 666, 13, 202, "Input", "ExpressionUUID" -> \
"5c5e0d34-dfb7-446a-8fe8-f1fd56deb411"],
Cell[780713, 17071, 354, 8, 30, "Output", "ExpressionUUID" -> \
"8ee40fc8-f70f-419a-b49e-f601fd8a90b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[781104, 17084, 417, 10, 50, "Input", "ExpressionUUID" -> \
"e52b1950-9453-41b7-9867-25db8ff9a37c"],
Cell[781524, 17096, 218, 4, 30, "Output", "ExpressionUUID" -> \
"5270f7b4-00ab-416d-9349-90f27cf17e79"],
Cell[781745, 17102, 199, 3, 30, "Output", "ExpressionUUID" -> \
"d305ee53-45ca-4416-abff-607877cf5bb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[781981, 17110, 457, 10, 50, "Input", "ExpressionUUID" -> \
"c91b2828-33ef-4e5f-8c62-1a9d880fd508"],
Cell[782441, 17122, 247, 5, 30, "Output", "ExpressionUUID" -> \
"ed6c10ac-3cb0-4e25-8699-e1813a496dd3"],
Cell[782691, 17129, 230, 4, 30, "Output", "ExpressionUUID" -> \
"9d212a02-524e-4193-8111-c63ab862e0ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782958, 17138, 1719, 43, 202, "Input", "ExpressionUUID" -> \
"a06e9840-822d-467e-a2ed-b1b8c58d8e30"],
Cell[784680, 17183, 122007, 2051, 367, 107302, 1809, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"1c9a3720-5c20-4742-b962-0f80f14f5c4a"]
}, Open  ]],
Cell[906702, 19237, 627, 11, 202, "Input", "ExpressionUUID" -> \
"524ff43f-d801-4a52-b01f-8eb780a2cbfe"],
Cell[CellGroupData[{
Cell[907354, 19252, 504, 13, 126, "Input", "ExpressionUUID" -> \
"487c560b-310d-47c0-ba52-9aa5c51ffb3e"],
Cell[907861, 19267, 210, 5, 30, "Output", "ExpressionUUID" -> \
"844f9497-c88e-4678-97a6-451a18a6bf56"]
}, Open  ]],
Cell[908086, 19275, 353, 6, 30, "Input", "ExpressionUUID" -> \
"342bfdb9-f232-41a8-92fb-5d1d6e8d48a8"],
Cell[CellGroupData[{
Cell[908464, 19285, 187, 4, 30, "Input", "ExpressionUUID" -> \
"fefb6a19-d9d1-47f2-9611-1028da3a7442"],
Cell[908654, 19291, 138, 3, 30, "Output", "ExpressionUUID" -> \
"254449c8-470b-4a40-8b6e-3c7ce3c922d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908829, 19299, 471, 12, 50, "Input", "ExpressionUUID" -> \
"8e97c912-f0d8-4fb2-b023-45913132b2ee"],
Cell[909303, 19313, 9104, 187, 72, "Output", "ExpressionUUID" -> \
"59ffd8e8-5902-42fc-8bb3-70fb5ee0fdf8"],
Cell[918410, 19502, 10707, 232, 82, "Output", "ExpressionUUID" -> \
"80206d16-5550-4371-9cef-938a95b227cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[929154, 19739, 194, 4, 30, "Input", "ExpressionUUID" -> \
"50deee02-a030-4a70-838b-dfaa23fc290a"],
Cell[929351, 19745, 164, 3, 30, "Output", "ExpressionUUID" -> \
"0ae9989b-f985-42ad-b18d-5c308037eb43"]
}, Open  ]],
Cell[929530, 19751, 179, 4, 30, "Input", "ExpressionUUID" -> \
"2f1ca6f9-63e7-4dd6-bf76-55655ff851cf"],
Cell[CellGroupData[{
Cell[929734, 19759, 178, 4, 30, "Input", "ExpressionUUID" -> \
"c5e083a2-240a-4a0a-bab7-22680bf58f43"],
Cell[929915, 19765, 136, 3, 30, "Output", "ExpressionUUID" -> \
"de88030e-cea6-4fac-83f8-5282530c1ef5"]
}, Open  ]],
Cell[930066, 19771, 128, 3, 30, "Input", "ExpressionUUID" -> \
"590c6936-d664-42b3-b0da-e9af1b3c8e7f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[930243, 19780, 170, 3, 101, "Title", "ExpressionUUID" -> \
"afb193fa-4c96-4c52-9463-cb7026f982c8"],
Cell[CellGroupData[{
Cell[930438, 19787, 180, 4, 30, "Input", "ExpressionUUID" -> \
"183732e3-c3f3-4da4-b783-391481d68c09"],
Cell[930621, 19793, 564, 11, 21, "Message", "ExpressionUUID" -> \
"0b7edc07-72f4-4004-9892-a5a71b7314da"]
}, Open  ]],
Cell[931200, 19807, 1122, 32, 69, "Input", "ExpressionUUID" -> \
"70eef7af-3307-4bfc-9e8a-6fb1881f7714"],
Cell[932325, 19841, 2763, 55, 373, "Input", "ExpressionUUID" -> \
"2977c5ba-4f37-4a8c-bcf2-8f9bbdbcd4ed"],
Cell[CellGroupData[{
Cell[935113, 19900, 184, 4, 30, "Input", "ExpressionUUID" -> \
"6e61a752-7f60-4f60-9f1b-0ead683bdb0a"],
Cell[CellGroupData[{
Cell[935322, 19908, 196, 4, 41, "Print", "ExpressionUUID" -> \
"a13acdb4-040d-4e3e-a892-a697dbc2c415",
 CellTags->"Info193714306908-7313519"],
Cell[935521, 19914, 1875, 50, 53, "Print", "ExpressionUUID" -> \
"5d7e7306-f14b-49e8-935c-33fa98f3b209",
 CellTags->"Info193714306908-7313519"]
}, Open  ]]
}, Open  ]],
Cell[937423, 19968, 1141, 27, 88, "Input", "ExpressionUUID" -> \
"71b37168-52d3-4568-bf0b-cd7dd739ac2b"],
Cell[938567, 19997, 16347, 388, 1228, "Input", "ExpressionUUID" -> \
"32f39eff-ee7f-4f5e-8e64-23ef2a553151"],
Cell[CellGroupData[{
Cell[954939, 20389, 846, 18, 69, "Input", "ExpressionUUID" -> \
"497a5295-3aa0-482e-85aa-5e1e2b9c8b42"],
Cell[955788, 20409, 194977, 4244, 355, "Output", "ExpressionUUID" -> \
"1d51ab44-9c07-48e4-9961-f04647256d16"]
}, Open  ]],
Cell[1150780, 24656, 131, 3, 30, "Input", "ExpressionUUID" -> \
"d08a252e-26fe-4ccb-ad91-98e1c94dae60"],
Cell[1150914, 24661, 1756, 37, 259, "Input", "ExpressionUUID" -> \
"bc8026a4-2e4e-4b45-a5c3-616e98d946a6"],
Cell[1152673, 24700, 1141, 27, 88, "Input", "ExpressionUUID" -> \
"7f55c65c-2e71-48ff-ac6d-d13ed789711f"],
Cell[1153817, 24729, 7439, 166, 715, "Input", "ExpressionUUID" -> \
"ca3f9d97-856e-40c0-a77c-b56b48b1992f"],
Cell[CellGroupData[{
Cell[1161281, 24899, 846, 18, 69, "Input", "ExpressionUUID" -> \
"038ddb1f-fe3d-41c4-81a4-2798cf58976f"],
Cell[1162130, 24919, 79617, 1733, 355, "Output", "ExpressionUUID" -> \
"7f78df6e-dd74-4c03-83ef-de3f9b45cb1e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1241796, 26658, 154, 3, 101, "Title", "ExpressionUUID" -> \
"e1f5555c-45a6-4bb7-b123-df20f503ca3c"],
Cell[CellGroupData[{
Cell[1241975, 26665, 355, 7, 30, "Input", "ExpressionUUID" -> \
"0a013aed-9632-4d1d-be81-01a8da6c1e07"],
Cell[1242333, 26674, 1486, 36, 33, "Output", "ExpressionUUID" -> \
"e9ba1ea3-8c86-4984-b540-dce10190c615"]
}, Open  ]],
Cell[1243834, 26713, 610, 15, 30, "Input", "ExpressionUUID" -> \
"bcc4b03f-36ce-48e9-a01f-31c37688fc2b"],
Cell[CellGroupData[{
Cell[1244469, 26732, 184, 4, 30, "Input", "ExpressionUUID" -> \
"cc9a47bd-d54a-462c-a042-998d0f1c5f7d"],
Cell[CellGroupData[{
Cell[1244678, 26740, 196, 4, 41, "Print", "ExpressionUUID" -> \
"8ed13560-1c37-4c58-bbff-bd7f9c028bba",
 CellTags->"Info613714206102-9942316"],
Cell[1244877, 26746, 1873, 50, 53, "Print", "ExpressionUUID" -> \
"dd38d8a7-43b3-44b0-93b0-3267615ac4e2",
 CellTags->"Info613714206102-9942316"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246799, 26802, 32045, 733, 2558, "Input", "ExpressionUUID" -> \
"60c654ba-debb-4eef-ba3c-5ba0e4ab8886"],
Cell[1278847, 27537, 11016, 228, 30, "Output", "ExpressionUUID" -> \
"dc634c5d-05e4-42ef-8c76-13a70833e30c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1289900, 27770, 736, 20, 126, "Input", "ExpressionUUID" -> \
"1dbff34a-a4e9-42e4-a004-f29d1b18cabc"],
Cell[1290639, 27792, 191286, 4164, 356, "Output", "ExpressionUUID" -> \
"ae4dee01-acb8-42d1-b73c-af801b9420cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1481962, 31961, 260, 5, 30, "Input", "ExpressionUUID" -> \
"5e8f2283-f674-4ac9-8750-91330082260a"],
Cell[1482225, 31968, 1415, 51, 30, "Output", "ExpressionUUID" -> \
"bdc524d3-afdf-4403-b757-85497557ced4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483677, 32024, 807, 16, 50, "Input", "ExpressionUUID" -> \
"bee2183d-50d8-4cb7-84c1-5483a338f89b"],
Cell[1484487, 32042, 192093, 4174, 355, "Output", "ExpressionUUID" -> \
"a830ae75-c8f5-4a95-9790-2f88ff1760de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676617, 36221, 83, 0, 30, "Input", "ExpressionUUID" -> \
"e0ff3496-c596-4930-891c-9a3b50577d79"],
Cell[1676703, 36223, 150, 3, 30, "Output", "ExpressionUUID" -> \
"33f3958b-85ca-46f6-b6b3-fc256d8f5e7f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1676902, 36232, 148, 3, 101, "Title", "ExpressionUUID" -> \
"a3aa5866-0f28-4e9f-929b-6ae049d873b8"],
Cell[1677053, 36237, 203, 4, 30, "Input", "ExpressionUUID" -> \
"e5d44943-b9ad-47f6-bf70-72fdd39e2eda"],
Cell[CellGroupData[{
Cell[1677281, 36245, 539, 16, 30, "Input", "ExpressionUUID" -> \
"0bc6f251-aeda-41a4-811e-d10e999ab73a"],
Cell[1677823, 36263, 1093, 30, 33, "Output", "ExpressionUUID" -> \
"4783d4af-1c6f-44d7-aed8-eeda9e1dcf74"]
}, Open  ]]
}, Open  ]]
}
]
*)

